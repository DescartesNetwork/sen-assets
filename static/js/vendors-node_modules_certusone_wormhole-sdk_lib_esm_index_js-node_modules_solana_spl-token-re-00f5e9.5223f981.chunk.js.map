{"version":3,"file":"static/js/vendors-node_modules_certusone_wormhole-sdk_lib_esm_index_js-node_modules_solana_spl-token-re-00f5e9.5223f981.chunk.js","mappings":"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","sources":["../node_modules/@certusone/wormhole-sdk/lib/esm/bridge/getEmitterAddress.js","../node_modules/@certusone/wormhole-sdk/lib/esm/bridge/getSignedVAAHash.js","../node_modules/@certusone/wormhole-sdk/lib/esm/bridge/parseSequenceFromLog.js","../node_modules/@certusone/wormhole-sdk/lib/esm/ethers-contracts/factories/Bridge__factory.js","../node_modules/@certusone/wormhole-sdk/lib/esm/ethers-contracts/factories/Implementation__factory.js","../node_modules/@certusone/wormhole-sdk/lib/esm/ethers-contracts/factories/TokenImplementation__factory.js","../node_modules/@certusone/wormhole-sdk/lib/esm/proto/publicrpc/v1/publicrpc.js","../node_modules/@certusone/wormhole-sdk/lib/esm/rpc/getSignedVAA.js","../node_modules/@certusone/wormhole-sdk/lib/esm/solana/getBridgeFeeIx.js","../node_modules/@certusone/wormhole-sdk/lib/esm/solana/rust.js","../node_modules/@certusone/wormhole-sdk/lib/esm/solana/postVaa.js","../node_modules/@certusone/wormhole-sdk/lib/esm/solana/wasm.js","../node_modules/@certusone/wormhole-sdk/lib/esm/terra/address.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/attest.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/createWrapped.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/getForeignAsset.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/getIsTransferCompleted.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/getIsWrappedAsset.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/getOriginalAsset.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/redeem.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/transfer.js","../node_modules/@certusone/wormhole-sdk/lib/esm/utils/array.js","../node_modules/@certusone/wormhole-sdk/lib/esm/utils/consts.js","../node_modules/@certusone/wormhole-sdk/lib/esm/utils/createNonce.js","../../src.ts/abi-coder.ts","../../src.ts/fragments.ts","../../src.ts/interface.ts","../../src.ts/index.ts","../../src.ts/browser-base64.ts","../../src.ts/bignumber.ts","../../src.ts/fixednumber.ts","../../src.ts/hashes.ts","../../src.ts/_version.ts","../../src.ts/message.ts","../../src.ts/namehash.ts","../../src.ts/typed-data.ts","../../src.ts/crowdsale.ts","../../src.ts/inspect.ts","../../src.ts/keystore.ts","../../src.ts/utils.ts","../node_modules/@ethersproject/json-wallets/node_modules/aes-js/index.js","../../src.ts/browser-pbkdf2.ts","../../src.ts/browser-random.ts","../../src.ts/shuffle.ts","../../src.ts/browser-sha2.ts","../../src.ts/types.ts","../../../../node_modules/minimalistic-assert/index.js","../../../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../../../node_modules/elliptic/lib/elliptic/utils.js","../../../../node_modules/elliptic/lib/elliptic/curve/base.js","../../../../node_modules/inherits/inherits_browser.js","../../../../node_modules/elliptic/lib/elliptic/curve/short.js","../../../../node_modules/elliptic/lib/elliptic/curve/index.js","../../../../node_modules/elliptic/lib/elliptic/curves.js","../../../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../../../node_modules/elliptic/lib/elliptic/ec/key.js","../../../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../../../node_modules/elliptic/lib/elliptic/ec/index.js","../elliptic.js","../../../../node_modules/elliptic/lib/elliptic.js","../../src.ts/bytes32.ts","../../src.ts/idna.ts","../../src.ts/utf8.ts","../../src.ts/browser-geturl.ts","../../src.ts/wordlist.ts","../../src.ts/lang-en.ts","../../src.ts/browser-wordlists.ts","../../../../src/lib/tokenlist.ts","../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/assert.js","../../node_modules/buffer-layout/lib/Layout.js","../../client/layout.js","../../client/util/send-and-confirm-transaction.js","../../client/token.js","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/account.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction-constants.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/util/bigint.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../src/compute-budget.ts","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/util/tx-expiry-custom-errors.ts","../../src/connection.ts","../../src/util/url.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../../src/util/send-and-confirm-raw-transaction.ts","../../src/util/cluster.ts","../../src/index.ts","../node_modules/axios/index.js","../node_modules/bech32/dist/index.js","../node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/scrypt-js/scrypt.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey } from \"@solana/web3.js\";\nimport { bech32 } from \"bech32\";\nimport { arrayify, zeroPad } from \"ethers/lib/utils\";\nimport { importTokenWasm } from \"../solana/wasm\";\nexport function getEmitterAddressEth(contractAddress) {\n    return Buffer.from(zeroPad(arrayify(contractAddress), 32)).toString(\"hex\");\n}\nexport function getEmitterAddressSolana(programAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var emitter_address;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    emitter_address = (_a.sent()).emitter_address;\n                    return [2 /*return*/, Buffer.from(zeroPad(new PublicKey(emitter_address(programAddress)).toBytes(), 32)).toString(\"hex\")];\n            }\n        });\n    });\n}\nexport function getEmitterAddressTerra(programAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, Buffer.from(zeroPad(bech32.fromWords(bech32.decode(programAddress).words), 32)).toString(\"hex\")];\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { importCoreWasm } from \"../solana/wasm\";\nimport { ethers } from \"ethers\";\nimport { uint8ArrayToHex } from \"..\";\nexport function getSignedVAAHash(signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parse_vaa, parsedVAA, body;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    parse_vaa = (_a.sent()).parse_vaa;\n                    parsedVAA = parse_vaa(signedVAA);\n                    body = [\n                        ethers.utils.defaultAbiCoder.encode([\"uint32\"], [parsedVAA.timestamp]).substring(2 + (64 - 8)),\n                        ethers.utils.defaultAbiCoder.encode([\"uint32\"], [parsedVAA.nonce]).substring(2 + (64 - 8)),\n                        ethers.utils.defaultAbiCoder.encode([\"uint16\"], [parsedVAA.emitter_chain]).substring(2 + (64 - 4)),\n                        ethers.utils.defaultAbiCoder.encode([\"bytes32\"], [parsedVAA.emitter_address]).substring(2),\n                        ethers.utils.defaultAbiCoder.encode([\"uint64\"], [parsedVAA.sequence]).substring(2 + (64 - 16)),\n                        ethers.utils.defaultAbiCoder.encode([\"uint8\"], [parsedVAA.consistency_level]).substring(2 + (64 - 2)),\n                        uint8ArrayToHex(parsedVAA.payload),\n                    ];\n                    return [2 /*return*/, ethers.utils.solidityKeccak256([\"bytes\"], [ethers.utils.solidityKeccak256([\"bytes\"], [\"0x\" + body.join(\"\")])])];\n            }\n        });\n    });\n}\n","import { Implementation__factory } from \"../ethers-contracts\";\nexport function parseSequenceFromLogEth(receipt, bridgeAddress) {\n    // TODO: dangerous!(?)\n    var bridgeLog = receipt.logs.filter(function (l) {\n        return l.address === bridgeAddress;\n    })[0];\n    var sequence = Implementation__factory.createInterface().parseLog(bridgeLog).args.sequence;\n    return sequence.toString();\n}\nexport function parseSequencesFromLogEth(receipt, bridgeAddress) {\n    // TODO: dangerous!(?)\n    var bridgeLogs = receipt.logs.filter(function (l) {\n        return l.address === bridgeAddress;\n    });\n    return bridgeLogs.map(function (bridgeLog) {\n        var sequence = Implementation__factory.createInterface().parseLog(bridgeLog).args.sequence;\n        return sequence.toString();\n    });\n}\nexport function parseSequenceFromLogTerra(info) {\n    // Scan for the Sequence attribute in all the outputs of the transaction.\n    // TODO: Make this not horrible.\n    var sequence = \"\";\n    var jsonLog = JSON.parse(info.raw_log);\n    jsonLog.map(function (row) {\n        row.events.map(function (event) {\n            event.attributes.map(function (attribute) {\n                if (attribute.key === \"message.sequence\") {\n                    sequence = attribute.value;\n                }\n            });\n        });\n    });\n    console.log(\"Terra Sequence: \", sequence);\n    return sequence.toString();\n}\nexport function parseSequencesFromLogTerra(info) {\n    // Scan for the Sequence attribute in all the outputs of the transaction.\n    // TODO: Make this not horrible.\n    var sequences = [];\n    var jsonLog = JSON.parse(info.raw_log);\n    jsonLog.map(function (row) {\n        row.events.map(function (event) {\n            event.attributes.map(function (attribute) {\n                if (attribute.key === \"message.sequence\") {\n                    sequences.push(attribute.value.toString());\n                }\n            });\n        });\n    });\n    return sequences;\n}\nvar SOLANA_SEQ_LOG = \"Program log: Sequence: \";\nexport function parseSequenceFromLogSolana(info) {\n    var _a, _b;\n    // TODO: better parsing, safer\n    var sequence = (_b = (_a = info.meta) === null || _a === void 0 ? void 0 : _a.logMessages) === null || _b === void 0 ? void 0 : _b.filter(function (msg) { return msg.startsWith(SOLANA_SEQ_LOG); })[0].replace(SOLANA_SEQ_LOG, \"\");\n    if (!sequence) {\n        throw new Error(\"sequence not found\");\n    }\n    return sequence.toString();\n}\nexport function parseSequencesFromLogSolana(info) {\n    var _a, _b;\n    // TODO: better parsing, safer\n    return (_b = (_a = info.meta) === null || _a === void 0 ? void 0 : _a.logMessages) === null || _b === void 0 ? void 0 : _b.filter(function (msg) { return msg.startsWith(SOLANA_SEQ_LOG); }).map(function (msg) { return msg.replace(SOLANA_SEQ_LOG, \"\"); });\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { utils, Contract, ContractFactory } from \"ethers\";\nvar _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"previousAdmin\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newAdmin\",\n                type: \"address\",\n            },\n        ],\n        name: \"AdminChanged\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"beacon\",\n                type: \"address\",\n            },\n        ],\n        name: \"BeaconUpgraded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldContract\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newContract\",\n                type: \"address\",\n            },\n        ],\n        name: \"ContractUpgraded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"implementation\",\n                type: \"address\",\n            },\n        ],\n        name: \"Upgraded\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"WETH\",\n        outputs: [\n            {\n                internalType: \"contract IWETH\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint16\",\n                name: \"chainId_\",\n                type: \"uint16\",\n            },\n        ],\n        name: \"bridgeContracts\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"chainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"governanceActionIsConsumed\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"governanceChainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"governanceContract\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"impl\",\n                type: \"address\",\n            },\n        ],\n        name: \"isInitialized\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"isTransferCompleted\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n        ],\n        name: \"isWrappedAsset\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n        ],\n        name: \"outstandingBridged\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseRegisterChain\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"emitterChainID\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"emitterAddress\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.RegisterChain\",\n                name: \"chain\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseUpgrade\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"newContract\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.UpgradeContract\",\n                name: \"chain\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVM\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"registerChain\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"tokenImplementation\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVM\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"upgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"wormhole\",\n        outputs: [\n            {\n                internalType: \"contract IWormhole\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint16\",\n                name: \"tokenChainId\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"tokenAddress\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"wrappedAsset\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"receive\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"tokenAddress\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"attestToken\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint16\",\n                name: \"recipientChain\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"recipient\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"arbiterFee\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"wrapAndTransferETH\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"recipientChain\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"recipient\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"arbiterFee\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"transferTokens\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"updateWrapped\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"createWrapped\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"completeTransfer\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"completeTransferAndUnwrapETH\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"payloadID\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"tokenAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"tokenChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"decimals\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"symbol\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"name\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.AssetMeta\",\n                name: \"meta\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"encodeAssetMeta\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"payloadID\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"amount\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"tokenAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"tokenChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"to\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"toChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"fee\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.Transfer\",\n                name: \"transfer\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"encodeTransfer\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseAssetMeta\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"payloadID\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"tokenAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"tokenChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"decimals\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"symbol\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"name\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.AssetMeta\",\n                name: \"meta\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseTransfer\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"payloadID\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"amount\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"tokenAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"tokenChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"to\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"toChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"fee\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.Transfer\",\n                name: \"transfer\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n];\nvar _bytecode = \"\";\nvar Bridge__factory = /** @class */ (function (_super) {\n    __extends(Bridge__factory, _super);\n    function Bridge__factory(signer) {\n        return _super.call(this, _abi, _bytecode, signer) || this;\n    }\n    Bridge__factory.prototype.deploy = function (overrides) {\n        return _super.prototype.deploy.call(this, overrides || {});\n    };\n    Bridge__factory.prototype.getDeployTransaction = function (overrides) {\n        return _super.prototype.getDeployTransaction.call(this, overrides || {});\n    };\n    Bridge__factory.prototype.attach = function (address) {\n        return _super.prototype.attach.call(this, address);\n    };\n    Bridge__factory.prototype.connect = function (signer) {\n        return _super.prototype.connect.call(this, signer);\n    };\n    Bridge__factory.createInterface = function () {\n        return new utils.Interface(_abi);\n    };\n    Bridge__factory.connect = function (address, signerOrProvider) {\n        return new Contract(address, _abi, signerOrProvider);\n    };\n    Bridge__factory.bytecode = _bytecode;\n    Bridge__factory.abi = _abi;\n    return Bridge__factory;\n}(ContractFactory));\nexport { Bridge__factory };\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { utils, Contract, ContractFactory } from \"ethers\";\nvar _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"previousAdmin\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newAdmin\",\n                type: \"address\",\n            },\n        ],\n        name: \"AdminChanged\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"beacon\",\n                type: \"address\",\n            },\n        ],\n        name: \"BeaconUpgraded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldContract\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newContract\",\n                type: \"address\",\n            },\n        ],\n        name: \"ContractUpgraded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint32\",\n                name: \"index\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"GuardianSetAdded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"sender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"payload\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint8\",\n                name: \"consistencyLevel\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"LogMessagePublished\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"implementation\",\n                type: \"address\",\n            },\n        ],\n        name: \"Upgraded\",\n        type: \"event\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"fallback\",\n    },\n    {\n        inputs: [],\n        name: \"chainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getCurrentGuardianSetIndex\",\n        outputs: [\n            {\n                internalType: \"uint32\",\n                name: \"\",\n                type: \"uint32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint32\",\n                name: \"index\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"getGuardianSet\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address[]\",\n                        name: \"keys\",\n                        type: \"address[]\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"expirationTime\",\n                        type: \"uint32\",\n                    },\n                ],\n                internalType: \"struct Structs.GuardianSet\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getGuardianSetExpiry\",\n        outputs: [\n            {\n                internalType: \"uint32\",\n                name: \"\",\n                type: \"uint32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"governanceActionIsConsumed\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"governanceChainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"governanceContract\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"impl\",\n                type: \"address\",\n            },\n        ],\n        name: \"isInitialized\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"messageFee\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"emitter\",\n                type: \"address\",\n            },\n        ],\n        name: \"nextSequence\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVM\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseAndVerifyVM\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"version\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"timestamp\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"nonce\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"emitterChainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"emitterAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"sequence\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"consistencyLevel\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"payload\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"guardianSetIndex\",\n                        type: \"uint32\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"r\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"s\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"v\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"guardianIndex\",\n                                type: \"uint8\",\n                            },\n                        ],\n                        internalType: \"struct Structs.Signature[]\",\n                        name: \"signatures\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"hash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct Structs.VM\",\n                name: \"vm\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"valid\",\n                type: \"bool\",\n            },\n            {\n                internalType: \"string\",\n                name: \"reason\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedUpgrade\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseContractUpgrade\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"newContract\",\n                        type: \"address\",\n                    },\n                ],\n                internalType: \"struct GovernanceStructs.ContractUpgrade\",\n                name: \"cu\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedUpgrade\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseGuardianSetUpgrade\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"address[]\",\n                                name: \"keys\",\n                                type: \"address[]\",\n                            },\n                            {\n                                internalType: \"uint32\",\n                                name: \"expirationTime\",\n                                type: \"uint32\",\n                            },\n                        ],\n                        internalType: \"struct Structs.GuardianSet\",\n                        name: \"newGuardianSet\",\n                        type: \"tuple\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"newGuardianSetIndex\",\n                        type: \"uint32\",\n                    },\n                ],\n                internalType: \"struct GovernanceStructs.GuardianSetUpgrade\",\n                name: \"gsu\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedSetMessageFee\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseSetMessageFee\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"messageFee\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct GovernanceStructs.SetMessageFee\",\n                name: \"smf\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedTransferFees\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseTransferFees\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"amount\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recipient\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct GovernanceStructs.TransferFees\",\n                name: \"tf\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVM\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseVM\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"version\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"timestamp\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"nonce\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"emitterChainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"emitterAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"sequence\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"consistencyLevel\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"payload\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"guardianSetIndex\",\n                        type: \"uint32\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"r\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"s\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"v\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"guardianIndex\",\n                                type: \"uint8\",\n                            },\n                        ],\n                        internalType: \"struct Structs.Signature[]\",\n                        name: \"signatures\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"hash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct Structs.VM\",\n                name: \"vm\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_vm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitContractUpgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_vm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitNewGuardianSet\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_vm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitSetMessageFee\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_vm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitTransferFees\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"r\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"s\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"v\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"guardianIndex\",\n                        type: \"uint8\",\n                    },\n                ],\n                internalType: \"struct Structs.Signature[]\",\n                name: \"signatures\",\n                type: \"tuple[]\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"address[]\",\n                        name: \"keys\",\n                        type: \"address[]\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"expirationTime\",\n                        type: \"uint32\",\n                    },\n                ],\n                internalType: \"struct Structs.GuardianSet\",\n                name: \"guardianSet\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"verifySignatures\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"valid\",\n                type: \"bool\",\n            },\n            {\n                internalType: \"string\",\n                name: \"reason\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"version\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"timestamp\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"nonce\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"emitterChainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"emitterAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"sequence\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"consistencyLevel\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"payload\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"guardianSetIndex\",\n                        type: \"uint32\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"r\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"s\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"v\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"guardianIndex\",\n                                type: \"uint8\",\n                            },\n                        ],\n                        internalType: \"struct Structs.Signature[]\",\n                        name: \"signatures\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"hash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct Structs.VM\",\n                name: \"vm\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"verifyVM\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"valid\",\n                type: \"bool\",\n            },\n            {\n                internalType: \"string\",\n                name: \"reason\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"receive\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"payload\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"uint8\",\n                name: \"consistencyLevel\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"publishMessage\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n];\nvar _bytecode = \"0x608060405234801561001057600080fd5b50612eb1806100206000396000f3fe6080604052600436106101445760003560e01c806393df337e116100b6578063c0fd8bde1161006f578063c0fd8bde1461054c578063d60b347f1461057b578063eb8d3f12146105b4578063f42bc641146105d7578063f951975a146105f7578063fbe3c2cd14610624576101ab565b806393df337e1461048f5780639a8a0592146104af578063a0cce1b3146104d7578063a9e11893146104f7578063b172b22214610524578063b19a437e14610539576101ab565b80634cf842b5116101085780634cf842b51461030b5780634fdc60fa14610362578063515f3247146103c55780635cb8cae21461041f5780636606b4e014610441578063875be02a14610461576101ab565b80630319e59c146101e157806304ca84cf146102535780631a90a219146102805780631cfe79511461029f5780632c3c02a4146102cb576101ab565b366101ab5760405162461bcd60e51b815260206004820152602c60248201527f74686520576f726d686f6c6520636f6e747261637420646f6573206e6f74206160448201526b63636570742061737365747360a01b60648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152600b60248201526a1d5b9cdd5c1c1bdc9d195960aa1b60448201526064016101a2565b3480156101ed57600080fd5b506102016101fc366004612731565b610643565b60405161024a9190600060a0820190508251825260ff602084015116602083015261ffff6040840151166040830152606083015160608301526080830151608083015292915050565b60405180910390f35b34801561025f57600080fd5b5061027361026e366004612731565b610799565b60405161024a9190612b27565b34801561028c57600080fd5b506007545b60405190815260200161024a565b3480156102ab57600080fd5b5060035463ffffffff165b60405163ffffffff909116815260200161024a565b3480156102d757600080fd5b506102fb6102e63660046125a6565b60009081526005602052604090205460ff1690565b604051901515815260200161024a565b34801561031757600080fd5b5061034a610326366004612585565b6001600160a01b03166000908152600460205260409020546001600160401b031690565b6040516001600160401b03909116815260200161024a565b34801561036e57600080fd5b5061038261037d366004612731565b6109cc565b60405161024a91908151815260208083015160ff169082015260408083015161ffff16908201526060918201516001600160a01b03169181019190915260800190565b3480156103d157600080fd5b506103e56103e0366004612731565b610b08565b60405161024a91908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b34801561042b57600080fd5b5061043f61043a366004612731565b610c37565b005b34801561044d57600080fd5b5061043f61045c366004612731565b610d3f565b34801561046d57600080fd5b5061048161047c36600461276b565b610f5f565b60405161024a929190612af9565b34801561049b57600080fd5b5061043f6104aa366004612731565b6110f3565b3480156104bb57600080fd5b5060005461ffff165b60405161ffff909116815260200161024a565b3480156104e357600080fd5b506104816104f23660046125be565b61123f565b34801561050357600080fd5b50610517610512366004612731565b61141c565b60405161024a9190612b97565b34801561053057600080fd5b50600154610291565b61034a6105473660046128a4565b6117fa565b34801561055857600080fd5b5061056c6105673660046126c5565b61189a565b60405161024a93929190612baa565b34801561058757600080fd5b506102fb610596366004612585565b6001600160a01b031660009081526006602052604090205460ff1690565b3480156105c057600080fd5b50600354640100000000900463ffffffff166102b6565b3480156105e357600080fd5b5061043f6105f2366004612731565b6118fc565b34801561060357600080fd5b5061061761061236600461288a565b6119fd565b60405161024a9190612b84565b34801561063057600080fd5b5060005462010000900461ffff166104c4565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906106788382611a9c565b8252610685602082612ce3565b90506106918382611afa565b60ff1660208301526106a4600182612ce3565b9050816020015160ff166004146106f45760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b60448201526064016101a2565b6106fe8382611b56565b61ffff166040830152610712600282612ce3565b905061071e8382611bb3565b606083015261072e602082612ce3565b905061073a8382611a9c565b608083015261074a602082612ce3565b9050808351146107935760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b60448201526064016101a2565b50919050565b6107a16122d3565b60006107ad8382611a9c565b82526107ba602082612ce3565b90506107c68382611afa565b60ff1660208301526107d9600182612ce3565b9050816020015160ff166002146108325760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e5365745570677261646500000000000060448201526064016101a2565b61083c8382611b56565b61ffff166040830152610850600282612ce3565b905061085c8382611c08565b63ffffffff166080830152610872600482612ce3565b905060006108808483611afa565b905061088d600183612ce3565b915060405180604001604052808260ff166001600160401b038111156108c357634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156108ec578160200160208202803683370190505b5081526000602090910181905260608501919091525b8160ff16811015610974576109178584611c65565b60608501515180518390811061093d57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152610960601484612ce3565b92508061096c81612df0565b915050610902565b50818451146109c55760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e5365745570677261646500000000000060448201526064016101a2565b5050919050565b6040805160808101825260008082526020820181905291810182905260608101829052906109fa8382611a9c565b8252610a07602082612ce3565b9050610a138382611afa565b60ff166020830152610a26600182612ce3565b9050816020015160ff16600114610a795760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b60448201526064016101a2565b610a838382611b56565b61ffff166040830152610a97600282612ce3565b9050610aa38382611a9c565b6001600160a01b03166060830152610abc602082612ce3565b9050808351146107935760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b60448201526064016101a2565b604080516080810182526000808252602082018190529181018290526060810182905290610b368382611a9c565b8252610b43602082612ce3565b9050610b4f8382611afa565b60ff166020830152610b62600182612ce3565b9050816020015160ff16600314610bb35760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b60448201526064016101a2565b610bbd8382611b56565b61ffff166040830152610bd1600282612ce3565b9050610bdd8382611bb3565b6060830152610bed602082612ce3565b9050808351146107935760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b60448201526064016101a2565b6000610c428261141c565b9050600080610c5083611cca565b91509150818190610c745760405162461bcd60e51b81526004016101a29190612b14565b506000610c848460e001516109cc565b805190915063436f726514610ccc5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b60448201526064016101a2565b60005461ffff1661ffff16816040015161ffff1614610d1d5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b60448201526064016101a2565b610d2b846101400151611e40565b610d388160600151611e5b565b5050505050565b6000610d4a8261141c565b9050600080610d5883611cca565b91509150818190610d7c5760405162461bcd60e51b81526004016101a29190612b14565b506000610d8c8460e00151610799565b805190915063436f726514610dd45760405162461bcd60e51b815260206004820152600e60248201526d696e76616c6964204d6f64756c6560901b60448201526064016101a2565b60005461ffff1661ffff16816040015161ffff161480610dfa5750604081015161ffff16155b610e365760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b60448201526064016101a2565b60608101515151610e895760405162461bcd60e51b815260206004820152601960248201527f6e657720677561726469616e2073657420697320656d7074790000000000000060448201526064016101a2565b60035463ffffffff16610e9d906001612cfb565b63ffffffff16816080015163ffffffff1614610f055760405162461bcd60e51b815260206004820152602160248201527f696e646578206d75737420696e63726561736520696e207374657073206f66206044820152603160f81b60648201526084016101a2565b610f13846101400151611e40565b610f2a610f2560035463ffffffff1690565b611f88565b610f3c81606001518260800151611fc0565b60808101516003805463ffffffff191663ffffffff909216919091179055610d38565b600060606000610f738461010001516119fd565b805151909150610fb6576000604051806040016040528060148152602001731a5b9d985b1a590819dd585c991a585b881cd95d60621b8152509250925050915091565b60035463ffffffff1663ffffffff1684610100015163ffffffff1614158015610fe8575042816020015163ffffffff16105b1561102f5760006040518060400160405280601881526020017f677561726469616e2073657420686173206578706972656400000000000000008152509250925050915091565b61012084015151815151600a906003906110499083612d8a565b6110539190612d6a565b61105e906002612d8a565b6110689190612d6a565b611073906001612ce3565b11156110a7576000604051806040016040528060098152602001686e6f2071756f72756d60b81b8152509250925050915091565b6000806110bf8661014001518761012001518561123f565b91509150816110d5576000969095509350505050565b60016040518060200160405280600081525094509450505050915091565b60006110fe8261141c565b905060008061110c83611cca565b915091508181906111305760405162461bcd60e51b81526004016101a29190612b14565b5060006111408460e00151610643565b805190915063436f7265146111885760405162461bcd60e51b815260206004820152600e60248201526d696e76616c6964204d6f64756c6560901b60448201526064016101a2565b60005461ffff1661ffff16816040015161ffff1614806111ae5750604081015161ffff16155b6111ea5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b60448201526064016101a2565b6111f8846101400151611e40565b608081015160608201516040516001600160a01b0383169180156108fc02916000818181858888f19350505050158015611236573d6000803e3d6000fd5b50505050505050565b600060606000805b85518110156113fb57600086828151811061127257634e487b7160e01b600052603260045260246000fd5b60200260200101519050816000148061129457508260ff16816060015160ff16115b6112ec5760405162461bcd60e51b815260206004820152602360248201527f7369676e617475726520696e6469636573206d75737420626520617363656e64604482015262696e6760e81b60648201526084016101a2565b6060810151865180519194509060ff851690811061131a57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031660018983604001518460000151856020015160405160008152602001604052604051611373949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611395573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146113e8576000604051806040016040528060148152602001731593481cda59db985d1d5c99481a5b9d985b1a5960621b81525094509450505050611414565b50806113f381612df0565b915050611247565b5060016040518060200160405280600081525092509250505b935093915050565b61142461232d565b60006114308382611afa565b60ff168252611440600182612ce3565b9050816000015160ff166001146114995760405162461bcd60e51b815260206004820152601760248201527f564d2076657273696f6e20696e636f6d70617469626c6500000000000000000060448201526064016101a2565b6114a38382611c08565b63ffffffff166101008301526114ba600482612ce3565b905060006114c88483611afa565b60ff1690506114d8600183612ce3565b9150806001600160401b0381111561150057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561155257816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161151e5790505b5061012084015260005b818110156116c15761156e8584611afa565b846101200151828151811061159357634e487b7160e01b600052603260045260246000fd5b602090810291909101015160ff9091166060909101526115b4600184612ce3565b92506115c08584611a9c565b84610120015182815181106115e557634e487b7160e01b600052603260045260246000fd5b602002602001015160000181815250506020836116029190612ce3565b925061160e8584611a9c565b846101200151828151811061163357634e487b7160e01b600052603260045260246000fd5b602002602001015160200181815250506020836116509190612ce3565b925061165c8584611afa565b61166790601b612d45565b846101200151828151811061168c57634e487b7160e01b600052603260045260246000fd5b602090810291909101015160ff9091166040909101526116ad600184612ce3565b9250806116b981612df0565b91505061155c565b5060006116dd838487516116d59190612da9565b879190612014565b905080805190602001206040516020016116f991815260200190565b60408051601f1981840301815291905280516020909101206101408501526117218584611c08565b63ffffffff166020850152611737600484612ce3565b92506117438584611c08565b63ffffffff166040850152611759600484612ce3565b92506117658584611b56565b61ffff166060850152611779600284612ce3565b92506117858584611a9c565b6080850152611795602084612ce3565b92506117a18584612121565b6001600160401b031660a08501526117ba600884612ce3565b92506117c68584611afa565b60ff1660c08501526117d9600184612ce3565b92506117ec838487516116d59190612da9565b60e085015250919392505050565b600061180560075490565b34146118415760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b60448201526064016101a2565b61184a3361217e565b9050336001600160a01b03167f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b28286868660405161188b9493929190612be1565b60405180910390a29392505050565b6118a261232d565b600060606118e585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061141c92505050565b92506118f083610f5f565b93969095509293505050565b60006119078261141c565b905060008061191583611cca565b915091508181906119395760405162461bcd60e51b81526004016101a29190612b14565b5060006119498460e00151610b08565b805190915063436f7265146119915760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b60448201526064016101a2565b60005461ffff1661ffff16816040015161ffff16146119e25760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b60448201526064016101a2565b6119f0846101400151611e40565b610d388160600151600755565b60408051808201825260608082526000602080840182905263ffffffff86168252600281529084902084518154928302810184018652948501828152939493909284928491840182828015611a7b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a5d575b50505091835250506001919091015463ffffffff1660209091015292915050565b6000611aa9826020612ce3565b83511015611af15760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b60448201526064016101a2565b50016020015190565b6000611b07826001612ce3565b83511015611b4d5760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b60448201526064016101a2565b50016001015190565b6000611b63826002612ce3565b83511015611baa5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b60448201526064016101a2565b50016002015190565b6000611bc0826020612ce3565b83511015611af15760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b60448201526064016101a2565b6000611c15826004612ce3565b83511015611c5c5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b60448201526064016101a2565b50016004015190565b6000611c72826014612ce3565b83511015611cba5760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b60448201526064016101a2565b500160200151600160601b900490565b60006060600080611cda85610f5f565b9150915081611cef5760009590945092505050565b60035463ffffffff1663ffffffff1685610100015163ffffffff1614611d35576000604051806060016040528060228152602001612e3860229139935093505050915091565b60005462010000900461ffff1661ffff16856060015161ffff1614611d90576000604051806040016040528060168152602001753bb937b7339033b7bb32b93730b731b29031b430b4b760511b815250935093505050915091565b600154856080015114611de05760006040518060400160405280601981526020017f77726f6e6720676f7665726e616e636520636f6e747261637400000000000000815250935093505050915091565b61014085015160009081526005602052604090205460ff1615611e23576000604051806060016040528060228152602001612e5a60229139935093505050915091565b600160405180602001604052806000815250935093505050915091565b6000908152600560205260409020805460ff19166001179055565b6000611e8e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050611e99826121ee565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b03861691611edc91612add565b600060405180830381855af49150503d8060008114611f17576040519150601f19603f3d011682016040523d82523d6000602084013e611f1c565b606091505b5091509150818190611f415760405162461bcd60e51b81526004016101a29190612b14565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b611f954262015180612cfb565b63ffffffff9182166000908152600260205260409020600101805463ffffffff191691909216179055565b63ffffffff81166000908152600260209081526040909120835180518593611fec928492910190612388565b50602091909101516001909101805463ffffffff191663ffffffff9092169190911790555050565b60608161202281601f612ce3565b10156120615760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016101a2565b61206b8284612ce3565b845110156120af5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016101a2565b6060821580156120ce5760405191506000825260208201604052612118565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156121075780518352602092830192016120ef565b5050858452601f01601f1916604052505b50949350505050565b600061212e826008612ce3565b835110156121755760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b60448201526064016101a2565b50016008015190565b6001600160a01b0381166000908152600460205260409020546001600160401b03166121e9826121af836001612d23565b6001600160a01b03919091166000908152600460205260409020805467ffffffffffffffff19166001600160401b03909216919091179055565b919050565b6121f78161222e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b6122925760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101a2565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060a0016040528060008019168152602001600060ff168152602001600061ffff168152602001612320604051806040016040528060608152602001600063ffffffff1681525090565b8152600060209091015290565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b8280548282559060005260206000209081019282156123dd579160200282015b828111156123dd57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906123a8565b506123e99291506123ed565b5090565b5b808211156123e957600081556001016123ee565b80356001600160a01b03811681146121e957600080fd5b600082601f830112612429578081fd5b8135602061243e61243983612cc0565b612c90565b80838252828201915082860187848660071b890101111561245d578586fd5b855b858110156124c057608080838b031215612477578788fd5b61247f612c23565b8335815286840135878201526040612498818601612574565b9082015260606124a9858201612574565b90820152855293850193919091019060010161245f565b5090979650505050505050565b600082601f8301126124dd578081fd5b81356001600160401b038111156124f6576124f6612e21565b612509601f8201601f1916602001612c90565b81815284602083860101111561251d578283fd5b816020850160208301379081016020019190915292915050565b803561ffff811681146121e957600080fd5b803563ffffffff811681146121e957600080fd5b80356001600160401b03811681146121e957600080fd5b803560ff811681146121e957600080fd5b600060208284031215612596578081fd5b61259f82612402565b9392505050565b6000602082840312156125b7578081fd5b5035919050565b6000806000606084860312156125d2578182fd5b833592506020808501356001600160401b03808211156125f0578485fd5b6125fc88838901612419565b94506040870135915080821115612611578384fd5b9086019060408289031215612624578384fd5b61262c612c4b565b82358281111561263a578586fd5b83019150601f8201891361264c578485fd5b813561265a61243982612cc0565b8082825286820191508685018c888560051b8801011115612679578889fd5b8895505b838610156126a25761268e81612402565b83526001959095019491870191870161267d565b508352506126b39050838501612549565b84820152809450505050509250925092565b600080602083850312156126d7578182fd5b82356001600160401b03808211156126ed578384fd5b818501915085601f830112612700578384fd5b81358181111561270e578485fd5b86602082850101111561271f578485fd5b60209290920196919550909350505050565b600060208284031215612742578081fd5b81356001600160401b03811115612757578182fd5b612763848285016124cd565b949350505050565b60006020828403121561277c578081fd5b81356001600160401b0380821115612792578283fd5b9083019061016082860312156127a6578283fd5b6127ae612c6d565b6127b783612574565b81526127c560208401612549565b60208201526127d660408401612549565b60408201526127e760608401612537565b60608201526080830135608082015261280260a0840161255d565b60a082015261281360c08401612574565b60c082015260e083013582811115612829578485fd5b612835878286016124cd565b60e083015250610100612849818501612549565b908201526101208381013583811115612860578586fd5b61286c88828701612419565b91830191909152506101409283013592810192909252509392505050565b60006020828403121561289b578081fd5b61259f82612549565b6000806000606084860312156128b8578081fd5b6128c184612549565b925060208401356001600160401b038111156128db578182fd5b6128e7868287016124cd565b9250506128f660408501612574565b90509250925092565b6000815180845260208085019450808401835b8381101561295757815180518852838101518489015260408082015160ff908116918a0191909152606091820151169088015260809096019590820190600101612912565b509495945050505050565b6000815180845261297a816020860160208601612dc0565b601f01601f19169290920160200192915050565b805160408084528151908401819052600091602091908201906060860190845b818110156129d35783516001600160a01b0316835292840192918401916001016129ae565b50509382015163ffffffff16949091019390935250919050565b805160ff16825260006101606020830151612a10602086018263ffffffff169052565b506040830151612a28604086018263ffffffff169052565b506060830151612a3e606086018261ffff169052565b506080830151608085015260a0830151612a6360a08601826001600160401b03169052565b5060c0830151612a7860c086018260ff169052565b5060e08301518160e0860152612a9082860182612962565b91505061010080840151612aab8287018263ffffffff169052565b50506101208084015185830382870152612ac583826128ff565b61014095860151969095019590955250919392505050565b60008251612aef818460208701612dc0565b9190910192915050565b82151581526040602082015260006127636040830184612962565b60208152600061259f6020830184612962565b602081528151602082015260ff602083015116604082015261ffff60408301511660608201526000606083015160a06080840152612b6860c084018261298e565b905063ffffffff60808501511660a08401528091505092915050565b60208152600061259f602083018461298e565b60208152600061259f60208301846129ed565b606081526000612bbd60608301866129ed565b84151560208401528281036040840152612bd78185612962565b9695505050505050565b6001600160401b038516815263ffffffff84166020820152608060408201526000612c0f6080830185612962565b905060ff8316606083015295945050505050565b604051608081016001600160401b0381118282101715612c4557612c45612e21565b60405290565b604080519081016001600160401b0381118282101715612c4557612c45612e21565b60405161016081016001600160401b0381118282101715612c4557612c45612e21565b604051601f8201601f191681016001600160401b0381118282101715612cb857612cb8612e21565b604052919050565b60006001600160401b03821115612cd957612cd9612e21565b5060051b60200190565b60008219821115612cf657612cf6612e0b565b500190565b600063ffffffff808316818516808303821115612d1a57612d1a612e0b565b01949350505050565b60006001600160401b03808316818516808303821115612d1a57612d1a612e0b565b600060ff821660ff84168060ff03821115612d6257612d62612e0b565b019392505050565b600082612d8557634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612da457612da4612e0b565b500290565b600082821015612dbb57612dbb612e0b565b500390565b60005b83811015612ddb578181015183820152602001612dc3565b83811115612dea576000848401525b50505050565b6000600019821415612e0457612e04612e0b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe6e6f74207369676e65642062792063757272656e7420677561726469616e20736574676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a264697066735822122042c40a33cbb5c7ae2dfd339b23293dd079cc42ced6a918d8a77b14d476f5a0b464736f6c63430008040033\";\nvar Implementation__factory = /** @class */ (function (_super) {\n    __extends(Implementation__factory, _super);\n    function Implementation__factory(signer) {\n        return _super.call(this, _abi, _bytecode, signer) || this;\n    }\n    Implementation__factory.prototype.deploy = function (overrides) {\n        return _super.prototype.deploy.call(this, overrides || {});\n    };\n    Implementation__factory.prototype.getDeployTransaction = function (overrides) {\n        return _super.prototype.getDeployTransaction.call(this, overrides || {});\n    };\n    Implementation__factory.prototype.attach = function (address) {\n        return _super.prototype.attach.call(this, address);\n    };\n    Implementation__factory.prototype.connect = function (signer) {\n        return _super.prototype.connect.call(this, signer);\n    };\n    Implementation__factory.createInterface = function () {\n        return new utils.Interface(_abi);\n    };\n    Implementation__factory.connect = function (address, signerOrProvider) {\n        return new Contract(address, _abi, signerOrProvider);\n    };\n    Implementation__factory.bytecode = _bytecode;\n    Implementation__factory.abi = _abi;\n    return Implementation__factory;\n}(ContractFactory));\nexport { Implementation__factory };\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { utils, Contract, ContractFactory } from \"ethers\";\nvar _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"name_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"string\",\n                name: \"symbol_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"uint8\",\n                name: \"decimals_\",\n                type: \"uint8\",\n            },\n            {\n                internalType: \"uint64\",\n                name: \"sequence_\",\n                type: \"uint64\",\n            },\n            {\n                internalType: \"address\",\n                name: \"owner_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"chainId_\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"nativeContract_\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"initialize\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"chainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"nativeContract\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account_\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"recipient_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"spender_\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"sender_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"recipient_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"addedValue_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"increaseAllowance\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"subtractedValue_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"decreaseAllowance\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"mint\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"burn\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"name_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"string\",\n                name: \"symbol_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"uint64\",\n                name: \"sequence_\",\n                type: \"uint64\",\n            },\n        ],\n        name: \"updateDetails\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\nvar _bytecode = \"0x608060405234801561001057600080fd5b506111e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063a18cd7c611610071578063a18cd7c614610246578063a457c2d714610259578063a9059cbb1461026c578063c71f46151461027f578063dd62ed3e1461029257600080fd5b80638da5cb5b146101ef57806395d89b411461020a5780639a8a0592146102125780639dc29fac1461023357600080fd5b8063313ce567116100e9578063313ce5671461018157806339509351146101965780633d6c043b146101a957806340c10f19146101b157806370a08231146101c657600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102cb565b6040516101309190611093565b60405180910390f35b61014c610147366004610e85565b6102f4565b6040519015158152602001610130565b6003545b604051908152602001610130565b61014c61017c366004610e4a565b61030a565b60045460405160ff9091168152602001610130565b61014c6101a4366004610e85565b6103c0565b600854610160565b6101c46101bf366004610e85565b6103f7565b005b6101606101d4366004610df7565b6001600160a01b031660009081526005602052604090205490565b6007546040516001600160a01b039091168152602001610130565b61012361042f565b600754600160a81b900461ffff1660405161ffff9091168152602001610130565b6101c4610241366004610e85565b6104c4565b6101c4610254366004610eae565b6104f8565b61014c610267366004610e85565b6105ce565b61014c61027a366004610e85565b610669565b6101c461028d366004610f1f565b610676565b6101606102a0366004610e18565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6040516060906102e090600090602001610fdd565b604051602081830303815290604052905090565b6000610301338484610775565b50600192915050565b600061031784848461089a565b6001600160a01b0384166000908152600660209081526040808320338452909152902054828110156103a15760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103b585336103b08685611135565b610775565b506001949350505050565b3360008181526006602090815260408083206001600160a01b038716845290915281205490916103019185906103b090869061111d565b6007546001600160a01b031633146104215760405162461bcd60e51b8152600401610398906110e6565b61042b8282610a72565b5050565b6060600060010180546104419061114c565b80601f016020809104026020016040519081016040528092919081815260200182805461046d9061114c565b80156104ba5780601f1061048f576101008083540402835291602001916104ba565b820191906000526020600020905b81548152906001019060200180831161049d57829003601f168201915b5050505050905090565b6007546001600160a01b031633146104ee5760405162461bcd60e51b8152600401610398906110e6565b61042b8282610b54565b6007546001600160a01b031633146105225760405162461bcd60e51b8152600401610398906110e6565b60025467ffffffffffffffff8083169116106105805760405162461bcd60e51b815260206004820152601e60248201527f63757272656e74206d6574616461746120697320757020746f206461746500006044820152606401610398565b8251610593906000906020860190610ca3565b5081516105a7906001906020850190610ca3565b506002805467ffffffffffffffff191667ffffffffffffffff929092169190911790555050565b3360009081526006602090815260408083206001600160a01b0386168452909152812054828110156106505760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610398565b61065f33856103b08685611135565b5060019392505050565b600061030133848461089a565b600754600160a01b900460ff16156106c65760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610398565b6007805460ff60a01b1916600160a01b17905586516106ec9060009060208a0190610ca3565b508551610700906001906020890190610ca3565b506004805460ff90961660ff19909616959095179094556002805467ffffffffffffffff90941667ffffffffffffffff19909416939093179092556007805461ffff909316600160a81b02600162ffff0160a01b03199093166001600160a01b03909216919091179190911790556008555050565b6001600160a01b0383166107d75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610398565b6001600160a01b0382166108385760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610398565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108fe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610398565b6001600160a01b0382166109605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610398565b6001600160a01b038316600090815260056020526040902054818110156109d85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610398565b6109e28282611135565b6001600160a01b038086166000908152600560205260408082209390935590851681529081208054849290610a1890849061111d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a6491815260200190565b60405180910390a350505050565b6001600160a01b038216610ac85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610398565b8060006003016000828254610add919061111d565b90915550506001600160a01b03821660009081526005602052604081208054839290610b0a90849061111d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610bb45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610398565b6001600160a01b03821660009081526005602052604090205481811015610c285760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610398565b610c328282611135565b6001600160a01b03841660009081526005602052604081209190915560038054849290610c60908490611135565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161088d565b828054610caf9061114c565b90600052602060002090601f016020900481019282610cd15760008555610d17565b82601f10610cea57805160ff1916838001178555610d17565b82800160010185558215610d17579182015b82811115610d17578251825591602001919060010190610cfc565b50610d23929150610d27565b5090565b5b80821115610d235760008155600101610d28565b80356001600160a01b0381168114610d5357600080fd5b919050565b600082601f830112610d68578081fd5b813567ffffffffffffffff80821115610d8357610d8361119d565b604051601f8301601f19908116603f01168101908282118183101715610dab57610dab61119d565b81604052838152866020858801011115610dc3578485fd5b8360208701602083013792830160200193909352509392505050565b803567ffffffffffffffff81168114610d5357600080fd5b600060208284031215610e08578081fd5b610e1182610d3c565b9392505050565b60008060408385031215610e2a578081fd5b610e3383610d3c565b9150610e4160208401610d3c565b90509250929050565b600080600060608486031215610e5e578081fd5b610e6784610d3c565b9250610e7560208501610d3c565b9150604084013590509250925092565b60008060408385031215610e97578182fd5b610ea083610d3c565b946020939093013593505050565b600080600060608486031215610ec2578283fd5b833567ffffffffffffffff80821115610ed9578485fd5b610ee587838801610d58565b94506020860135915080821115610efa578384fd5b50610f0786828701610d58565b925050610f1660408501610ddf565b90509250925092565b600080600080600080600060e0888a031215610f39578283fd5b873567ffffffffffffffff80821115610f50578485fd5b610f5c8b838c01610d58565b985060208a0135915080821115610f71578485fd5b50610f7e8a828b01610d58565b965050604088013560ff81168114610f94578384fd5b9450610fa260608901610ddf565b9350610fb060808901610d3c565b925060a088013561ffff81168114610fc6578283fd5b8092505060c0880135905092959891949750929550565b600080835482600182811c915080831680610ff957607f831692505b602080841082141561101957634e487b7160e01b87526022600452602487fd5b81801561102d576001811461103e5761106a565b60ff1986168952848901965061106a565b60008a815260209020885b868110156110625781548b820152908501908301611049565b505084890196505b50505050505061108b816a2028576f726d686f6c652960a81b8152600b0190565b949350505050565b6000602080835283518082850152825b818110156110bf578581018301518582016040015282016110a3565b818111156110d05783604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b6000821982111561113057611130611187565b500190565b60008282101561114757611147611187565b500390565b600181811c9082168061116057607f821691505b6020821081141561118157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b95441ce5c32d3a4f1e35bef3162f4248a97a9c7bfc685ef9090cd15fbc712fb64736f6c63430008040033\";\nvar TokenImplementation__factory = /** @class */ (function (_super) {\n    __extends(TokenImplementation__factory, _super);\n    function TokenImplementation__factory(signer) {\n        return _super.call(this, _abi, _bytecode, signer) || this;\n    }\n    TokenImplementation__factory.prototype.deploy = function (overrides) {\n        return _super.prototype.deploy.call(this, overrides || {});\n    };\n    TokenImplementation__factory.prototype.getDeployTransaction = function (overrides) {\n        return _super.prototype.getDeployTransaction.call(this, overrides || {});\n    };\n    TokenImplementation__factory.prototype.attach = function (address) {\n        return _super.prototype.attach.call(this, address);\n    };\n    TokenImplementation__factory.prototype.connect = function (signer) {\n        return _super.prototype.connect.call(this, signer);\n    };\n    TokenImplementation__factory.createInterface = function () {\n        return new utils.Interface(_abi);\n    };\n    TokenImplementation__factory.connect = function (address, signerOrProvider) {\n        return new Contract(address, _abi, signerOrProvider);\n    };\n    TokenImplementation__factory.bytecode = _bytecode;\n    TokenImplementation__factory.abi = _abi;\n    return TokenImplementation__factory;\n}(ContractFactory));\nexport { TokenImplementation__factory };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/* eslint-disable */\nimport Long from \"long\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport _m0 from \"protobufjs/minimal\";\nimport { BrowserHeaders } from \"browser-headers\";\nimport { Heartbeat } from \"../../gossip/v1/gossip\";\nexport var protobufPackage = \"publicrpc.v1\";\nexport var ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"CHAIN_ID_UNSPECIFIED\"] = 0] = \"CHAIN_ID_UNSPECIFIED\";\n    ChainID[ChainID[\"CHAIN_ID_SOLANA\"] = 1] = \"CHAIN_ID_SOLANA\";\n    ChainID[ChainID[\"CHAIN_ID_ETHEREUM\"] = 2] = \"CHAIN_ID_ETHEREUM\";\n    ChainID[ChainID[\"CHAIN_ID_TERRA\"] = 3] = \"CHAIN_ID_TERRA\";\n    ChainID[ChainID[\"CHAIN_ID_BSC\"] = 4] = \"CHAIN_ID_BSC\";\n    ChainID[ChainID[\"CHAIN_ID_POLYGON\"] = 5] = \"CHAIN_ID_POLYGON\";\n    ChainID[ChainID[\"CHAIN_ID_AVALANCHE\"] = 6] = \"CHAIN_ID_AVALANCHE\";\n    ChainID[ChainID[\"CHAIN_ID_OASIS\"] = 7] = \"CHAIN_ID_OASIS\";\n    ChainID[ChainID[\"CHAIN_ID_ALGORAND\"] = 8] = \"CHAIN_ID_ALGORAND\";\n    /**\n     * CHAIN_ID_ETHEREUM_ROPSTEN - Special case - Eth has two testnets. CHAIN_ID_ETHEREUM is Goerli,\n     * but we also want to connect to Ropsten, so we add a separate chain.\n     */\n    ChainID[ChainID[\"CHAIN_ID_ETHEREUM_ROPSTEN\"] = 10001] = \"CHAIN_ID_ETHEREUM_ROPSTEN\";\n    ChainID[ChainID[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ChainID || (ChainID = {}));\nexport function chainIDFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"CHAIN_ID_UNSPECIFIED\":\n            return ChainID.CHAIN_ID_UNSPECIFIED;\n        case 1:\n        case \"CHAIN_ID_SOLANA\":\n            return ChainID.CHAIN_ID_SOLANA;\n        case 2:\n        case \"CHAIN_ID_ETHEREUM\":\n            return ChainID.CHAIN_ID_ETHEREUM;\n        case 3:\n        case \"CHAIN_ID_TERRA\":\n            return ChainID.CHAIN_ID_TERRA;\n        case 4:\n        case \"CHAIN_ID_BSC\":\n            return ChainID.CHAIN_ID_BSC;\n        case 5:\n        case \"CHAIN_ID_POLYGON\":\n            return ChainID.CHAIN_ID_POLYGON;\n        case 6:\n        case \"CHAIN_ID_AVALANCHE\":\n            return ChainID.CHAIN_ID_AVALANCHE;\n        case 7:\n        case \"CHAIN_ID_OASIS\":\n            return ChainID.CHAIN_ID_OASIS;\n        case 8:\n        case \"CHAIN_ID_ALGORAND\":\n            return ChainID.CHAIN_ID_ALGORAND;\n        case 10001:\n        case \"CHAIN_ID_ETHEREUM_ROPSTEN\":\n            return ChainID.CHAIN_ID_ETHEREUM_ROPSTEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ChainID.UNRECOGNIZED;\n    }\n}\nexport function chainIDToJSON(object) {\n    switch (object) {\n        case ChainID.CHAIN_ID_UNSPECIFIED:\n            return \"CHAIN_ID_UNSPECIFIED\";\n        case ChainID.CHAIN_ID_SOLANA:\n            return \"CHAIN_ID_SOLANA\";\n        case ChainID.CHAIN_ID_ETHEREUM:\n            return \"CHAIN_ID_ETHEREUM\";\n        case ChainID.CHAIN_ID_TERRA:\n            return \"CHAIN_ID_TERRA\";\n        case ChainID.CHAIN_ID_BSC:\n            return \"CHAIN_ID_BSC\";\n        case ChainID.CHAIN_ID_POLYGON:\n            return \"CHAIN_ID_POLYGON\";\n        case ChainID.CHAIN_ID_AVALANCHE:\n            return \"CHAIN_ID_AVALANCHE\";\n        case ChainID.CHAIN_ID_OASIS:\n            return \"CHAIN_ID_OASIS\";\n        case ChainID.CHAIN_ID_ALGORAND:\n            return \"CHAIN_ID_ALGORAND\";\n        case ChainID.CHAIN_ID_ETHEREUM_ROPSTEN:\n            return \"CHAIN_ID_ETHEREUM_ROPSTEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nvar baseMessageID = {\n    emitterChain: 0,\n    emitterAddress: \"\",\n    sequence: \"0\",\n};\nexport var MessageID = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.emitterChain !== 0) {\n            writer.uint32(8).int32(message.emitterChain);\n        }\n        if (message.emitterAddress !== \"\") {\n            writer.uint32(18).string(message.emitterAddress);\n        }\n        if (message.sequence !== \"0\") {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseMessageID);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.emitterChain = reader.int32();\n                    break;\n                case 2:\n                    message.emitterAddress = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToString(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseMessageID);\n        if (object.emitterChain !== undefined && object.emitterChain !== null) {\n            message.emitterChain = chainIDFromJSON(object.emitterChain);\n        }\n        else {\n            message.emitterChain = 0;\n        }\n        if (object.emitterAddress !== undefined && object.emitterAddress !== null) {\n            message.emitterAddress = String(object.emitterAddress);\n        }\n        else {\n            message.emitterAddress = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = String(object.sequence);\n        }\n        else {\n            message.sequence = \"0\";\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.emitterChain !== undefined &&\n            (obj.emitterChain = chainIDToJSON(message.emitterChain));\n        message.emitterAddress !== undefined &&\n            (obj.emitterAddress = message.emitterAddress);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseMessageID);\n        if (object.emitterChain !== undefined && object.emitterChain !== null) {\n            message.emitterChain = object.emitterChain;\n        }\n        else {\n            message.emitterChain = 0;\n        }\n        if (object.emitterAddress !== undefined && object.emitterAddress !== null) {\n            message.emitterAddress = object.emitterAddress;\n        }\n        else {\n            message.emitterAddress = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = \"0\";\n        }\n        return message;\n    },\n};\nvar baseGetSignedVAARequest = {};\nexport var GetSignedVAARequest = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.messageId !== undefined) {\n            MessageID.encode(message.messageId, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetSignedVAARequest);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.messageId = MessageID.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseGetSignedVAARequest);\n        if (object.messageId !== undefined && object.messageId !== null) {\n            message.messageId = MessageID.fromJSON(object.messageId);\n        }\n        else {\n            message.messageId = undefined;\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.messageId !== undefined &&\n            (obj.messageId = message.messageId\n                ? MessageID.toJSON(message.messageId)\n                : undefined);\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseGetSignedVAARequest);\n        if (object.messageId !== undefined && object.messageId !== null) {\n            message.messageId = MessageID.fromPartial(object.messageId);\n        }\n        else {\n            message.messageId = undefined;\n        }\n        return message;\n    },\n};\nvar baseGetSignedVAAResponse = {};\nexport var GetSignedVAAResponse = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.vaaBytes.length !== 0) {\n            writer.uint32(10).bytes(message.vaaBytes);\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetSignedVAAResponse);\n        message.vaaBytes = new Uint8Array();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.vaaBytes = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseGetSignedVAAResponse);\n        message.vaaBytes = new Uint8Array();\n        if (object.vaaBytes !== undefined && object.vaaBytes !== null) {\n            message.vaaBytes = bytesFromBase64(object.vaaBytes);\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.vaaBytes !== undefined &&\n            (obj.vaaBytes = base64FromBytes(message.vaaBytes !== undefined ? message.vaaBytes : new Uint8Array()));\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseGetSignedVAAResponse);\n        if (object.vaaBytes !== undefined && object.vaaBytes !== null) {\n            message.vaaBytes = object.vaaBytes;\n        }\n        else {\n            message.vaaBytes = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar baseGetLastHeartbeatsRequest = {};\nexport var GetLastHeartbeatsRequest = {\n    encode: function (_, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetLastHeartbeatsRequest);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (_) {\n        var message = __assign({}, baseGetLastHeartbeatsRequest);\n        return message;\n    },\n    toJSON: function (_) {\n        var obj = {};\n        return obj;\n    },\n    fromPartial: function (_) {\n        var message = __assign({}, baseGetLastHeartbeatsRequest);\n        return message;\n    },\n};\nvar baseGetLastHeartbeatsResponse = {};\nexport var GetLastHeartbeatsResponse = {\n    encode: function (message, writer) {\n        var e_1, _a;\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        try {\n            for (var _b = __values(message.entries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var v = _c.value;\n                GetLastHeartbeatsResponse_Entry.encode(v, writer.uint32(10).fork()).ldelim();\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetLastHeartbeatsResponse);\n        message.entries = [];\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(GetLastHeartbeatsResponse_Entry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var e_2, _a;\n        var message = __assign({}, baseGetLastHeartbeatsResponse);\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            try {\n                for (var _b = __values(object.entries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    message.entries.push(GetLastHeartbeatsResponse_Entry.fromJSON(e));\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map(function (e) {\n                return e ? GetLastHeartbeatsResponse_Entry.toJSON(e) : undefined;\n            });\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial: function (object) {\n        var e_3, _a;\n        var message = __assign({}, baseGetLastHeartbeatsResponse);\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            try {\n                for (var _b = __values(object.entries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    message.entries.push(GetLastHeartbeatsResponse_Entry.fromPartial(e));\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        return message;\n    },\n};\nvar baseGetLastHeartbeatsResponse_Entry = {\n    verifiedGuardianAddr: \"\",\n    p2pNodeAddr: \"\",\n};\nexport var GetLastHeartbeatsResponse_Entry = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.verifiedGuardianAddr !== \"\") {\n            writer.uint32(10).string(message.verifiedGuardianAddr);\n        }\n        if (message.p2pNodeAddr !== \"\") {\n            writer.uint32(18).string(message.p2pNodeAddr);\n        }\n        if (message.rawHeartbeat !== undefined) {\n            Heartbeat.encode(message.rawHeartbeat, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetLastHeartbeatsResponse_Entry);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.verifiedGuardianAddr = reader.string();\n                    break;\n                case 2:\n                    message.p2pNodeAddr = reader.string();\n                    break;\n                case 3:\n                    message.rawHeartbeat = Heartbeat.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseGetLastHeartbeatsResponse_Entry);\n        if (object.verifiedGuardianAddr !== undefined &&\n            object.verifiedGuardianAddr !== null) {\n            message.verifiedGuardianAddr = String(object.verifiedGuardianAddr);\n        }\n        else {\n            message.verifiedGuardianAddr = \"\";\n        }\n        if (object.p2pNodeAddr !== undefined && object.p2pNodeAddr !== null) {\n            message.p2pNodeAddr = String(object.p2pNodeAddr);\n        }\n        else {\n            message.p2pNodeAddr = \"\";\n        }\n        if (object.rawHeartbeat !== undefined && object.rawHeartbeat !== null) {\n            message.rawHeartbeat = Heartbeat.fromJSON(object.rawHeartbeat);\n        }\n        else {\n            message.rawHeartbeat = undefined;\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.verifiedGuardianAddr !== undefined &&\n            (obj.verifiedGuardianAddr = message.verifiedGuardianAddr);\n        message.p2pNodeAddr !== undefined &&\n            (obj.p2pNodeAddr = message.p2pNodeAddr);\n        message.rawHeartbeat !== undefined &&\n            (obj.rawHeartbeat = message.rawHeartbeat\n                ? Heartbeat.toJSON(message.rawHeartbeat)\n                : undefined);\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseGetLastHeartbeatsResponse_Entry);\n        if (object.verifiedGuardianAddr !== undefined &&\n            object.verifiedGuardianAddr !== null) {\n            message.verifiedGuardianAddr = object.verifiedGuardianAddr;\n        }\n        else {\n            message.verifiedGuardianAddr = \"\";\n        }\n        if (object.p2pNodeAddr !== undefined && object.p2pNodeAddr !== null) {\n            message.p2pNodeAddr = object.p2pNodeAddr;\n        }\n        else {\n            message.p2pNodeAddr = \"\";\n        }\n        if (object.rawHeartbeat !== undefined && object.rawHeartbeat !== null) {\n            message.rawHeartbeat = Heartbeat.fromPartial(object.rawHeartbeat);\n        }\n        else {\n            message.rawHeartbeat = undefined;\n        }\n        return message;\n    },\n};\nvar baseGetCurrentGuardianSetRequest = {};\nexport var GetCurrentGuardianSetRequest = {\n    encode: function (_, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetCurrentGuardianSetRequest);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (_) {\n        var message = __assign({}, baseGetCurrentGuardianSetRequest);\n        return message;\n    },\n    toJSON: function (_) {\n        var obj = {};\n        return obj;\n    },\n    fromPartial: function (_) {\n        var message = __assign({}, baseGetCurrentGuardianSetRequest);\n        return message;\n    },\n};\nvar baseGetCurrentGuardianSetResponse = {};\nexport var GetCurrentGuardianSetResponse = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.guardianSet !== undefined) {\n            GuardianSet.encode(message.guardianSet, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetCurrentGuardianSetResponse);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.guardianSet = GuardianSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseGetCurrentGuardianSetResponse);\n        if (object.guardianSet !== undefined && object.guardianSet !== null) {\n            message.guardianSet = GuardianSet.fromJSON(object.guardianSet);\n        }\n        else {\n            message.guardianSet = undefined;\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.guardianSet !== undefined &&\n            (obj.guardianSet = message.guardianSet\n                ? GuardianSet.toJSON(message.guardianSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseGetCurrentGuardianSetResponse);\n        if (object.guardianSet !== undefined && object.guardianSet !== null) {\n            message.guardianSet = GuardianSet.fromPartial(object.guardianSet);\n        }\n        else {\n            message.guardianSet = undefined;\n        }\n        return message;\n    },\n};\nvar baseGuardianSet = { index: 0, addresses: \"\" };\nexport var GuardianSet = {\n    encode: function (message, writer) {\n        var e_4, _a;\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        try {\n            for (var _b = __values(message.addresses), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var v = _c.value;\n                writer.uint32(18).string(v);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGuardianSet);\n        message.addresses = [];\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var e_5, _a;\n        var message = __assign({}, baseGuardianSet);\n        message.addresses = [];\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.addresses !== undefined && object.addresses !== null) {\n            try {\n                for (var _b = __values(object.addresses), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    message.addresses.push(String(e));\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        if (message.addresses) {\n            obj.addresses = message.addresses.map(function (e) { return e; });\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial: function (object) {\n        var e_6, _a;\n        var message = __assign({}, baseGuardianSet);\n        message.addresses = [];\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.addresses !== undefined && object.addresses !== null) {\n            try {\n                for (var _b = __values(object.addresses), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    message.addresses.push(e);\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        return message;\n    },\n};\nvar PublicRPCServiceClientImpl = /** @class */ (function () {\n    function PublicRPCServiceClientImpl(rpc) {\n        this.rpc = rpc;\n        this.GetLastHeartbeats = this.GetLastHeartbeats.bind(this);\n        this.GetSignedVAA = this.GetSignedVAA.bind(this);\n        this.GetCurrentGuardianSet = this.GetCurrentGuardianSet.bind(this);\n    }\n    PublicRPCServiceClientImpl.prototype.GetLastHeartbeats = function (request, metadata) {\n        return this.rpc.unary(PublicRPCServiceGetLastHeartbeatsDesc, GetLastHeartbeatsRequest.fromPartial(request), metadata);\n    };\n    PublicRPCServiceClientImpl.prototype.GetSignedVAA = function (request, metadata) {\n        return this.rpc.unary(PublicRPCServiceGetSignedVAADesc, GetSignedVAARequest.fromPartial(request), metadata);\n    };\n    PublicRPCServiceClientImpl.prototype.GetCurrentGuardianSet = function (request, metadata) {\n        return this.rpc.unary(PublicRPCServiceGetCurrentGuardianSetDesc, GetCurrentGuardianSetRequest.fromPartial(request), metadata);\n    };\n    return PublicRPCServiceClientImpl;\n}());\nexport { PublicRPCServiceClientImpl };\nexport var PublicRPCServiceDesc = {\n    serviceName: \"publicrpc.v1.PublicRPCService\",\n};\nexport var PublicRPCServiceGetLastHeartbeatsDesc = {\n    methodName: \"GetLastHeartbeats\",\n    service: PublicRPCServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary: function () {\n            return GetLastHeartbeatsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary: function (data) {\n            return __assign(__assign({}, GetLastHeartbeatsResponse.decode(data)), { toObject: function () {\n                    return this;\n                } });\n        },\n    },\n};\nexport var PublicRPCServiceGetSignedVAADesc = {\n    methodName: \"GetSignedVAA\",\n    service: PublicRPCServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary: function () {\n            return GetSignedVAARequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary: function (data) {\n            return __assign(__assign({}, GetSignedVAAResponse.decode(data)), { toObject: function () {\n                    return this;\n                } });\n        },\n    },\n};\nexport var PublicRPCServiceGetCurrentGuardianSetDesc = {\n    methodName: \"GetCurrentGuardianSet\",\n    service: PublicRPCServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary: function () {\n            return GetCurrentGuardianSetRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary: function (data) {\n            return __assign(__assign({}, GetCurrentGuardianSetResponse.decode(data)), { toObject: function () {\n                    return this;\n                } });\n        },\n    },\n};\nvar GrpcWebImpl = /** @class */ (function () {\n    function GrpcWebImpl(host, options) {\n        this.host = host;\n        this.options = options;\n    }\n    GrpcWebImpl.prototype.unary = function (methodDesc, _request, metadata) {\n        var _this = this;\n        var _a;\n        var request = __assign(__assign({}, _request), methodDesc.requestType);\n        var maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders(__assign(__assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))\n            : metadata || this.options.metadata;\n        return new Promise(function (resolve, reject) {\n            grpc.unary(methodDesc, {\n                request: request,\n                host: _this.host,\n                metadata: maybeCombinedMetadata,\n                transport: _this.options.transport,\n                debug: _this.options.debug,\n                onEnd: function (response) {\n                    if (response.status === grpc.Code.OK) {\n                        resolve(response.message);\n                    }\n                    else {\n                        var err = new Error(response.statusMessage);\n                        err.code = response.status;\n                        err.metadata = response.trailers;\n                        reject(err);\n                    }\n                },\n            });\n        });\n    };\n    return GrpcWebImpl;\n}());\nexport { GrpcWebImpl };\nvar globalThis = (function () {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nvar atob = globalThis.atob ||\n    (function (b64) { return globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"); });\nfunction bytesFromBase64(b64) {\n    var bin = atob(b64);\n    var arr = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nvar btoa = globalThis.btoa ||\n    (function (bin) { return globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"); });\nfunction base64FromBytes(arr) {\n    var e_7, _a;\n    var bin = [];\n    try {\n        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n            var byte = arr_1_1.value;\n            bin.push(String.fromCharCode(byte));\n        }\n    }\n    catch (e_7_1) { e_7 = { error: e_7_1 }; }\n    finally {\n        try {\n            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        }\n        finally { if (e_7) throw e_7.error; }\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToString(long) {\n    return long.toString();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long;\n    _m0.configure();\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { GrpcWebImpl, PublicRPCServiceClientImpl, } from \"../proto/publicrpc/v1/publicrpc\";\nexport function getSignedVAA(host, emitterChain, emitterAddress, sequence, extraGrpcOpts) {\n    if (extraGrpcOpts === void 0) { extraGrpcOpts = {}; }\n    return __awaiter(this, void 0, void 0, function () {\n        var rpc, api;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    rpc = new GrpcWebImpl(host, extraGrpcOpts);\n                    api = new PublicRPCServiceClientImpl(rpc);\n                    return [4 /*yield*/, api.GetSignedVAA({\n                            messageId: {\n                                emitterChain: emitterChain,\n                                emitterAddress: emitterAddress,\n                                sequence: sequence,\n                            },\n                        })];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey, SystemProgram } from \"@solana/web3.js\";\nimport { importCoreWasm } from \"./wasm\";\nexport function getBridgeFeeIx(connection, bridgeAddress, payerAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var bridge, feeAccount, bridgeStatePK, bridgeStateAccountInfo, bridgeState, transferIx;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    bridge = _a.sent();\n                    return [4 /*yield*/, bridge.fee_collector_address(bridgeAddress)];\n                case 2:\n                    feeAccount = _a.sent();\n                    bridgeStatePK = new PublicKey(bridge.state_address(bridgeAddress));\n                    return [4 /*yield*/, connection.getAccountInfo(bridgeStatePK)];\n                case 3:\n                    bridgeStateAccountInfo = _a.sent();\n                    if ((bridgeStateAccountInfo === null || bridgeStateAccountInfo === void 0 ? void 0 : bridgeStateAccountInfo.data) === undefined) {\n                        throw new Error(\"bridge state not found\");\n                    }\n                    bridgeState = bridge.parse_state(new Uint8Array(bridgeStateAccountInfo === null || bridgeStateAccountInfo === void 0 ? void 0 : bridgeStateAccountInfo.data));\n                    transferIx = SystemProgram.transfer({\n                        fromPubkey: new PublicKey(payerAddress),\n                        toPubkey: new PublicKey(feeAccount),\n                        lamports: bridgeState.config.fee,\n                    });\n                    return [2 /*return*/, transferIx];\n            }\n        });\n    });\n}\n","import { PublicKey, TransactionInstruction, } from \"@solana/web3.js\";\n// begin from clients\\solana\\main.ts\nexport function ixFromRust(data) {\n    var keys = data.accounts.map(accountMetaFromRust);\n    return new TransactionInstruction({\n        programId: new PublicKey(data.program_id),\n        data: Buffer.from(data.data),\n        keys: keys,\n    });\n}\nfunction accountMetaFromRust(meta) {\n    return {\n        pubkey: new PublicKey(meta.pubkey),\n        isSigner: meta.is_signer,\n        isWritable: meta.is_writable,\n    };\n}\n// end from clients\\solana\\main.ts\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { Keypair, PublicKey, Transaction, } from \"@solana/web3.js\";\nimport { chunks } from \"..\";\nimport { sendAndConfirmTransactionsWithRetry } from \"../utils/solana\";\nimport { ixFromRust } from \"./rust\";\nimport { importCoreWasm } from \"./wasm\";\nexport function postVaaWithRetry(connection, signTransaction, bridge_id, payer, vaa, maxRetries) {\n    return __awaiter(this, void 0, void 0, function () {\n        var unsignedTransactions, signature_set, instructions, finalInstruction, batchableChunks, finalTransaction, partialSignWrapper;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    unsignedTransactions = [];\n                    signature_set = Keypair.generate();\n                    return [4 /*yield*/, createVerifySignaturesInstructions(connection, bridge_id, payer, vaa, signature_set)];\n                case 1:\n                    instructions = _a.sent();\n                    return [4 /*yield*/, createPostVaaInstruction(bridge_id, payer, vaa, signature_set)];\n                case 2:\n                    finalInstruction = _a.sent();\n                    if (!finalInstruction) {\n                        return [2 /*return*/, Promise.reject(\"Failed to construct the transaction.\")];\n                    }\n                    batchableChunks = chunks(instructions, 2);\n                    batchableChunks.forEach(function (chunk) {\n                        var transaction;\n                        if (chunk.length === 1) {\n                            transaction = new Transaction().add(chunk[0]);\n                        }\n                        else {\n                            transaction = new Transaction().add(chunk[0], chunk[1]);\n                        }\n                        unsignedTransactions.push(transaction);\n                    });\n                    finalTransaction = new Transaction().add(finalInstruction);\n                    partialSignWrapper = function (transaction) {\n                        transaction.partialSign(signature_set);\n                        return signTransaction(transaction);\n                    };\n                    return [4 /*yield*/, sendAndConfirmTransactionsWithRetry(connection, partialSignWrapper, payer, unsignedTransactions, maxRetries)];\n                case 3:\n                    _a.sent();\n                    //While the signature_set is used to create the final instruction, it doesn't need to sign it.\n                    return [4 /*yield*/, sendAndConfirmTransactionsWithRetry(connection, signTransaction, payer, [finalTransaction], maxRetries)];\n                case 4:\n                    //While the signature_set is used to create the final instruction, it doesn't need to sign it.\n                    _a.sent();\n                    return [2 /*return*/, Promise.resolve()];\n            }\n        });\n    });\n}\n/*\nThis returns an array of instructions required to verify the signatures of a VAA, and upload it to the blockchain.\nsignature_set should be a new keypair, and also needs to partial sign the transaction when these instructions are submitted.\n*/\nexport function createVerifySignaturesInstructions(connection, bridge_id, payer, vaa, signature_set) {\n    return __awaiter(this, void 0, void 0, function () {\n        var output, _a, guardian_set_address, parse_guardian_set, verify_signatures_ix, bridge_state, guardian_addr, acc, guardian_data, txs, txs_1, txs_1_1, tx, ixs;\n        var e_1, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    output = [];\n                    return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    _a = _c.sent(), guardian_set_address = _a.guardian_set_address, parse_guardian_set = _a.parse_guardian_set, verify_signatures_ix = _a.verify_signatures_ix;\n                    return [4 /*yield*/, getBridgeState(connection, bridge_id)];\n                case 2:\n                    bridge_state = _c.sent();\n                    guardian_addr = new PublicKey(guardian_set_address(bridge_id, bridge_state.guardian_set_index));\n                    return [4 /*yield*/, connection.getAccountInfo(guardian_addr)];\n                case 3:\n                    acc = _c.sent();\n                    if ((acc === null || acc === void 0 ? void 0 : acc.data) === undefined) {\n                        return [2 /*return*/, output];\n                    }\n                    guardian_data = parse_guardian_set(new Uint8Array(acc === null || acc === void 0 ? void 0 : acc.data));\n                    txs = verify_signatures_ix(bridge_id, payer, bridge_state.guardian_set_index, guardian_data, signature_set.publicKey.toString(), vaa);\n                    try {\n                        // Add transfer instruction to transaction\n                        for (txs_1 = __values(txs), txs_1_1 = txs_1.next(); !txs_1_1.done; txs_1_1 = txs_1.next()) {\n                            tx = txs_1_1.value;\n                            ixs = tx.map(function (v) {\n                                return ixFromRust(v);\n                            });\n                            output.push(ixs[0], ixs[1]);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (txs_1_1 && !txs_1_1.done && (_b = txs_1.return)) _b.call(txs_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    return [2 /*return*/, output];\n            }\n        });\n    });\n}\n/*\nThis will return the postVaaInstruction. This should only be executed after the verifySignaturesInstructions have been executed.\nsignatureSetKeypair should be the same keypair used for verifySignaturesInstructions, but does not need to partialSign the transaction\nwhen this instruction is submitted.\n*/\nexport function createPostVaaInstruction(bridge_id, payer, vaa, signatureSetKeypair) {\n    return __awaiter(this, void 0, void 0, function () {\n        var post_vaa_ix;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    post_vaa_ix = (_a.sent()).post_vaa_ix;\n                    return [2 /*return*/, ixFromRust(post_vaa_ix(bridge_id, payer, signatureSetKeypair.publicKey.toString(), vaa))];\n            }\n        });\n    });\n}\n/*\n  @deprecated\n  Instead, either use postVaaWithRetry or create, sign, and send the verifySignaturesInstructions & postVaaInstruction yourself.\n  \n  This function is equivalent to a postVaaWithRetry with a maxRetries of 0.\n*/\nexport function postVaa(connection, signTransaction, bridge_id, payer, vaa) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, guardian_set_address, parse_guardian_set, verify_signatures_ix, post_vaa_ix, bridge_state, guardian_addr, acc, guardian_data, signature_set, txs, txs_2, txs_2_1, tx, ixs, transaction_1, blockhash_1, signed_1, txid_1, e_2_1, ix, transaction, blockhash, signed, txid;\n        var e_2, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    _a = _c.sent(), guardian_set_address = _a.guardian_set_address, parse_guardian_set = _a.parse_guardian_set, verify_signatures_ix = _a.verify_signatures_ix, post_vaa_ix = _a.post_vaa_ix;\n                    return [4 /*yield*/, getBridgeState(connection, bridge_id)];\n                case 2:\n                    bridge_state = _c.sent();\n                    guardian_addr = new PublicKey(guardian_set_address(bridge_id, bridge_state.guardian_set_index));\n                    return [4 /*yield*/, connection.getAccountInfo(guardian_addr)];\n                case 3:\n                    acc = _c.sent();\n                    if ((acc === null || acc === void 0 ? void 0 : acc.data) === undefined) {\n                        return [2 /*return*/];\n                    }\n                    guardian_data = parse_guardian_set(new Uint8Array(acc === null || acc === void 0 ? void 0 : acc.data));\n                    signature_set = Keypair.generate();\n                    txs = verify_signatures_ix(bridge_id, payer, bridge_state.guardian_set_index, guardian_data, signature_set.publicKey.toString(), vaa);\n                    _c.label = 4;\n                case 4:\n                    _c.trys.push([4, 12, 13, 14]);\n                    txs_2 = __values(txs), txs_2_1 = txs_2.next();\n                    _c.label = 5;\n                case 5:\n                    if (!!txs_2_1.done) return [3 /*break*/, 11];\n                    tx = txs_2_1.value;\n                    ixs = tx.map(function (v) {\n                        return ixFromRust(v);\n                    });\n                    transaction_1 = new Transaction().add(ixs[0], ixs[1]);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 6:\n                    blockhash_1 = (_c.sent()).blockhash;\n                    transaction_1.recentBlockhash = blockhash_1;\n                    transaction_1.feePayer = new PublicKey(payer);\n                    transaction_1.partialSign(signature_set);\n                    return [4 /*yield*/, signTransaction(transaction_1)];\n                case 7:\n                    signed_1 = _c.sent();\n                    return [4 /*yield*/, connection.sendRawTransaction(signed_1.serialize())];\n                case 8:\n                    txid_1 = _c.sent();\n                    return [4 /*yield*/, connection.confirmTransaction(txid_1)];\n                case 9:\n                    _c.sent();\n                    _c.label = 10;\n                case 10:\n                    txs_2_1 = txs_2.next();\n                    return [3 /*break*/, 5];\n                case 11: return [3 /*break*/, 14];\n                case 12:\n                    e_2_1 = _c.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3 /*break*/, 14];\n                case 13:\n                    try {\n                        if (txs_2_1 && !txs_2_1.done && (_b = txs_2.return)) _b.call(txs_2);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                    return [7 /*endfinally*/];\n                case 14:\n                    ix = ixFromRust(post_vaa_ix(bridge_id, payer, signature_set.publicKey.toString(), vaa));\n                    transaction = new Transaction().add(ix);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 15:\n                    blockhash = (_c.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payer);\n                    return [4 /*yield*/, signTransaction(transaction)];\n                case 16:\n                    signed = _c.sent();\n                    return [4 /*yield*/, connection.sendRawTransaction(signed.serialize())];\n                case 17:\n                    txid = _c.sent();\n                    return [4 /*yield*/, connection.confirmTransaction(txid)];\n                case 18:\n                    _c.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getBridgeState(connection, bridge_id) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, parse_state, state_address, bridge_state, acc;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    _a = _b.sent(), parse_state = _a.parse_state, state_address = _a.state_address;\n                    bridge_state = new PublicKey(state_address(bridge_id));\n                    return [4 /*yield*/, connection.getAccountInfo(bridge_state)];\n                case 2:\n                    acc = _b.sent();\n                    if ((acc === null || acc === void 0 ? void 0 : acc.data) === undefined) {\n                        throw new Error(\"bridge state not found\");\n                    }\n                    return [2 /*return*/, parse_state(new Uint8Array(acc === null || acc === void 0 ? void 0 : acc.data))];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar coreWasms = {\n    bundler: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./core/bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n    node: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./core-node/bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n};\nvar migrationWasms = {\n    bundler: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./migration/wormhole_migration\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n    node: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./migration-node/wormhole_migration\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n};\nvar nftWasms = {\n    bundler: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./nft/nft_bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n    node: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./nft-node/nft_bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n};\nvar tokenWasms = {\n    bundler: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./token/token_bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n    node: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./token-node/token_bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n};\nvar importDefaultCoreWasm = coreWasms.bundler;\nvar importDefaultMigrationWasm = migrationWasms.bundler;\nvar importDefaultNftWasm = nftWasms.bundler;\nvar importDefaultTokenWasm = tokenWasms.bundler;\nexport function setDefaultWasm(type) {\n    importDefaultCoreWasm = coreWasms[type];\n    importDefaultMigrationWasm = migrationWasms[type];\n    importDefaultNftWasm = nftWasms[type];\n    importDefaultTokenWasm = tokenWasms[type];\n}\nexport function importCoreWasm() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importDefaultCoreWasm()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function importMigrationWasm() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importDefaultMigrationWasm()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function importNftWasm() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importDefaultNftWasm()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function importTokenWasm() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importDefaultTokenWasm()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n","import { zeroPad } from \"@ethersproject/bytes\";\nimport { bech32 } from \"bech32\";\nexport function canonicalAddress(humanAddress) {\n    return new Uint8Array(bech32.fromWords(bech32.decode(humanAddress).words));\n}\nexport function humanAddress(canonicalAddress) {\n    return bech32.encode(\"terra\", bech32.toWords(canonicalAddress));\n}\n// from https://github.com/terra-money/station/blob/dca7de43958ce075c6e46605622203b9859b0e14/src/lib/utils/is.ts#L12\nexport var isNativeTerra = function (string) {\n    if (string === void 0) { string = \"\"; }\n    return string.startsWith(\"u\") && string.length === 4;\n};\n// from https://github.com/terra-money/station/blob/dca7de43958ce075c6e46605622203b9859b0e14/src/lib/utils/is.ts#L20\nexport var isNativeDenom = function (string) {\n    if (string === void 0) { string = \"\"; }\n    return isNativeTerra(string) || string === \"uluna\";\n};\nexport function buildNativeId(denom) {\n    var bytes = [];\n    for (var i = 0; i < denom.length; i++) {\n        bytes.push(denom.charCodeAt(i));\n    }\n    var padded = zeroPad(new Uint8Array(bytes), 32);\n    padded[0] = 1;\n    return padded;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Keypair, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { MsgExecuteContract } from \"@terra-money/terra.js\";\nimport { isNativeDenom } from \"..\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { getBridgeFeeIx, ixFromRust } from \"../solana\";\nimport { importTokenWasm } from \"../solana/wasm\";\nimport { createNonce } from \"../utils/createNonce\";\nexport function attestFromEth(tokenBridgeAddress, signer, tokenAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.attestToken(tokenAddress, createNonce())];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function attestFromTerra(tokenBridgeAddress, walletAddress, asset) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nonce, isNativeAsset;\n        return __generator(this, function (_a) {\n            nonce = Math.round(Math.random() * 100000);\n            isNativeAsset = isNativeDenom(asset);\n            return [2 /*return*/, new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                    create_asset_meta: {\n                        asset_info: isNativeAsset\n                            ? {\n                                native_token: { denom: asset },\n                            }\n                            : {\n                                token: {\n                                    contract_addr: asset,\n                                },\n                            },\n                        nonce: nonce,\n                    },\n                })];\n        });\n    });\n}\nexport function attestFromSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, mintAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nonce, transferIx, attest_ix, messageKey, ix, transaction, blockhash;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    nonce = createNonce().readUInt32LE(0);\n                    return [4 /*yield*/, getBridgeFeeIx(connection, bridgeAddress, payerAddress)];\n                case 1:\n                    transferIx = _a.sent();\n                    return [4 /*yield*/, importTokenWasm()];\n                case 2:\n                    attest_ix = (_a.sent()).attest_ix;\n                    messageKey = Keypair.generate();\n                    ix = ixFromRust(attest_ix(tokenBridgeAddress, bridgeAddress, payerAddress, messageKey.publicKey.toString(), mintAddress, nonce));\n                    transaction = new Transaction().add(transferIx, ix);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 3:\n                    blockhash = (_a.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    transaction.partialSign(messageKey);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey, Transaction } from \"@solana/web3.js\";\nimport { MsgExecuteContract } from \"@terra-money/terra.js\";\nimport { fromUint8Array } from \"js-base64\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { ixFromRust } from \"../solana\";\nimport { importTokenWasm } from \"../solana/wasm\";\nexport function createWrappedOnEth(tokenBridgeAddress, signer, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.createWrapped(signedVAA)];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function createWrappedOnTerra(tokenBridgeAddress, walletAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                    submit_vaa: {\n                        data: fromUint8Array(signedVAA),\n                    },\n                })];\n        });\n    });\n}\nexport function createWrappedOnSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var create_wrapped_ix, ix, transaction, blockhash;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    create_wrapped_ix = (_a.sent()).create_wrapped_ix;\n                    ix = ixFromRust(create_wrapped_ix(tokenBridgeAddress, bridgeAddress, payerAddress, signedVAA));\n                    transaction = new Transaction().add(ix);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 2:\n                    blockhash = (_a.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey } from \"@solana/web3.js\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { fromUint8Array } from \"js-base64\";\nimport { importTokenWasm } from \"../solana/wasm\";\n/**\n * Returns a foreign asset address on Ethereum for a provided native chain and asset address, AddressZero if it does not exist\n * @param tokenBridgeAddress\n * @param provider\n * @param originChain\n * @param originAsset zero pad to 32 bytes\n * @returns\n */\nexport function getForeignAssetEth(tokenBridgeAddress, provider, originChain, originAsset) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenBridge, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    tokenBridge = Bridge__factory.connect(tokenBridgeAddress, provider);\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, tokenBridge.wrappedAsset(originChain, originAsset)];\n                case 2: return [2 /*return*/, _a.sent()];\n                case 3:\n                    e_1 = _a.sent();\n                    return [2 /*return*/, null];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function getForeignAssetTerra(tokenBridgeAddress, client, originChain, originAsset) {\n    return __awaiter(this, void 0, void 0, function () {\n        var result, e_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, client.wasm.contractQuery(tokenBridgeAddress, {\n                            wrapped_registry: {\n                                chain: originChain,\n                                address: fromUint8Array(originAsset),\n                            },\n                        })];\n                case 1:\n                    result = _a.sent();\n                    return [2 /*return*/, result.address];\n                case 2:\n                    e_2 = _a.sent();\n                    return [2 /*return*/, null];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Returns a foreign asset address on Solana for a provided native chain and asset address\n * @param connection\n * @param tokenBridgeAddress\n * @param originChain\n * @param originAsset zero pad to 32 bytes\n * @returns\n */\nexport function getForeignAssetSolana(connection, tokenBridgeAddress, originChain, originAsset) {\n    return __awaiter(this, void 0, void 0, function () {\n        var wrapped_address, wrappedAddress, wrappedAddressPK, wrappedAssetAccountInfo;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    wrapped_address = (_a.sent()).wrapped_address;\n                    wrappedAddress = wrapped_address(tokenBridgeAddress, originAsset, originChain);\n                    wrappedAddressPK = new PublicKey(wrappedAddress);\n                    return [4 /*yield*/, connection.getAccountInfo(wrappedAddressPK)];\n                case 2:\n                    wrappedAssetAccountInfo = _a.sent();\n                    return [2 /*return*/, wrappedAssetAccountInfo ? wrappedAddressPK.toString() : null];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { getSignedVAAHash } from \"../bridge\";\nimport { importCoreWasm } from \"../solana/wasm\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport axios from \"axios\";\nimport { redeemOnTerra } from \".\";\nexport function getIsTransferCompletedEth(tokenBridgeAddress, provider, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenBridge, signedVAAHash;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    tokenBridge = Bridge__factory.connect(tokenBridgeAddress, provider);\n                    return [4 /*yield*/, getSignedVAAHash(signedVAA)];\n                case 1:\n                    signedVAAHash = _a.sent();\n                    return [4 /*yield*/, tokenBridge.isTransferCompleted(signedVAAHash)];\n                case 2: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function getIsTransferCompletedTerra(tokenBridgeAddress, signedVAA, walletAddress, client, gasPriceUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n        var msg, gasPrices, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, redeemOnTerra(tokenBridgeAddress, walletAddress, signedVAA)];\n                case 1:\n                    msg = _a.sent();\n                    return [4 /*yield*/, axios.get(gasPriceUrl).then(function (result) { return result.data; })];\n                case 2:\n                    gasPrices = _a.sent();\n                    _a.label = 3;\n                case 3:\n                    _a.trys.push([3, 5, , 6]);\n                    return [4 /*yield*/, client.tx.estimateFee(walletAddress, [msg], {\n                            memo: \"already redeemed calculation\",\n                            feeDenoms: [\"uluna\"],\n                            gasPrices: gasPrices,\n                        })];\n                case 4:\n                    _a.sent();\n                    return [3 /*break*/, 6];\n                case 5:\n                    e_1 = _a.sent();\n                    // redeemed if the VAA was already executed\n                    return [2 /*return*/, e_1.response.data.error.includes(\"VaaAlreadyExecuted\")];\n                case 6: return [2 /*return*/, false];\n            }\n        });\n    });\n}\nexport function getIsTransferCompletedSolana(tokenBridgeAddress, signedVAA, connection) {\n    return __awaiter(this, void 0, void 0, function () {\n        var claim_address, claimAddress, claimInfo;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    claim_address = (_a.sent()).claim_address;\n                    return [4 /*yield*/, claim_address(tokenBridgeAddress, signedVAA)];\n                case 2:\n                    claimAddress = _a.sent();\n                    return [4 /*yield*/, connection.getAccountInfo(new PublicKey(claimAddress), \"confirmed\")];\n                case 3:\n                    claimInfo = _a.sent();\n                    return [2 /*return*/, !!claimInfo];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey } from \"@solana/web3.js\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { importTokenWasm } from \"../solana/wasm\";\n/**\n * Returns whether or not an asset address on Ethereum is a wormhole wrapped asset\n * @param tokenBridgeAddress\n * @param provider\n * @param assetAddress\n * @returns\n */\nexport function getIsWrappedAssetEth(tokenBridgeAddress, provider, assetAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenBridge;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!assetAddress)\n                        return [2 /*return*/, false];\n                    tokenBridge = Bridge__factory.connect(tokenBridgeAddress, provider);\n                    return [4 /*yield*/, tokenBridge.isWrappedAsset(assetAddress)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function getIsWrappedAssetTerra(tokenBridgeAddress, wallet, assetAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, false];\n        });\n    });\n}\n/**\n * Returns whether or not an asset on Solana is a wormhole wrapped asset\n * @param connection\n * @param tokenBridgeAddress\n * @param mintAddress\n * @returns\n */\nexport function getIsWrappedAssetSol(connection, tokenBridgeAddress, mintAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var wrapped_meta_address, wrappedMetaAddress, wrappedMetaAddressPK, wrappedMetaAccountInfo;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!mintAddress)\n                        return [2 /*return*/, false];\n                    return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    wrapped_meta_address = (_a.sent()).wrapped_meta_address;\n                    wrappedMetaAddress = wrapped_meta_address(tokenBridgeAddress, new PublicKey(mintAddress).toBytes());\n                    wrappedMetaAddressPK = new PublicKey(wrappedMetaAddress);\n                    return [4 /*yield*/, connection.getAccountInfo(wrappedMetaAddressPK)];\n                case 2:\n                    wrappedMetaAccountInfo = _a.sent();\n                    return [2 /*return*/, !!wrappedMetaAccountInfo];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey } from \"@solana/web3.js\";\nimport { arrayify, zeroPad } from \"ethers/lib/utils\";\nimport { TokenImplementation__factory } from \"../ethers-contracts\";\nimport { importTokenWasm } from \"../solana/wasm\";\nimport { buildNativeId, canonicalAddress, isNativeDenom } from \"../terra\";\nimport { CHAIN_ID_SOLANA, CHAIN_ID_TERRA } from \"../utils\";\nimport { getIsWrappedAssetEth } from \"./getIsWrappedAsset\";\n/**\n * Returns a origin chain and asset address on {originChain} for a provided Wormhole wrapped address\n * @param tokenBridgeAddress\n * @param provider\n * @param wrappedAddress\n * @returns\n */\nexport function getOriginalAssetEth(tokenBridgeAddress, provider, wrappedAddress, lookupChainId) {\n    return __awaiter(this, void 0, void 0, function () {\n        var isWrapped, token, chainId, assetAddress;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getIsWrappedAssetEth(tokenBridgeAddress, provider, wrappedAddress)];\n                case 1:\n                    isWrapped = _a.sent();\n                    if (!isWrapped) return [3 /*break*/, 4];\n                    token = TokenImplementation__factory.connect(wrappedAddress, provider);\n                    return [4 /*yield*/, token.chainId()];\n                case 2:\n                    chainId = (_a.sent());\n                    return [4 /*yield*/, token.nativeContract()];\n                case 3:\n                    assetAddress = _a.sent();\n                    return [2 /*return*/, {\n                            isWrapped: true,\n                            chainId: chainId,\n                            assetAddress: arrayify(assetAddress),\n                        }];\n                case 4: return [2 /*return*/, {\n                        isWrapped: false,\n                        chainId: lookupChainId,\n                        assetAddress: zeroPad(arrayify(wrappedAddress), 32),\n                    }];\n            }\n        });\n    });\n}\nexport function getOriginalAssetTerra(client, wrappedAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var result, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (isNativeDenom(wrappedAddress)) {\n                        return [2 /*return*/, {\n                                isWrapped: false,\n                                chainId: CHAIN_ID_TERRA,\n                                assetAddress: buildNativeId(wrappedAddress),\n                            }];\n                    }\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, client.wasm.contractQuery(wrappedAddress, {\n                            wrapped_asset_info: {},\n                        })];\n                case 2:\n                    result = _a.sent();\n                    if (result) {\n                        return [2 /*return*/, {\n                                isWrapped: true,\n                                chainId: result.asset_chain,\n                                assetAddress: new Uint8Array(Buffer.from(result.asset_address, \"base64\")),\n                            }];\n                    }\n                    return [3 /*break*/, 4];\n                case 3:\n                    e_1 = _a.sent();\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/, {\n                        isWrapped: false,\n                        chainId: CHAIN_ID_TERRA,\n                        assetAddress: zeroPad(canonicalAddress(wrappedAddress), 32),\n                    }];\n            }\n        });\n    });\n}\n/**\n * Returns a origin chain and asset address on {originChain} for a provided Wormhole wrapped address\n * @param connection\n * @param tokenBridgeAddress\n * @param mintAddress\n * @returns\n */\nexport function getOriginalAssetSol(connection, tokenBridgeAddress, mintAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, parse_wrapped_meta, wrapped_meta_address, wrappedMetaAddress, wrappedMetaAddressPK, wrappedMetaAccountInfo, parsed;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!mintAddress) return [3 /*break*/, 3];\n                    return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    _a = _b.sent(), parse_wrapped_meta = _a.parse_wrapped_meta, wrapped_meta_address = _a.wrapped_meta_address;\n                    wrappedMetaAddress = wrapped_meta_address(tokenBridgeAddress, new PublicKey(mintAddress).toBytes());\n                    wrappedMetaAddressPK = new PublicKey(wrappedMetaAddress);\n                    return [4 /*yield*/, connection.getAccountInfo(wrappedMetaAddressPK)];\n                case 2:\n                    wrappedMetaAccountInfo = _b.sent();\n                    if (wrappedMetaAccountInfo) {\n                        parsed = parse_wrapped_meta(wrappedMetaAccountInfo.data);\n                        return [2 /*return*/, {\n                                isWrapped: true,\n                                chainId: parsed.chain,\n                                assetAddress: parsed.token_address,\n                            }];\n                    }\n                    _b.label = 3;\n                case 3:\n                    try {\n                        return [2 /*return*/, {\n                                isWrapped: false,\n                                chainId: CHAIN_ID_SOLANA,\n                                assetAddress: new PublicKey(mintAddress).toBytes(),\n                            }];\n                    }\n                    catch (e) { }\n                    return [2 /*return*/, {\n                            isWrapped: false,\n                            chainId: CHAIN_ID_SOLANA,\n                            assetAddress: new Uint8Array(32),\n                        }];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { AccountLayout, Token, TOKEN_PROGRAM_ID, u64 } from \"@solana/spl-token\";\nimport { Keypair, PublicKey, SystemProgram, Transaction, } from \"@solana/web3.js\";\nimport { MsgExecuteContract } from \"@terra-money/terra.js\";\nimport { fromUint8Array } from \"js-base64\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { ixFromRust } from \"../solana\";\nimport { importCoreWasm, importTokenWasm } from \"../solana/wasm\";\nimport { CHAIN_ID_SOLANA, WSOL_ADDRESS, WSOL_DECIMALS, MAX_VAA_DECIMALS, } from \"../utils\";\nimport { hexToNativeString } from \"../utils/array\";\nimport { parseTransferPayload } from \"../utils/parseVaa\";\nexport function redeemOnEth(tokenBridgeAddress, signer, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.completeTransfer(signedVAA)];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function redeemOnEthNative(tokenBridgeAddress, signer, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.completeTransferAndUnwrapETH(signedVAA)];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function redeemOnTerra(tokenBridgeAddress, walletAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                    submit_vaa: {\n                        data: fromUint8Array(signedVAA),\n                    },\n                })];\n        });\n    });\n}\nexport function redeemAndUnwrapOnSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parse_vaa, complete_transfer_native_ix, parsedVAA, parsedPayload, targetAddress, targetPublicKey, targetAmount, rentBalance, mintPublicKey, payerPublicKey, ancillaryKeypair, completeTransferIx, createAncillaryAccountIx, initAccountIx, balanceTransferIx, closeAccountIx, blockhash, transaction;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    parse_vaa = (_a.sent()).parse_vaa;\n                    return [4 /*yield*/, importTokenWasm()];\n                case 2:\n                    complete_transfer_native_ix = (_a.sent()).complete_transfer_native_ix;\n                    parsedVAA = parse_vaa(signedVAA);\n                    parsedPayload = parseTransferPayload(Buffer.from(new Uint8Array(parsedVAA.payload)));\n                    targetAddress = hexToNativeString(parsedPayload.targetAddress, CHAIN_ID_SOLANA);\n                    if (!targetAddress) {\n                        throw new Error(\"Failed to read the target address.\");\n                    }\n                    targetPublicKey = new PublicKey(targetAddress);\n                    targetAmount = parsedPayload.amount *\n                        BigInt(WSOL_DECIMALS - MAX_VAA_DECIMALS) *\n                        BigInt(10);\n                    return [4 /*yield*/, Token.getMinBalanceRentForExemptAccount(connection)];\n                case 3:\n                    rentBalance = _a.sent();\n                    mintPublicKey = new PublicKey(WSOL_ADDRESS);\n                    payerPublicKey = new PublicKey(payerAddress);\n                    ancillaryKeypair = Keypair.generate();\n                    completeTransferIx = ixFromRust(complete_transfer_native_ix(tokenBridgeAddress, bridgeAddress, payerAddress, signedVAA));\n                    createAncillaryAccountIx = SystemProgram.createAccount({\n                        fromPubkey: payerPublicKey,\n                        newAccountPubkey: ancillaryKeypair.publicKey,\n                        lamports: rentBalance,\n                        space: AccountLayout.span,\n                        programId: TOKEN_PROGRAM_ID,\n                    });\n                    return [4 /*yield*/, Token.createInitAccountInstruction(TOKEN_PROGRAM_ID, mintPublicKey, ancillaryKeypair.publicKey, payerPublicKey)];\n                case 4:\n                    initAccountIx = _a.sent();\n                    balanceTransferIx = Token.createTransferInstruction(TOKEN_PROGRAM_ID, targetPublicKey, ancillaryKeypair.publicKey, payerPublicKey, [], new u64(targetAmount.toString(16), 16));\n                    closeAccountIx = Token.createCloseAccountInstruction(TOKEN_PROGRAM_ID, ancillaryKeypair.publicKey, //account to close\n                    payerPublicKey, //Remaining funds destination\n                    payerPublicKey, //authority\n                    []);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 5:\n                    blockhash = (_a.sent()).blockhash;\n                    transaction = new Transaction();\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    transaction.add(completeTransferIx);\n                    transaction.add(createAncillaryAccountIx);\n                    transaction.add(initAccountIx);\n                    transaction.add(balanceTransferIx);\n                    transaction.add(closeAccountIx);\n                    transaction.partialSign(ancillaryKeypair);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\nexport function redeemOnSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parse_vaa, parsedVAA, isSolanaNative, _a, complete_transfer_wrapped_ix, complete_transfer_native_ix, ixs, transaction, blockhash;\n        var _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    parse_vaa = (_c.sent()).parse_vaa;\n                    parsedVAA = parse_vaa(signedVAA);\n                    isSolanaNative = Buffer.from(new Uint8Array(parsedVAA.payload)).readUInt16BE(65) ===\n                        CHAIN_ID_SOLANA;\n                    return [4 /*yield*/, importTokenWasm()];\n                case 2:\n                    _a = _c.sent(), complete_transfer_wrapped_ix = _a.complete_transfer_wrapped_ix, complete_transfer_native_ix = _a.complete_transfer_native_ix;\n                    ixs = [];\n                    if (isSolanaNative) {\n                        ixs.push(ixFromRust(complete_transfer_native_ix(tokenBridgeAddress, bridgeAddress, payerAddress, signedVAA)));\n                    }\n                    else {\n                        ixs.push(ixFromRust(complete_transfer_wrapped_ix(tokenBridgeAddress, bridgeAddress, payerAddress, signedVAA)));\n                    }\n                    transaction = (_b = new Transaction()).add.apply(_b, __spreadArray([], __read(ixs)));\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 3:\n                    blockhash = (_c.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { AccountLayout, Token, TOKEN_PROGRAM_ID, u64 } from \"@solana/spl-token\";\nimport { Keypair, PublicKey, SystemProgram, Transaction, } from \"@solana/web3.js\";\nimport { MsgExecuteContract } from \"@terra-money/terra.js\";\nimport { isNativeDenom } from \"..\";\nimport { Bridge__factory, TokenImplementation__factory, } from \"../ethers-contracts\";\nimport { getBridgeFeeIx, ixFromRust } from \"../solana\";\nimport { importTokenWasm } from \"../solana/wasm\";\nimport { CHAIN_ID_SOLANA, createNonce, WSOL_ADDRESS } from \"../utils\";\nexport function getAllowanceEth(tokenBridgeAddress, tokenAddress, signer) {\n    return __awaiter(this, void 0, void 0, function () {\n        var token, signerAddress, allowance;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    token = TokenImplementation__factory.connect(tokenAddress, signer);\n                    return [4 /*yield*/, signer.getAddress()];\n                case 1:\n                    signerAddress = _a.sent();\n                    return [4 /*yield*/, token.allowance(signerAddress, tokenBridgeAddress)];\n                case 2:\n                    allowance = _a.sent();\n                    return [2 /*return*/, allowance];\n            }\n        });\n    });\n}\nexport function approveEth(tokenBridgeAddress, tokenAddress, signer, amount) {\n    return __awaiter(this, void 0, void 0, function () {\n        var token;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    token = TokenImplementation__factory.connect(tokenAddress, signer);\n                    return [4 /*yield*/, token.approve(tokenBridgeAddress, amount)];\n                case 1: return [4 /*yield*/, (_a.sent()).wait()];\n                case 2: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function transferFromEth(tokenBridgeAddress, signer, tokenAddress, amount, recipientChain, recipientAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var fee, bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fee = 0;\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.transferTokens(tokenAddress, amount, recipientChain, recipientAddress, fee, createNonce())];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function transferFromEthNative(tokenBridgeAddress, signer, amount, recipientChain, recipientAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var fee, bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fee = 0;\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.wrapAndTransferETH(recipientChain, recipientAddress, fee, createNonce(), {\n                            value: amount,\n                        })];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function transferFromTerra(walletAddress, tokenBridgeAddress, tokenAddress, amount, recipientChain, recipientAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nonce, isNativeAsset;\n        var _a;\n        return __generator(this, function (_b) {\n            nonce = Math.round(Math.random() * 100000);\n            isNativeAsset = isNativeDenom(tokenAddress);\n            return [2 /*return*/, isNativeAsset\n                    ? [\n                        new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                            deposit_tokens: {},\n                        }, (_a = {}, _a[tokenAddress] = amount, _a)),\n                        new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                            initiate_transfer: {\n                                asset: {\n                                    amount: amount,\n                                    info: {\n                                        native_token: {\n                                            denom: tokenAddress,\n                                        },\n                                    },\n                                },\n                                recipient_chain: recipientChain,\n                                recipient: Buffer.from(recipientAddress).toString(\"base64\"),\n                                fee: \"0\",\n                                nonce: nonce,\n                            },\n                        }, {}),\n                    ]\n                    : [\n                        new MsgExecuteContract(walletAddress, tokenAddress, {\n                            increase_allowance: {\n                                spender: tokenBridgeAddress,\n                                amount: amount,\n                                expires: {\n                                    never: {},\n                                },\n                            },\n                        }, {}),\n                        new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                            initiate_transfer: {\n                                asset: {\n                                    amount: amount,\n                                    info: {\n                                        token: {\n                                            contract_addr: tokenAddress,\n                                        },\n                                    },\n                                },\n                                recipient_chain: recipientChain,\n                                recipient: Buffer.from(recipientAddress).toString(\"base64\"),\n                                fee: \"0\",\n                                nonce: nonce,\n                            },\n                        }, {}),\n                    ]];\n        });\n    });\n}\nexport function transferNativeSol(connection, bridgeAddress, tokenBridgeAddress, payerAddress, amount, targetAddress, targetChain) {\n    return __awaiter(this, void 0, void 0, function () {\n        var rentBalance, mintPublicKey, payerPublicKey, ancillaryKeypair, createAncillaryAccountIx, initialBalanceTransferIx, initAccountIx, _a, transfer_native_ix, approval_authority_address, nonce, fee, transferIx, approvalIx, messageKey, ix, closeAccountIx, blockhash, transaction;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, Token.getMinBalanceRentForExemptAccount(connection)];\n                case 1:\n                    rentBalance = _b.sent();\n                    mintPublicKey = new PublicKey(WSOL_ADDRESS);\n                    payerPublicKey = new PublicKey(payerAddress);\n                    ancillaryKeypair = Keypair.generate();\n                    createAncillaryAccountIx = SystemProgram.createAccount({\n                        fromPubkey: payerPublicKey,\n                        newAccountPubkey: ancillaryKeypair.publicKey,\n                        lamports: rentBalance,\n                        space: AccountLayout.span,\n                        programId: TOKEN_PROGRAM_ID,\n                    });\n                    initialBalanceTransferIx = SystemProgram.transfer({\n                        fromPubkey: payerPublicKey,\n                        lamports: Number(amount),\n                        toPubkey: ancillaryKeypair.publicKey,\n                    });\n                    return [4 /*yield*/, Token.createInitAccountInstruction(TOKEN_PROGRAM_ID, mintPublicKey, ancillaryKeypair.publicKey, payerPublicKey)];\n                case 2:\n                    initAccountIx = _b.sent();\n                    return [4 /*yield*/, importTokenWasm()];\n                case 3:\n                    _a = _b.sent(), transfer_native_ix = _a.transfer_native_ix, approval_authority_address = _a.approval_authority_address;\n                    nonce = createNonce().readUInt32LE(0);\n                    fee = BigInt(0);\n                    return [4 /*yield*/, getBridgeFeeIx(connection, bridgeAddress, payerAddress)];\n                case 4:\n                    transferIx = _b.sent();\n                    approvalIx = Token.createApproveInstruction(TOKEN_PROGRAM_ID, ancillaryKeypair.publicKey, new PublicKey(approval_authority_address(tokenBridgeAddress)), payerPublicKey, //owner\n                    [], new u64(amount.toString(16), 16));\n                    messageKey = Keypair.generate();\n                    ix = ixFromRust(transfer_native_ix(tokenBridgeAddress, bridgeAddress, payerAddress, messageKey.publicKey.toString(), ancillaryKeypair.publicKey.toString(), WSOL_ADDRESS, nonce, amount, fee, targetAddress, targetChain));\n                    closeAccountIx = Token.createCloseAccountInstruction(TOKEN_PROGRAM_ID, ancillaryKeypair.publicKey, //account to close\n                    payerPublicKey, //Remaining funds destination\n                    payerPublicKey, //authority\n                    []);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 5:\n                    blockhash = (_b.sent()).blockhash;\n                    transaction = new Transaction();\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    transaction.add(createAncillaryAccountIx);\n                    transaction.add(initialBalanceTransferIx);\n                    transaction.add(initAccountIx);\n                    transaction.add(transferIx, approvalIx, ix);\n                    transaction.add(closeAccountIx);\n                    transaction.partialSign(messageKey);\n                    transaction.partialSign(ancillaryKeypair);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\nexport function transferFromSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, fromAddress, mintAddress, amount, targetAddress, targetChain, originAddress, originChain, fromOwnerAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nonce, fee, transferIx, _a, transfer_native_ix, transfer_wrapped_ix, approval_authority_address, approvalIx, messageKey, isSolanaNative, ix, transaction, blockhash;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    nonce = createNonce().readUInt32LE(0);\n                    fee = BigInt(0);\n                    return [4 /*yield*/, getBridgeFeeIx(connection, bridgeAddress, payerAddress)];\n                case 1:\n                    transferIx = _b.sent();\n                    return [4 /*yield*/, importTokenWasm()];\n                case 2:\n                    _a = _b.sent(), transfer_native_ix = _a.transfer_native_ix, transfer_wrapped_ix = _a.transfer_wrapped_ix, approval_authority_address = _a.approval_authority_address;\n                    approvalIx = Token.createApproveInstruction(TOKEN_PROGRAM_ID, new PublicKey(fromAddress), new PublicKey(approval_authority_address(tokenBridgeAddress)), new PublicKey(fromOwnerAddress || payerAddress), [], new u64(amount.toString(16), 16));\n                    messageKey = Keypair.generate();\n                    isSolanaNative = originChain === undefined || originChain === CHAIN_ID_SOLANA;\n                    if (!isSolanaNative && !originAddress) {\n                        throw new Error(\"originAddress is required when specifying originChain\");\n                    }\n                    ix = ixFromRust(isSolanaNative\n                        ? transfer_native_ix(tokenBridgeAddress, bridgeAddress, payerAddress, messageKey.publicKey.toString(), fromAddress, mintAddress, nonce, amount, fee, targetAddress, targetChain)\n                        : transfer_wrapped_ix(tokenBridgeAddress, bridgeAddress, payerAddress, messageKey.publicKey.toString(), fromAddress, fromOwnerAddress || payerAddress, originChain, // checked by isSolanaNative\n                        originAddress, // checked by throw\n                        nonce, amount, fee, targetAddress, targetChain));\n                    transaction = new Transaction().add(transferIx, approvalIx, ix);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 3:\n                    blockhash = (_b.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    transaction.partialSign(messageKey);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\n","import { CHAIN_ID_BSC, CHAIN_ID_ETH, CHAIN_ID_SOLANA, CHAIN_ID_TERRA, CHAIN_ID_POLYGON, CHAIN_ID_ETHEREUM_ROPSTEN, CHAIN_ID_AVAX, CHAIN_ID_OASIS, } from \"./consts\";\nimport { humanAddress, canonicalAddress, isNativeDenom } from \"../terra\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { hexValue, hexZeroPad, stripZeros } from \"ethers/lib/utils\";\nimport { arrayify, zeroPad } from \"@ethersproject/bytes\";\nexport var isEVMChain = function (chainId) {\n    return (chainId === CHAIN_ID_ETH ||\n        chainId === CHAIN_ID_BSC ||\n        chainId === CHAIN_ID_ETHEREUM_ROPSTEN ||\n        chainId === CHAIN_ID_AVAX ||\n        chainId === CHAIN_ID_POLYGON ||\n        chainId === CHAIN_ID_OASIS);\n};\nexport var isHexNativeTerra = function (h) { return h.startsWith(\"01\"); };\nexport var nativeTerraHexToDenom = function (h) {\n    return Buffer.from(stripZeros(hexToUint8Array(h.substr(2)))).toString(\"ascii\");\n};\nexport var uint8ArrayToHex = function (a) {\n    return Buffer.from(a).toString(\"hex\");\n};\nexport var hexToUint8Array = function (h) {\n    return new Uint8Array(Buffer.from(h, \"hex\"));\n};\nexport var hexToNativeString = function (h, c) {\n    try {\n        return !h\n            ? undefined\n            : c === CHAIN_ID_SOLANA\n                ? new PublicKey(hexToUint8Array(h)).toString()\n                : isEVMChain(c)\n                    ? hexZeroPad(hexValue(hexToUint8Array(h)), 20)\n                    : c === CHAIN_ID_TERRA\n                        ? isHexNativeTerra(h)\n                            ? nativeTerraHexToDenom(h)\n                            : humanAddress(hexToUint8Array(h.substr(24))) // terra expects 20 bytes, not 32\n                        : h;\n    }\n    catch (e) { }\n    return undefined;\n};\nexport var nativeToHexString = function (address, chain) {\n    if (!address || !chain) {\n        return null;\n    }\n    if (isEVMChain(chain)) {\n        return uint8ArrayToHex(zeroPad(arrayify(address), 32));\n    }\n    else if (chain === CHAIN_ID_SOLANA) {\n        return uint8ArrayToHex(zeroPad(new PublicKey(address).toBytes(), 32));\n    }\n    else if (chain === CHAIN_ID_TERRA) {\n        if (isNativeDenom(address)) {\n            return (\"01\" +\n                uint8ArrayToHex(zeroPad(new Uint8Array(Buffer.from(address, \"ascii\")), 31)));\n        }\n        else {\n            return uint8ArrayToHex(zeroPad(canonicalAddress(address), 32));\n        }\n    }\n    else {\n        return null;\n    }\n};\nexport var uint8ArrayToNative = function (a, chainId) {\n    return hexToNativeString(uint8ArrayToHex(a), chainId);\n};\nexport function chunks(array, size) {\n    return Array.apply(0, new Array(Math.ceil(array.length / size))).map(function (_, index) { return array.slice(index * size, (index + 1) * size); });\n}\n","export var CHAIN_ID_SOLANA = 1;\nexport var CHAIN_ID_ETH = 2;\nexport var CHAIN_ID_TERRA = 3;\nexport var CHAIN_ID_BSC = 4;\nexport var CHAIN_ID_POLYGON = 5;\nexport var CHAIN_ID_AVAX = 6;\nexport var CHAIN_ID_OASIS = 7;\nexport var CHAIN_ID_ALGORAND = 8;\nexport var CHAIN_ID_ETHEREUM_ROPSTEN = 10001;\nexport var WSOL_ADDRESS = \"So11111111111111111111111111111111111111112\";\nexport var WSOL_DECIMALS = 9;\nexport var MAX_VAA_DECIMALS = 8;\n","export function createNonce() {\n    var nonceConst = Math.random() * 100000;\n    var nonceBuffer = Buffer.alloc(4);\n    nonceBuffer.writeUInt32LE(nonceConst, 0);\n    return nonceBuffer;\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n",null,null,null,null,null,"module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n",null,null,null,null,null,null,null,null,"'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n","// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Signer>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n  });\n}\n","/**\n * @flow\n */\n\nimport {Buffer} from 'buffer';\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport * as BufferLayout from 'buffer-layout';\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport type {\n  Connection,\n  Commitment,\n  Signer,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\n\nexport const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\nfunction pubkeyToBuffer(publicKey: PublicKey): typeof Buffer {\n  return Buffer.from(publicKey.toBuffer());\n}\n\n/**\n * 64-bit value\n */\nexport class u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'u64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): u64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\nfunction isAccount(accountOrPublicKey: any): boolean {\n  return 'publicKey' in accountOrPublicKey;\n}\n\ntype AuthorityType =\n  | 'MintTokens'\n  | 'FreezeAccount'\n  | 'AccountOwner'\n  | 'CloseAccount';\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3,\n};\n\n// The address of the special mint for wrapped native token.\nexport const NATIVE_MINT: PublicKey = new PublicKey(\n  'So11111111111111111111111111111111111111112',\n);\n\n/**\n * Information about the mint\n */\ntype MintInfo = {|\n  /**\n   * Optional authority used to mint new tokens. The mint authority may only be provided during\n   * mint creation. If no mint authority is present then the mint has a fixed supply and no\n   * further tokens may be minted.\n   */\n  mintAuthority: null | PublicKey,\n\n  /**\n   * Total supply of tokens\n   */\n  supply: u64,\n\n  /**\n   * Number of base 10 digits to the right of the decimal place\n   */\n  decimals: number,\n\n  /**\n   * Is this mint initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Optional authority to freeze token accounts\n   */\n  freezeAuthority: null | PublicKey,\n|};\n\nexport const MintLayout: typeof BufferLayout.Structure = BufferLayout.struct([\n  BufferLayout.u32('mintAuthorityOption'),\n  Layout.publicKey('mintAuthority'),\n  Layout.uint64('supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('isInitialized'),\n  BufferLayout.u32('freezeAuthorityOption'),\n  Layout.publicKey('freezeAuthority'),\n]);\n\n/**\n * Information about an account\n */\ntype AccountInfo = {|\n  /**\n   * The address of this account\n   */\n  address: PublicKey,\n\n  /**\n   * The mint associated with this account\n   */\n  mint: PublicKey,\n\n  /**\n   * Owner of this account\n   */\n  owner: PublicKey,\n\n  /**\n   * Amount of tokens this account holds\n   */\n  amount: u64,\n\n  /**\n   * The delegate for this account\n   */\n  delegate: null | PublicKey,\n\n  /**\n   * The amount of tokens the delegate authorized to the delegate\n   */\n  delegatedAmount: u64,\n\n  /**\n   * Is this account initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Is this account frozen\n   */\n  isFrozen: boolean,\n\n  /**\n   * Is this a native token account\n   */\n  isNative: boolean,\n\n  /**\n   * If this account is a native token, it must be rent-exempt. This\n   * value logs the rent-exempt reserve which must remain in the balance\n   * until the account is closed.\n   */\n  rentExemptReserve: null | u64,\n\n  /**\n   * Optional authority to close the account\n   */\n  closeAuthority: null | PublicKey,\n|};\n\n/**\n * @private\n */\nexport const AccountLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.publicKey('mint'),\n    Layout.publicKey('owner'),\n    Layout.uint64('amount'),\n    BufferLayout.u32('delegateOption'),\n    Layout.publicKey('delegate'),\n    BufferLayout.u8('state'),\n    BufferLayout.u32('isNativeOption'),\n    Layout.uint64('isNative'),\n    Layout.uint64('delegatedAmount'),\n    BufferLayout.u32('closeAuthorityOption'),\n    Layout.publicKey('closeAuthority'),\n  ],\n);\n\n/**\n * Information about an multisig\n */\ntype MultisigInfo = {|\n  /**\n   * The number of signers required\n   */\n  m: number,\n\n  /**\n   * Number of possible signers, corresponds to the\n   * number of `signers` that are valid.\n   */\n  n: number,\n\n  /**\n   * Is this mint initialized\n   */\n  initialized: boolean,\n\n  /**\n   * The signers\n   */\n  signer1: PublicKey,\n  signer2: PublicKey,\n  signer3: PublicKey,\n  signer4: PublicKey,\n  signer5: PublicKey,\n  signer6: PublicKey,\n  signer7: PublicKey,\n  signer8: PublicKey,\n  signer9: PublicKey,\n  signer10: PublicKey,\n  signer11: PublicKey,\n|};\n\n/**\n * @private\n */\nconst MultisigLayout = BufferLayout.struct([\n  BufferLayout.u8('m'),\n  BufferLayout.u8('n'),\n  BufferLayout.u8('is_initialized'),\n  Layout.publicKey('signer1'),\n  Layout.publicKey('signer2'),\n  Layout.publicKey('signer3'),\n  Layout.publicKey('signer4'),\n  Layout.publicKey('signer5'),\n  Layout.publicKey('signer6'),\n  Layout.publicKey('signer7'),\n  Layout.publicKey('signer8'),\n  Layout.publicKey('signer9'),\n  Layout.publicKey('signer10'),\n  Layout.publicKey('signer11'),\n]);\n\n/**\n * An ERC20-like Token\n */\nexport class Token {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * The public key identifying this mint\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  programId: PublicKey;\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n  associatedProgramId: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Signer;\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(\n    connection: Connection,\n    publicKey: PublicKey,\n    programId: PublicKey,\n    payer: Signer,\n  ) {\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    });\n  }\n\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMint(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptAccount(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      AccountLayout.span,\n    );\n  }\n\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMultisig(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      MultisigLayout.span,\n    );\n  }\n\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n  static async createMint(\n    connection: Connection,\n    payer: Signer,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n    decimals: number,\n    programId: PublicKey,\n  ): Promise<Token> {\n    const mintAccount = Keypair.generate();\n    const token = new Token(\n      connection,\n      mintAccount.publicKey,\n      programId,\n      payer,\n    );\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(\n      connection,\n    );\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mintAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MintLayout.span,\n        programId,\n      }),\n    );\n\n    transaction.add(\n      Token.createInitMintInstruction(\n        programId,\n        mintAccount.publicKey,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMint',\n      connection,\n      transaction,\n      payer,\n      mintAccount,\n    );\n\n    return token;\n  }\n\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n  async createAccount(owner: PublicKey): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      this.connection,\n    );\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    const mintPublicKey = this.publicKey;\n    transaction.add(\n      Token.createInitAccountInstruction(\n        this.programId,\n        mintPublicKey,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeAccount',\n      this.connection,\n      transaction,\n      this.payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n  async createAssociatedTokenAccount(owner: PublicKey): Promise<PublicKey> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(\n    owner: PublicKey,\n    associatedAddress: PublicKey,\n  ): Promise<PublicKey> {\n    await sendAndConfirmTransaction(\n      'CreateAssociatedTokenAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createAssociatedTokenAccountInstruction(\n          this.associatedProgramId,\n          this.programId,\n          this.publicKey,\n          associatedAddress,\n          owner,\n          this.payer.publicKey,\n        ),\n      ),\n      this.payer,\n    );\n\n    return associatedAddress;\n  }\n\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n  async getOrCreateAssociatedAccountInfo(\n    owner: PublicKey,\n  ): Promise<AccountInfo> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (\n        err.message === FAILED_TO_FIND_ACCOUNT ||\n        err.message === INVALID_ACCOUNT_OWNER\n      ) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(\n            owner,\n            associatedAddress,\n          );\n        } catch (err) {\n          // ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        }\n\n        // Now this should always succeed\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n  static async createWrappedNativeAccount(\n    connection: Connection,\n    programId: PublicKey,\n    owner: PublicKey,\n    payer: Signer,\n    amount: number,\n  ): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      connection,\n    );\n\n    // Create a new account\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId,\n      }),\n    );\n\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: newAccount.publicKey,\n        lamports: amount,\n      }),\n    );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    transaction.add(\n      Token.createInitAccountInstruction(\n        programId,\n        NATIVE_MINT,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the three instructions\n    await sendAndConfirmTransaction(\n      'createAccount, transfer, and initializeAccount',\n      connection,\n      transaction,\n      payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n  async createMultisig(\n    m: number,\n    signers: Array<PublicKey>,\n  ): Promise<PublicKey> {\n    const multisigAccount = Keypair.generate();\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(\n      this.connection,\n    );\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: multisigAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MultisigLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    // create the new account\n    let keys = [\n      {pubkey: multisigAccount.publicKey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    signers.forEach(signer =>\n      keys.push({pubkey: signer, isSigner: false, isWritable: false}),\n    );\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('m'),\n    ]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // InitializeMultisig instruction\n        m,\n      },\n      data,\n    );\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMultisig',\n      this.connection,\n      transaction,\n      this.payer,\n      multisigAccount,\n    );\n\n    return multisigAccount.publicKey;\n  }\n\n  /**\n   * Retrieve mint information\n   */\n  async getMintInfo(): Promise<MintInfo> {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n    return mintInfo;\n  }\n\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n  async getAccountInfo(\n    account: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo> {\n    const info = await this.connection.getAccountInfo(account, commitment);\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(\n        `Invalid account mint: ${JSON.stringify(\n          accountInfo.mint,\n        )} !== ${JSON.stringify(this.publicKey)}`,\n      );\n    }\n    return accountInfo;\n  }\n\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n  async getMultisigInfo(multisig: PublicKey): Promise<MultisigInfo> {\n    const info = await this.connection.getAccountInfo(multisig);\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n\n    return multisigInfo;\n  }\n\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  async transfer(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'Transfer',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferInstruction(\n          this.programId,\n          source,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  async approve(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Approve',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveInstruction(\n          this.programId,\n          account,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  async revoke(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Revoke',\n      this.connection,\n      new Transaction().add(\n        Token.createRevokeInstruction(\n          this.programId,\n          account,\n          ownerPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  async setAuthority(\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let currentAuthorityPublicKey: PublicKey;\n    let signers;\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'SetAuthority',\n      this.connection,\n      new Transaction().add(\n        Token.createSetAuthorityInstruction(\n          this.programId,\n          account,\n          newAuthority,\n          authorityType,\n          currentAuthorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  async mintTo(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintTo',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n  async burn(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Burn',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async closeAccount(\n    account: PublicKey,\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'CloseAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createCloseAccountInstruction(\n          this.programId,\n          account,\n          dest,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async freezeAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'FreezeAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createFreezeAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async thawAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ThawAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createThawAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  async transferChecked(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'TransferChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferCheckedInstruction(\n          this.programId,\n          source,\n          this.publicKey,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  async approveChecked(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ApproveChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveCheckedInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  async mintToChecked(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintToChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n  async burnChecked(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'BurnChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n  async syncNative(nativeAccount: PublicKey): Promise<void> {\n    await sendAndConfirmTransaction(\n      'SyncNative',\n      this.connection,\n      new Transaction().add(\n        Token.createSyncNativeInstruction(this.programId, nativeAccount),\n      ),\n      this.payer,\n    );\n  }\n\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n  static createInitMintInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    decimals: number,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n  ): TransactionInstruction {\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('decimals'),\n      Layout.publicKey('mintAuthority'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('freezeAuthority'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeMint instruction\n          decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n  static createInitAccountInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n  ): TransactionInstruction {\n    const keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // InitializeAccount instruction\n      },\n      data,\n    );\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  static createTransferInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 3, // Transfer instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  static createApproveInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 4, // Approve instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createRevokeInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 5, // Approve instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  static createSetAuthorityInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('authorityType'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('newAuthority'),\n    ]);\n\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 6, // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: currentAuthority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: currentAuthority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  static createMintToInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 7, // MintTo instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 8, // Burn instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createCloseAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    dest: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 9, // CloseAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createFreezeAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 10, // FreezeAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createThawAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 11, // ThawAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  static createTransferCheckedInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    mint: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 12, // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  static createApproveCheckedInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 13, // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  static createMintToCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 14, // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 15, // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n  static createSyncNativeInstruction(\n    programId: PublicKey,\n    nativeAccount: PublicKey,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 17, // SyncNative instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: nativeAccount, isSigner: false, isWritable: true}];\n    return new TransactionInstruction({keys, programId: programId, data});\n  }\n\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n  static async getAssociatedTokenAddress(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve: boolean = false,\n  ): Promise<PublicKey> {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n    return (\n      await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedProgramId,\n      )\n    )[0];\n  }\n\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n  static createAssociatedTokenAccountInstruction(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    associatedAccount: PublicKey,\n    owner: PublicKey,\n    payer: PublicKey,\n  ): TransactionInstruction {\n    const data = Buffer.alloc(0);\n\n    let keys = [\n      {pubkey: payer, isSigner: true, isWritable: true},\n      {pubkey: associatedAccount, isSigner: false, isWritable: true},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: SystemProgram.programId, isSigner: false, isWritable: false},\n      {pubkey: programId, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {\n  PACKET_DATA_SIZE,\n  SIGNATURE_LENGTH_IN_BYTES,\n} from './transaction-constants';\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const newOpts = opts as TransactionBlockhashCtor;\n      Object.assign(this, newOpts);\n      this.recentBlockhash = newOpts.blockhash;\n      this.lastValidBlockHeight = newOpts.lastValidBlockHeight;\n    } else {\n      const oldOpts = opts as TransactionCtorFields_DEPRECATED;\n      Object.assign(this, oldOpts);\n      this.recentBlockhash = oldOpts.recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\nimport {u64} from './util/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport {u64} from './util/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction, TransactionStatus} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {toBuffer} from './util/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './util/tx-expiry-custom-errors';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitment,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const checkBlockHeight = async () => {\n      try {\n        const blockHeight = await this.getBlockHeight(commitment);\n        return blockHeight;\n      } catch (_e) {\n        return -1;\n      }\n    };\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitment?: Commitment,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block height information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block production information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {BlockheightBasedTransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: BlockheightBasedTransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | BlockheightBasedTransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy:\n    | BlockheightBasedTransactionConfirmationStrategy\n    | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './compute-budget';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './transaction-constants';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './vote-program';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","module.exports = require('./lib/axios');","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n","var __self__ = (function (root) {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = root.DOMException\n}\nF.prototype = root;\nreturn new F();\n})(typeof self !== 'undefined' ? self : this);\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n}({}));\n})(__self__);\ndelete __self__.fetch.polyfill\nexports = __self__.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = __self__.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = __self__.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = __self__.Headers\nexports.Request = __self__.Request\nexports.Response = __self__.Response\nmodule.exports = exports\n","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","getEmitterAddressEth","contractAddress","Buffer","from","zeroPad","arrayify","toString","getEmitterAddressSolana","programAddress","emitter_address","_a","importTokenWasm","PublicKey","toBytes","getSignedVAAHash","signedVAA","parse_vaa","parsedVAA","importCoreWasm","ethers","timestamp","substring","nonce","emitter_chain","sequence","consistency_level","uint8ArrayToHex","payload","join","parseSequenceFromLogEth","receipt","bridgeAddress","bridgeLog","logs","filter","l","address","Implementation__factory","parseLog","args","SOLANA_SEQ_LOG","parseSequenceFromLogSolana","info","_b","meta","logMessages","msg","startsWith","replace","Error","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","String","__","constructor","create","_abi","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","components","_bytecode","Bridge__factory","_super","signer","deploy","overrides","getDeployTransaction","attach","connect","createInterface","utils","signerOrProvider","Contract","bytecode","abi","ContractFactory","TokenImplementation__factory","ChainID","__assign","assign","s","i","arguments","__values","o","m","baseMessageID","emitterChain","emitterAddress","MessageID","message","writer","_m0","uint32","int32","string","uint64","object","undefined","baseGetSignedVAARequest","GetSignedVAARequest","messageId","fork","ldelim","baseGetSignedVAAResponse","GetSignedVAAResponse","input","reader","end","len","pos","vaaBytes","Uint8Array","tag","bytes","skipType","baseGetLastHeartbeatsRequest","GetLastHeartbeatsRequest","baseGetLastHeartbeatsResponse","GetLastHeartbeatsResponse","entries","GetLastHeartbeatsResponse_Entry","decode","baseGetLastHeartbeatsResponse_Entry","verifiedGuardianAddr","p2pNodeAddr","encode","rawHeartbeat","Heartbeat","fromJSON","toJSON","obj","fromPartial","baseGetCurrentGuardianSetRequest","GetCurrentGuardianSetRequest","baseGetCurrentGuardianSetResponse","GetCurrentGuardianSetResponse","guardianSet","GuardianSet","baseGuardianSet","index","addresses","e_4","_c","e_4_1","error","return","e_5","Number","e_5_1","map","e_6","e_6_1","PublicRPCServiceClientImpl","rpc","GetLastHeartbeats","bind","GetSignedVAA","GetCurrentGuardianSet","request","metadata","unary","PublicRPCServiceGetLastHeartbeatsDesc","PublicRPCServiceGetSignedVAADesc","PublicRPCServiceGetCurrentGuardianSetDesc","PublicRPCServiceDesc","serviceName","methodName","service","requestStream","responseStream","requestType","serializeBinary","finish","responseType","deserializeBinary","data","toObject","GrpcWebImpl","host","options","methodDesc","_request","_this","maybeCombinedMetadata","BrowserHeaders","headersMap","grpc","transport","debug","onEnd","response","status","err","statusMessage","code","trailers","globalThis","self","window","global","atob","btoa","Long","getSignedVAA","extraGrpcOpts","getBridgeFeeIx","connection","payerAddress","bridge","feeAccount","bridgeStatePK","bridgeStateAccountInfo","bridgeState","fee_collector_address","state_address","getAccountInfo","parse_state","SystemProgram","fromPubkey","toPubkey","lamports","config","fee","ixFromRust","keys","accounts","accountMetaFromRust","TransactionInstruction","programId","program_id","pubkey","isSigner","is_signer","isWritable","is_writable","postVaa","signTransaction","bridge_id","payer","vaa","guardian_set_address","parse_guardian_set","verify_signatures_ix","post_vaa_ix","bridge_state","guardian_addr","acc","guardian_data","signature_set","txs","txs_2","txs_2_1","tx","ixs","transaction_1","blockhash_1","signed_1","txid_1","e_2_1","ix","transaction","blockhash","signed","txid","e_2","getBridgeState","guardian_set_index","Keypair","publicKey","Transaction","add","getRecentBlockhash","recentBlockhash","feePayer","partialSign","sendRawTransaction","serialize","confirmTransaction","coreWasms","bundler","node","tokenWasms","importDefaultCoreWasm","importDefaultTokenWasm","canonicalAddress","humanAddress","bech32","words","isNativeDenom","isNativeTerra","attestFromEth","tokenBridgeAddress","tokenAddress","attestToken","createNonce","wait","attestFromSolana","mintAddress","transferIx","attest_ix","messageKey","readUInt32LE","createWrappedOnEth","createWrapped","createWrappedOnSolana","create_wrapped_ix","getForeignAssetSolana","originChain","originAsset","wrapped_address","wrappedAddress","wrappedAddressPK","getIsTransferCompletedEth","provider","tokenBridge","signedVAAHash","isTransferCompleted","getIsTransferCompletedSolana","claimAddress","claim_address","getIsWrappedAssetEth","assetAddress","isWrappedAsset","getOriginalAssetEth","lookupChainId","token","chainId","nativeContract","isWrapped","getOriginalAssetSol","parse_wrapped_meta","wrapped_meta_address","wrappedMetaAddress","wrappedMetaAddressPK","wrappedMetaAccountInfo","parsed","chain","token_address","CHAIN_ID_SOLANA","__read","r","ar","__spreadArray","to","il","j","redeemOnEth","completeTransfer","redeemOnSolana","isSolanaNative","complete_transfer_wrapped_ix","complete_transfer_native_ix","readUInt16BE","approveEth","amount","approve","transferFromEth","recipientChain","recipientAddress","transferTokens","transferFromEthNative","wrapAndTransferETH","transferNativeSol","targetAddress","targetChain","rentBalance","mintPublicKey","payerPublicKey","ancillaryKeypair","createAncillaryAccountIx","initialBalanceTransferIx","initAccountIx","transfer_native_ix","approval_authority_address","approvalIx","closeAccountIx","Token","WSOL_ADDRESS","newAccountPubkey","space","AccountLayout","TOKEN_PROGRAM_ID","BigInt","u64","transferFromSolana","fromAddress","originAddress","fromOwnerAddress","transfer_wrapped_ix","isEVMChain","CHAIN_ID_ETH","CHAIN_ID_BSC","CHAIN_ID_ETHEREUM_ROPSTEN","CHAIN_ID_AVAX","CHAIN_ID_POLYGON","CHAIN_ID_OASIS","a","hexToUint8Array","h","nativeToHexString","CHAIN_ID_TERRA","nonceConst","Math","random","nonceBuffer","alloc","writeUInt32LE","logger","Logger","version","paramTypeBytes","RegExp","paramTypeNumber","AbiCoder","coerceFunc","defineReadOnly","_getCoder","param","baseType","AddressCoder","BooleanCoder","StringCoder","BytesCoder","ArrayCoder","arrayChildren","arrayLength","TupleCoder","component","NullCoder","match","size","parseInt","throwArgumentError","NumberCoder","FixedBytesCoder","_getWordSize","_getReader","allowLoose","Reader","_getWriter","Writer","getDefaultValue","types","coders","ParamType","defaultValue","values","throwError","count","coder","loose","defaultAbiCoder","_constructorGuard","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","populate","params","key","FormatTypes","freeze","sighash","minimal","full","json","paramTypeArray","constructorGuard","operation","fromObject","_isParamType","format","comp","JSON","parse","stringify","allowIndexed","fromString","isParamType","verifyType","originalParam","newNode","parent","state","allowType","c","allowParams","child","allowName","allowArray","sibling","readArray","parseParamType","parseParams","allowIndex","trim","accum","depth","offset","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","ErrorFragment","split","isEventFragment","verifyIdentifier","regexParen","forEach","modifier","warn","parseGas","gas","comps","BigNumber","parseModifiers","constant","payable","console","log","verifyState","toNumber","isConstructorFragment","parens","output","isFunctionFragment","returns","checkForbidden","fragment","sig","isErrorFragment","regexIdentifier","LogDescription","Description","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","signature","reason","wrapAccessError","property","wrap","Interface","fragments","getStatic","bucket","functions","events","errors","getAddress","hexDataSlice","id","eventFragment","getFunction","nameOrSignatureOrSighash","isHexString","getSighash","matching","getEvent","nameOrSignatureOrTopic","topichash","toLowerCase","getEventTopic","getError","_decodeParams","_abiCoder","_encodeParams","encodeDeploy","decodeErrorResult","hexlify","slice","encodeErrorResult","concat","decodeFunctionData","functionFragment","encodeFunctionData","decodeFunctionResult","errorArgs","errorName","errorSignature","selector","builtin","method","encodeFunctionResult","encodeFilterTopics","argument","topics","encodeTopic","keccak256","hexZeroPad","isArray","encodeEventLog","dataTypes","dataValues","decodeEventLog","topicHash","expected","nonIndexed","dynamic","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hash","defineProperty","enumerable","get","parseTransaction","topic","parseError","hexData","errorFragment","_isInterface","ForkEvent","_isForkEvent","Provider","checkAbstract","getFeeData","block","gasPrice","resolveProperties","getBlock","getGasPrice","catch","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","mul","addListener","eventName","listener","on","removeListener","off","_isProvider","getChecksumAddress","chars","expanded","charCodeAt","hashed","toUpperCase","ibanLookup","fromCharCode","safeDigits","floor","x","log10","LN10","ibanChecksum","checksum","_base36To16","isAddress","getIcapAddress","base36","_base16To36","getContractAddress","stripZeros","toHexString","getCreate2Address","salt","initCodeHash","hexDataLength","textData","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","base","k","_leader","q","byte","reverse","Base32","Base58","BN","_BN","MAX_SAFE","isBigNumberish","isBigNumber","isBytes","_warnedToStringRadix","hex","_hex","_isBigNumber","fromTwos","toBigNumber","toBN","toTwos","abs","other","sub","div","isZero","throwFault","mod","isNeg","umod","pow","and","isNegative","or","xor","mask","maskn","shl","shln","shr","shrn","eq","lt","lte","gt","gte","toBigInt","toHex","anyValue","fault","Zero","NegativeOne","zeros","getMultiplier","decimals","formatFixed","multiplier","negative","fraction","whole","parseFixed","wholeValue","fractionValue","wei","FixedFormat","width","_multiplier","check","FixedNumber","_value","_isFixedNumber","_checkFormat","addUnsafe","fromValue","subUnsafe","mulUnsafe","divUnsafe","hasFraction","ONE","toFormat","ceiling","round","factor","bump","BUMP","toUnsafeFloat","parseFloat","fixedFormat","numeric","decimal","fromBytes","isHexable","addSlice","array","isBytesLike","isInteger","checkSafeUint53","unshift","allowMissingPrefix","hexPad","items","objects","item","reduce","set","start","HexCharacters","endOffset","hexConcat","hexValue","trimmed","hexStripZeros","splitSignature","_vs","recoveryParam","yParityAndS","compact","vs","recId","joinSignature","HashZero","messagePrefix","hashMessage","toUtf8Bytes","Zeros","fill","Partition","isValidName","nameprep","namehash","current","partition","dnsEncode","padding","One","MaxUint256","hexTrue","hexFalse","domainFieldTypes","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","padOffset","hexPadRight","encodeType","fields","TypedDataEncoder","deepCopy","links","parents","subtypes","uniqueNames","field","primaryTypes","checkCircular","found","subtype","primaryType","st","sort","_types","getEncoder","encoder","_encoderCache","_getEncoder","subEncoder","encodedType","encodeData","hashStruct","_visit","callback","visit","domain","domainFields","EIP712Domain","hashDomain","resolveName","shallowCopy","ensCache","domainValues","domainTypes","typesWithDomain","N","MasterSecret","HardenedBit","getUpperMask","bits","bytes32","base58check","sha256","getWordlist","wordlist","wordlists","defaultPath","HDNode","privateKey","parentFingerprint","chainCode","mnemonicOrPath","signingKey","SigningKey","compressedPublicKey","ripemd160","computeAddress","path","extendedKey","neuter","_derive","I","computeHmac","SupportedAlgorithm","IL","IR","ki","Ki","_addPoint","srcMnemonic","mnemonic","phrase","locale","fingerprint","derivePath","shift","seed","seedArray","password","entropyToMnemonic","mnemonicToEntropy","_fromSeed","mnemonicToSeed","UnicodeNormalizationForm","pbkdf2","checkNormalize","entropy","ceil","getWordIndex","normalize","bit","entropyBits","checksumMask","indices","remainingBits","checksumBits","getWord","isValidMnemonic","getAccountPath","CrowdsaleAccount","isCrowdsaleAccount","_isCrowdsaleAccount","decrypt","getPassword","ethaddr","searchPath","encseed","looseArrayify","iv","encryptedSeed","aesCbc","aes","seedHex","seedHexBytes","decryptJsonWallet","progressCallback","isCrowdsaleWallet","account","decryptCrowdsale","isKeystoreWallet","decryptKeystore","decryptJsonWalletSync","decryptKeystoreSync","getJsonWalletAddress","hasMnemonic","KeystoreAccount","isKeystoreAccount","_isKeystoreAccount","_getAccount","ciphertext","counter","aesCtr","_decrypt","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","pbkdf2Sync","passwordBytes","dkLen","prfFunc","_pbkdf2","_computeKdfKey","pbkdf2Func","scryptFunc","kdf","prf","decryptSync","scrypt","encrypt","client","randomBytes","uuidRandom","uuid","derivedKey","macPrefix","mac","uuidV4","Crypto","cipher","cipherparams","kdfparams","dklen","now","Date","getUTCFullYear","zpad","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","hexString","currentChild","matchingChild","root","checkInt","checkInts","arrayish","coerceArray","arg","copy","buffer","ArrayBuffer","isView","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","text","encodeURI","substr","convertHex","Hex","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","plaintext","ModeOfOperationECB","description","_aes","ModeOfOperationCBC","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utf8","pkcs7","pad","padder","strip","_arrayTest","module","exports","sha3","_permanentCensorErrors","_censorErrors","LogLevels","warning","_logLevel","_globalLogger","_normalizeError","missing","form","_checkNormalize","LogLevel","ErrorCode","HEX","writable","_log","logLevel","level","levels","DEBUG","INFO","WARNING","makeError","UNKNOWN_ERROR","messageDetails","url","NUMERIC_FAULT","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","INVALID_ARGUMENT","assert","condition","assertArgument","UNSUPPORTED_OPERATION","checkArgumentCount","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","censorship","permanent","globalLogger","iterations","keylen","hashAlgorithm","hLen","DK","block1","T","U","destPos","ctor","getPrototypeOf","promises","all","checkProperties","properties","opaque","bigint","boolean","number","_isFrozen","isFrozen","_deepCopy","anyGlobal","getGlobal","crypto","msCrypto","getRandomValues","shuffled","tmp","arrayifyInteger","unarrayifyInteger","_encode","_decodeChildren","childOffset","decoded","_decode","consumed","lengthLength","update","digest","sha512","algorithm","val","equal","zero2","word","res","toArray","enc","hi","lo","arr","minAssert","minUtils","getNAF","num","w","naf","max","bitLength","ws","clone","z","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","computer","parseBytes","intFromLE","BaseCurve","conf","red","prime","zero","toRed","one","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","nafW","repr","jpoint","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","cmp","toJ","redNeg","ja","jb","decodePoint","byteLength","pointFromX","encodeCompressed","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","dbl","superCtor","super_","configurable","TempCtor","ShortCurve","Base","tinv","redInvm","zeroA","fromRed","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","u","x1","y1","x2","y2","len1","sqr","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","pre","endoMul","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","require$$0","short","require$$1","mont","edwards","curves","PresetCurve","defineCurve","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropyEnc","nonceEnc","pers","persEnc","_init","_update","_hmac","kmac","reseed","addEnc","generate","temp","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","derive","sign","verify","Signature","_importDER","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","rand","EC","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","require$$2","require$$3","eddsa","_curve","getCurve","p0","signDigest","digestBytes","computeSharedSecret","otherKey","otherKeyPair","computePublicKey","_isSigningKey","recoverPublicKey","rs","compressed","regexBytes","regexNumber","regexArray","_pack","pack","tight","hashKeccak256","hashSha256","formatBytes32String","parseBytes32String","toUtf8String","createTable","func","pair","createRangeTable","matchMap","ranges","range","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","codes","toUtf8CodePoints","codesTableB2","codepoint","_nameprepTableB2","_toUtf8String","Utf8ErrorReason","ignoreFunc","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","Utf8ErrorFuncs","ignore","OVERLONG","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","str","escapeChar","_toEscapedUtf8String","codePoint","codePoints","TransactionTypes","handleAddress","handleNumber","transactionFields","maxLength","allowedTransactionKeys","gasLimit","recoverAddress","formatNumber","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip1559","accessList","RLP","_serializeEip2930","raw","fieldInfo","_serialize","transactionType","_parseEipSignature","recid","rawTransaction","_parse","_parseEip2930","_parseEip1559","names","commify","suffix","formatted","formatUnits","unitName","parseUnits","formatEther","parseEther","ether","Wallet","Signer","_mnemonic","_signingKey","signMessage","_signTypedData","populated","_TypedDataEncoder","encryptKeystore","extraEntropy","fromMnemonic","verifyMessage","verifyTypedData","getUrl","href","headers","skipFetchSetup","mode","cache","credentials","redirect","referrer","fetch","arrayBuffer","statusCode","statusText","staller","duration","setTimeout","bodyify","_fetchData","processFunc","attemptLimit","throttleLimit","throttleCallback","throttleSlotInterval","errorPassThrough","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","base64Encode","reData","dataMatch","base64Decode","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","serverError","throttleRetry","race","fetchJson","updated","poll","interval","retryLimit","oncePoll","once","onceBlock","Wordlist","lang","loadWords","langEn","en","ENV","CLUSTER_SLUGS","MainnetBeta","testnet","Testnet","devnet","Devnet","queryJsonFiles","files","repo","tokenlist","tokens","Strategy","TokenListProvider","strategy","CDN","TokenListContainer","strategies","GitHub","repositories","Static","Solana","tokenList","tags","includes","slug","filterByChainId","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","rt","isNaN","base64","ieee754","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","encodingOrOffset","allocUnsafe","encoding","isEncoding","actual","write","arrayView","isInstance","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","foundIndex","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","min","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","equals","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","ret","out","hexSliceLookupTable","checkOffset","ext","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","copyWithin","E","sym","getMessage","super","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","src","dst","table","i16","fn","BufferBigIntNotDefined","opts","ctx","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","isString","primitive","simple","isNull","formatPrimitive","visibleKeys","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","braces","toUTCString","formatProperty","formatArray","prev","cur","reduceToSingleString","desc","getOwnPropertyDescriptor","line","re","isObject","objectToString","isPrimitive","origin","prop","_functionsHaveNames","hasOwn","objectKeys","pSlice","functionsHaveNames","pToString","arrbuf","DataView","fail","ok","regex","getName","AssertionError","operator","generatedMessage","truncate","stackStartFunction","captureStackTrace","fn_name","next_line","something","utilInspect","rawname","_deepEqual","strict","memos","getTime","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","aIsArgs","isArguments","bIsArgs","ka","kb","objEquiv","expectedException","test","isPrototypeOf","_throws","shouldThrow","_tryBlock","userProvidedMessage","isUnexpectedException","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","Layout","span","makeDestinationObject","getSpan","replicate","rv","fromArray","nameWithProperty","Class","layout","layout_","boundConstructor_","ExternalLayout","isCount","GreedyCount","elementSpan","rem","OffsetLayout","UInt","UIntBE","Int","IntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","elementLayout","elo","Structure","decodePrefixes","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","Blob","CString","srcb","UTF8","maxSpan","Constant","BufferLayout","sendAndConfirmTransaction","title","signers","realSendAndConfirmTransaction","skipPreflight","ASSOCIATED_TOKEN_PROGRAM_ID","FAILED_TO_FIND_ACCOUNT","INVALID_ACCOUNT_OWNER","pubkeyToBuffer","toBuffer","isAccount","accountOrPublicKey","AuthorityTypeCodes","MintTokens","FreezeAccount","AccountOwner","CloseAccount","NATIVE_MINT","MintLayout","MultisigLayout","_defineProperty","associatedProgramId","getMinimumBalanceForRentExemption","mintAuthority","freezeAuthority","mintAccount","balanceNeeded","getMinBalanceRentForExemptMint","createInitMintInstruction","owner","getMinBalanceRentForExemptAccount","newAccount","createInitAccountInstruction","associatedAddress","getAssociatedTokenAddress","createAssociatedTokenAccountInternal","createAssociatedTokenAccountInstruction","multisigAccount","getMinBalanceRentForExemptMultisig","SYSVAR_RENT_PUBKEY","dataLayout","instruction","mintInfo","mintAuthorityOption","supply","fromBuffer","isInitialized","freezeAuthorityOption","commitment","accountInfo","mint","delegateOption","delegate","delegatedAmount","isNativeOption","rentExemptReserve","isNative","closeAuthorityOption","closeAuthority","multisig","multisigInfo","signer1","signer2","signer3","signer4","signer5","signer6","signer7","signer8","signer9","signer10","signer11","destination","multiSigners","ownerPublicKey","createTransferInstruction","createApproveInstruction","createRevokeInstruction","newAuthority","authorityType","currentAuthority","currentAuthorityPublicKey","createSetAuthorityInstruction","authority","createMintToInstruction","createBurnInstruction","authorityPublicKey","createCloseAccountInstruction","createFreezeAccountInstruction","createThawAccountInstruction","createTransferCheckedInstruction","createApproveCheckedInstruction","createMintToCheckedInstruction","createBurnCheckedInstruction","nativeAccount","createSyncNativeInstruction","commandDataLayout","encodeLength","option","associatedAccount","minimalisticAssert","inherits_browserModule","isSurrogatePair","htonl","zero8","endian","ah","al","bh","bl","ch","cl","dh","dl","eh","el","BlockHash","pending","pendingTotal","blockSize","padLength","_delta8","_delta32","common","join32","_pad","_digest","rotr32","ch32","maj32","p32","shaCommon","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","W","_1","toHex32","split32","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","_256","SHA224","_224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","_512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","_384","sha","require$$4","sum32_3","RIPEMD160","Kh","ripemd","A","B","C","D","Ah","Bh","Ch","Dh","Eh","rh","sh","Hmac","Hash","inner","outer","hmac","sha1","sha224","sha384","Struct","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Enum","enum","Map","MAX_SEED_LENGTH","_bn","isPublicKeyData","bs58","toBase58","toArrayLike","fromPublicKey","seeds","publicKeyBytes","is_on_curve","createProgramAddressSync","seedsWithNonce","findProgramAddressSync","pubkeyData","default","naclLowLevel","nacl","gf","chk","den","den2","den4","den6","set25519","gf1","unpack25519","M","Z","pow2523","neq25519","pack25519","crypto_verify_32","Account","secretKey","_keypair","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","SIGNATURE_LENGTH_IN_BYTES","rustString","rsl","rslShim","decodeLength","elem","rem_len","Message","accountKeys","instructions","indexToProgramIds","programIdIndex","isAccountSigner","numRequiredSignatures","isAccountWritable","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","signData","accountCount","dataSlice","messageArgs","TransactionStatus","DEFAULT_SIGNATURE","signatures","lastValidBlockHeight","nonceInfo","_message","_json","newOpts","oldOpts","nonceInstruction","compileMessage","accountMetas","accountMeta","uniqueMetas","pubkeyString","uniqueIndex","findIndex","feePayerIndex","payerMeta","splice","signedKeys","unsignedKeys","invariant","keyIndex","_compile","every","serializeMessage","getFeeForMessage","setSigners","Set","uniqueSigners","_partialSign","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","signatureCount","transactionLength","wireTransaction","keyObj","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","async","sendOptions","preflightCommitment","maxRetries","sendTransaction","sleep","ms","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SystemInstruction","checkProgramId","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","checkKeyLength","Create","Transfer","TransferWithSeed","basePubkey","Allocate","accountPubkey","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","authorized","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","expectedLength","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","chunkSize","program","programInfo","executable","allocate","transfer","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","additionalFee","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","objToString","objKeys","isArrayProp","propVal","toStr","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","PublicKeyFromString","coerce","instance","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","createRpcResult","pick","jsonrpc","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","context","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","SlotNotificationResult","SlotUpdateResult","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","uiTokenAmount","ConfirmedTransactionMetaResult","innerInstructions","preBalances","postBalances","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","endpoint","commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","URL","protocol","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","confirmTransactionInitialTimeout","useHttps","port","makeWebsocketUrl","customFetch","fetchImpl","fetchWithMiddleware","init","modifiedFetchArgs","modifiedInfo","modifiedInit","RpcClient","agent","too_many_requests_retries","waitTime","createRpcClient","requests","batch","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","_buildArgs","unsafeRes","getBalanceAndContext","configArg","tokenMintAddress","ownerAddress","_args","getAccountInfoAndContext","publicKeys","getMultipleAccountsInfoAndContext","configOrCommitment","extra","filters","rawSignature","decodedSignature","subscriptionCommitment","timeoutId","subscriptionId","confirmationPromise","onSignature","__type","PROCESSED","checkBlockHeight","getBlockHeight","_e","expiryPromise","timeoutMs","TIMED_OUT","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","outcome","removeSignatureListener","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","rest","endSlot","transactionDetails","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","getConfirmedSignaturesForAddress2","fromAccountData","getNonceAndContext","disableCache","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","includeAccounts","originalTx","_blockhashWithExpiryBlockHeight","encodedTransaction","sigVerify","traceIndent","logTrace","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","close","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","delete","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","keypair","skipValidation","TextEncoder","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","PRIVATE_KEY_BYTES","fromSecretKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","lockup","Initialize","stakePubkey","Delegate","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","splitInstruction","publicKeyCreate","ecdsaSign","secp256k1","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","ETHEREUM_ADDRESS_BYTES","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","authorizedWithdrawer","votes","authorizedVoters","priorVoters","lastTimestamp","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","authorizedVoter","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","VoteInit","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","voteInit","InitializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","http","https","clusterApiUrl","cluster","tls","LAMPORTS_PER_SOL","bech32m","ALPHABET","ALPHABET_MAP","polymodStep","prefixChk","prefix","convert","inBits","outBits","maxV","toWords","fromWordsUnsafe","fromWords","getLibraryFromEncoding","ENCODING_CONST","__decode","LIMIT","lowered","uppered","wordChars","decodeUnsafe","__self__","F","DOMException","support","viewClasses","isArrayBufferView","normalizeName","normalizeValue","iteratorFor","Headers","append","bodyUsed","fileReaderReady","onload","onerror","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","readAsText","readBlobAsText","readArrayBufferAsText","formData","oldValue","methods","Request","signal","upcased","normalizeMethod","decodeURIComponent","parseHeaders","rawHeaders","Response","bodyInit","redirectStatuses","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","abi_1","address_1","basex_1","bytes_1","hash_1","hdnode_1","json_wallets_1","keccak256_1","logger_1","sha2_1","solidity_1","random_1","properties_1","signing_key_1","strings_1","transactions_1","units_1","wallet_1","web_1","sha2_2","strings_2","MAX_VALUE","Uint32Array","h0","h1","h4","h5","h6","h7","blocks","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","innerLen","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","_X","arraycopy","blockxor","salsa20_8","R","srcPos","checkBufferish","ensureInteger","_scrypt","XY","totalOps","i1","Bi","currentOp","lastPercent10","stop","i0","nextTick","setImmediate","incrementalSMix","steps","percent10","lib","lastProgress","progress","syncScrypt"],"sourceRoot":""}