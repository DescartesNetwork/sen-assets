{"version":3,"file":"static/js/176.f9c4a219.chunk.js","mappings":"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","sources":["../node_modules/@certusone/wormhole-sdk/lib/solana/token/token_bridge_bg.js"],"sourcesContent":["import * as wasm from './token_bridge_bg.wasm';\r\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\r\nvar cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\r\ncachedTextDecoder.decode();\r\nvar cachegetUint8Memory0 = null;\r\nfunction getUint8Memory0() {\r\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\r\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\r\n    }\r\n    return cachegetUint8Memory0;\r\n}\r\nfunction getStringFromWasm0(ptr, len) {\r\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\r\n}\r\nvar heap = new Array(32).fill(undefined);\r\nheap.push(undefined, null, true, false);\r\nvar heap_next = heap.length;\r\nfunction addHeapObject(obj) {\r\n    if (heap_next === heap.length)\r\n        heap.push(heap.length + 1);\r\n    var idx = heap_next;\r\n    heap_next = heap[idx];\r\n    heap[idx] = obj;\r\n    return idx;\r\n}\r\nvar WASM_VECTOR_LEN = 0;\r\nvar lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\r\nvar cachedTextEncoder = new lTextEncoder('utf-8');\r\nvar encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\r\n    ? function (arg, view) {\r\n        return cachedTextEncoder.encodeInto(arg, view);\r\n    }\r\n    : function (arg, view) {\r\n        var buf = cachedTextEncoder.encode(arg);\r\n        view.set(buf);\r\n        return {\r\n            read: arg.length,\r\n            written: buf.length\r\n        };\r\n    });\r\nfunction passStringToWasm0(arg, malloc, realloc) {\r\n    if (realloc === undefined) {\r\n        var buf = cachedTextEncoder.encode(arg);\r\n        var ptr_1 = malloc(buf.length);\r\n        getUint8Memory0().subarray(ptr_1, ptr_1 + buf.length).set(buf);\r\n        WASM_VECTOR_LEN = buf.length;\r\n        return ptr_1;\r\n    }\r\n    var len = arg.length;\r\n    var ptr = malloc(len);\r\n    var mem = getUint8Memory0();\r\n    var offset = 0;\r\n    for (; offset < len; offset++) {\r\n        var code = arg.charCodeAt(offset);\r\n        if (code > 0x7F)\r\n            break;\r\n        mem[ptr + offset] = code;\r\n    }\r\n    if (offset !== len) {\r\n        if (offset !== 0) {\r\n            arg = arg.slice(offset);\r\n        }\r\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\r\n        var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\r\n        var ret = encodeString(arg, view);\r\n        offset += ret.written;\r\n    }\r\n    WASM_VECTOR_LEN = offset;\r\n    return ptr;\r\n}\r\nfunction getObject(idx) { return heap[idx]; }\r\nfunction dropObject(idx) {\r\n    if (idx < 36)\r\n        return;\r\n    heap[idx] = heap_next;\r\n    heap_next = idx;\r\n}\r\nfunction takeObject(idx) {\r\n    var ret = getObject(idx);\r\n    dropObject(idx);\r\n    return ret;\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {string} bridge_id\r\n* @param {string} payer\r\n* @param {string} message\r\n* @param {string} mint\r\n* @param {number} nonce\r\n* @returns {any}\r\n*/\r\nexport function attest_ix(program_id, bridge_id, payer, message, mint, nonce) {\r\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len1 = WASM_VECTOR_LEN;\r\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len2 = WASM_VECTOR_LEN;\r\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len3 = WASM_VECTOR_LEN;\r\n    var ptr4 = passStringToWasm0(mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len4 = WASM_VECTOR_LEN;\r\n    var ret = wasm.attest_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, nonce);\r\n    return takeObject(ret);\r\n}\r\nvar u32CvtShim = new Uint32Array(2);\r\nvar uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\r\nfunction passArray8ToWasm0(arg, malloc) {\r\n    var ptr = malloc(arg.length * 1);\r\n    getUint8Memory0().set(arg, ptr / 1);\r\n    WASM_VECTOR_LEN = arg.length;\r\n    return ptr;\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {string} bridge_id\r\n* @param {string} payer\r\n* @param {string} message\r\n* @param {string} from\r\n* @param {string} mint\r\n* @param {number} nonce\r\n* @param {BigInt} amount\r\n* @param {BigInt} fee\r\n* @param {Uint8Array} target_address\r\n* @param {number} target_chain\r\n* @returns {any}\r\n*/\r\nexport function transfer_native_ix(program_id, bridge_id, payer, message, from, mint, nonce, amount, fee, target_address, target_chain) {\r\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len1 = WASM_VECTOR_LEN;\r\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len2 = WASM_VECTOR_LEN;\r\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len3 = WASM_VECTOR_LEN;\r\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len4 = WASM_VECTOR_LEN;\r\n    var ptr5 = passStringToWasm0(mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len5 = WASM_VECTOR_LEN;\r\n    uint64CvtShim[0] = amount;\r\n    var low6 = u32CvtShim[0];\r\n    var high6 = u32CvtShim[1];\r\n    uint64CvtShim[0] = fee;\r\n    var low7 = u32CvtShim[0];\r\n    var high7 = u32CvtShim[1];\r\n    var ptr8 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\r\n    var len8 = WASM_VECTOR_LEN;\r\n    var ret = wasm.transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, nonce, low6, high6, low7, high7, ptr8, len8, target_chain);\r\n    return takeObject(ret);\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {string} bridge_id\r\n* @param {string} payer\r\n* @param {string} message\r\n* @param {string} from\r\n* @param {string} from_owner\r\n* @param {number} token_chain\r\n* @param {Uint8Array} token_address\r\n* @param {number} nonce\r\n* @param {BigInt} amount\r\n* @param {BigInt} fee\r\n* @param {Uint8Array} target_address\r\n* @param {number} target_chain\r\n* @returns {any}\r\n*/\r\nexport function transfer_wrapped_ix(program_id, bridge_id, payer, message, from, from_owner, token_chain, token_address, nonce, amount, fee, target_address, target_chain) {\r\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len1 = WASM_VECTOR_LEN;\r\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len2 = WASM_VECTOR_LEN;\r\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len3 = WASM_VECTOR_LEN;\r\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len4 = WASM_VECTOR_LEN;\r\n    var ptr5 = passStringToWasm0(from_owner, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len5 = WASM_VECTOR_LEN;\r\n    var ptr6 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\r\n    var len6 = WASM_VECTOR_LEN;\r\n    uint64CvtShim[0] = amount;\r\n    var low7 = u32CvtShim[0];\r\n    var high7 = u32CvtShim[1];\r\n    uint64CvtShim[0] = fee;\r\n    var low8 = u32CvtShim[0];\r\n    var high8 = u32CvtShim[1];\r\n    var ptr9 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\r\n    var len9 = WASM_VECTOR_LEN;\r\n    var ret = wasm.transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, token_chain, ptr6, len6, nonce, low7, high7, low8, high8, ptr9, len9, target_chain);\r\n    return takeObject(ret);\r\n}\r\nfunction isLikeNone(x) {\r\n    return x === undefined || x === null;\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {string} bridge_id\r\n* @param {string} payer\r\n* @param {Uint8Array} vaa\r\n* @param {string | undefined} fee_recipient\r\n* @returns {any}\r\n*/\r\nexport function complete_transfer_native_ix(program_id, bridge_id, payer, vaa, fee_recipient) {\r\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len1 = WASM_VECTOR_LEN;\r\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len2 = WASM_VECTOR_LEN;\r\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\r\n    var len3 = WASM_VECTOR_LEN;\r\n    var ptr4 = isLikeNone(fee_recipient) ? 0 : passStringToWasm0(fee_recipient, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len4 = WASM_VECTOR_LEN;\r\n    var ret = wasm.complete_transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\r\n    return takeObject(ret);\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {string} bridge_id\r\n* @param {string} payer\r\n* @param {Uint8Array} vaa\r\n* @param {string | undefined} fee_recipient\r\n* @returns {any}\r\n*/\r\nexport function complete_transfer_wrapped_ix(program_id, bridge_id, payer, vaa, fee_recipient) {\r\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len1 = WASM_VECTOR_LEN;\r\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len2 = WASM_VECTOR_LEN;\r\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\r\n    var len3 = WASM_VECTOR_LEN;\r\n    var ptr4 = isLikeNone(fee_recipient) ? 0 : passStringToWasm0(fee_recipient, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len4 = WASM_VECTOR_LEN;\r\n    var ret = wasm.complete_transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\r\n    return takeObject(ret);\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {string} bridge_id\r\n* @param {string} payer\r\n* @param {Uint8Array} vaa\r\n* @returns {any}\r\n*/\r\nexport function create_wrapped_ix(program_id, bridge_id, payer, vaa) {\r\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len1 = WASM_VECTOR_LEN;\r\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len2 = WASM_VECTOR_LEN;\r\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\r\n    var len3 = WASM_VECTOR_LEN;\r\n    var ret = wasm.create_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\r\n    return takeObject(ret);\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {string} bridge_id\r\n* @param {string} payer\r\n* @param {string} spill\r\n* @param {Uint8Array} vaa\r\n* @returns {any}\r\n*/\r\nexport function upgrade_contract_ix(program_id, bridge_id, payer, spill, vaa) {\r\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len1 = WASM_VECTOR_LEN;\r\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len2 = WASM_VECTOR_LEN;\r\n    var ptr3 = passStringToWasm0(spill, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len3 = WASM_VECTOR_LEN;\r\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\r\n    var len4 = WASM_VECTOR_LEN;\r\n    var ret = wasm.upgrade_contract_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\r\n    return takeObject(ret);\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {string} bridge_id\r\n* @param {string} payer\r\n* @param {Uint8Array} vaa\r\n* @returns {any}\r\n*/\r\nexport function register_chain_ix(program_id, bridge_id, payer, vaa) {\r\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len1 = WASM_VECTOR_LEN;\r\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n    var len2 = WASM_VECTOR_LEN;\r\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\r\n    var len3 = WASM_VECTOR_LEN;\r\n    var ret = wasm.register_chain_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\r\n    return takeObject(ret);\r\n}\r\nvar cachegetInt32Memory0 = null;\r\nfunction getInt32Memory0() {\r\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\r\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\r\n    }\r\n    return cachegetInt32Memory0;\r\n}\r\nfunction getArrayU8FromWasm0(ptr, len) {\r\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @returns {Uint8Array}\r\n*/\r\nexport function emitter_address(program_id) {\r\n    try {\r\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\r\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n        var len0 = WASM_VECTOR_LEN;\r\n        wasm.emitter_address(retptr, ptr0, len0);\r\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\r\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\r\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\r\n        wasm.__wbindgen_free(r0, r1 * 1);\r\n        return v1;\r\n    }\r\n    finally {\r\n        wasm.__wbindgen_add_to_stack_pointer(16);\r\n    }\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @returns {Uint8Array}\r\n*/\r\nexport function custody_signer(program_id) {\r\n    try {\r\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\r\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n        var len0 = WASM_VECTOR_LEN;\r\n        wasm.custody_signer(retptr, ptr0, len0);\r\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\r\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\r\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\r\n        wasm.__wbindgen_free(r0, r1 * 1);\r\n        return v1;\r\n    }\r\n    finally {\r\n        wasm.__wbindgen_add_to_stack_pointer(16);\r\n    }\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @returns {Uint8Array}\r\n*/\r\nexport function approval_authority_address(program_id) {\r\n    try {\r\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\r\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n        var len0 = WASM_VECTOR_LEN;\r\n        wasm.approval_authority_address(retptr, ptr0, len0);\r\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\r\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\r\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\r\n        wasm.__wbindgen_free(r0, r1 * 1);\r\n        return v1;\r\n    }\r\n    finally {\r\n        wasm.__wbindgen_add_to_stack_pointer(16);\r\n    }\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {Uint8Array} token_address\r\n* @param {number} token_chain\r\n* @returns {Uint8Array}\r\n*/\r\nexport function wrapped_address(program_id, token_address, token_chain) {\r\n    try {\r\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\r\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n        var len0 = WASM_VECTOR_LEN;\r\n        var ptr1 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\r\n        var len1 = WASM_VECTOR_LEN;\r\n        wasm.wrapped_address(retptr, ptr0, len0, ptr1, len1, token_chain);\r\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\r\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\r\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\r\n        wasm.__wbindgen_free(r0, r1 * 1);\r\n        return v2;\r\n    }\r\n    finally {\r\n        wasm.__wbindgen_add_to_stack_pointer(16);\r\n    }\r\n}\r\n/**\r\n* @param {string} program_id\r\n* @param {Uint8Array} mint_address\r\n* @returns {Uint8Array}\r\n*/\r\nexport function wrapped_meta_address(program_id, mint_address) {\r\n    try {\r\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\r\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\r\n        var len0 = WASM_VECTOR_LEN;\r\n        var ptr1 = passArray8ToWasm0(mint_address, wasm.__wbindgen_malloc);\r\n        var len1 = WASM_VECTOR_LEN;\r\n        wasm.wrapped_meta_address(retptr, ptr0, len0, ptr1, len1);\r\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\r\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\r\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\r\n        wasm.__wbindgen_free(r0, r1 * 1);\r\n        return v2;\r\n    }\r\n    finally {\r\n        wasm.__wbindgen_add_to_stack_pointer(16);\r\n    }\r\n}\r\n/**\r\n* @param {Uint8Array} data\r\n* @returns {any}\r\n*/\r\nexport function parse_wrapped_meta(data) {\r\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ret = wasm.parse_wrapped_meta(ptr0, len0);\r\n    return takeObject(ret);\r\n}\r\n/**\r\n* @param {Uint8Array} data\r\n* @returns {any}\r\n*/\r\nexport function parse_endpoint_registration(data) {\r\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\r\n    var len0 = WASM_VECTOR_LEN;\r\n    var ret = wasm.parse_endpoint_registration(ptr0, len0);\r\n    return takeObject(ret);\r\n}\r\nexport function __wbindgen_json_parse(arg0, arg1) {\r\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\r\n    return addHeapObject(ret);\r\n}\r\n;\r\n"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","heap","Array","fill","undefined","push","heap_next","length","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr_1","subarray","len","ptr","mem","offset","code","charCodeAt","slice","takeObject","idx","ret","getObject","dropObject","attest_ix","program_id","bridge_id","payer","message","mint","nonce","ptr0","len0","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","passArray8ToWasm0","transfer_native_ix","from","amount","fee","target_address","target_chain","ptr5","len5","low6","high6","low7","high7","ptr8","len8","transfer_wrapped_ix","from_owner","token_chain","token_address","ptr6","len6","low8","high8","ptr9","len9","isLikeNone","x","complete_transfer_native_ix","vaa","fee_recipient","complete_transfer_wrapped_ix","create_wrapped_ix","upgrade_contract_ix","spill","register_chain_ix","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","emitter_address","retptr","r0","r1","v1","custody_signer","approval_authority_address","wrapped_address","v2","wrapped_meta_address","mint_address","parse_wrapped_meta","data","parse_endpoint_registration","__wbindgen_json_parse","arg0","arg1","obj","addHeapObject","JSON","parse"],"sourceRoot":""}