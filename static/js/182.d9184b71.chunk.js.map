{"version":3,"file":"static/js/182.d9184b71.chunk.js","mappings":"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","sources":["os/configs/sol.config.ts","os/configs/register.config.ts","os/configs/index.ts","os/providers/ui.provider.tsx","os/providers/pool.provider.tsx","os/providers/wallet.provider.tsx","os/providers/account.provider.tsx","os/providers/mint.provider.tsx","os/store/accounts.reducer.ts","os/store/flags.reducer.ts","os/store/index.ts","os/store/mints.reducer.ts","os/store/page.reducer.ts","os/store/pools.reducer.ts","os/store/search.reducer.ts","os/store/ui.reducer.ts","os/store/walkthrough.reducer.ts","os/store/wallet.reducer.ts","os/view/wallet/lib/baseWallet.ts","os/view/wallet/lib/guestWallet.ts","os/view/wallet/lib/secretkeyWallet.ts","os/view/wallet/lib/keystoreWallet.ts","../../../src/index.ts"],"sourcesContent":["import { Net, rpc } from 'shared/runtime'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  swapAddress: string\n  taxmanAddress: string\n} & typeof SOLVARS\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    ...SOLVARS,\n    node: rpc,\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    ...SOLVARS,\n    node: rpc,\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    ...SOLVARS,\n    node: rpc,\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_NAME !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error(\n    'Please add REACT_APP_ID, REACT_APP_NAME, REACT_APP_URL in .env.local!',\n  )\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  defaultAppId: string\n  extra: SenReg\n  senreg: string\n}\n\nconst DEFAULT_APP_ID = process.env.REACT_APP_ID\nconst devApp = {\n  [DEFAULT_APP_ID]: {\n    url: process.env.REACT_APP_URL,\n    appId: DEFAULT_APP_ID,\n    name: process.env.REACT_APP_NAME,\n    author: {\n      name: process.env.REACT_APP_AUTHOR_NAME || '',\n      email: process.env.REACT_APP_AUTHOR_EMAIL || '',\n    },\n    tags: (process.env.REACT_APP_TAGS || '')\n      .split(',')\n      .map((tag) => tag.trim()),\n    description: process.env.REACT_APP_DESCRIPTION || '',\n    verified: false,\n  },\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: {},\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { net, env } from 'shared/runtime'\nimport sol from './sol.config'\nimport register from './register.config'\n\nconst configs = {\n  sol: sol[net],\n  register: register[env],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n  CSSProperties,\n  useCallback,\n} from 'react'\n\nimport { ConfigProvider } from 'antd'\n\nimport {\n  useRootSelector,\n  RootState,\n  useRootDispatch,\n  RootDispatch,\n} from 'os/store'\nimport {\n  UIState,\n  setBackground as _setBackground,\n  Background,\n} from 'os/store/ui.reducer'\nimport { ConfigProviderProps } from 'antd/lib/config-provider'\n\nconst Context = createContext<UIProvider>({} as UIProvider)\n\nexport type UIProvider = {\n  ui: UIState\n  setBackground: (\n    ...args: Parameters<typeof _setBackground>\n  ) => Promise<{ background: Background }>\n}\n\n/**\n * UI Context Provider\n */\nconst UIContextProvider = ({\n  children,\n  appId,\n  style = {},\n  antd = false,\n}: {\n  children: ReactNode\n  appId: string\n  style?: CSSProperties\n  antd?: boolean | ConfigProviderProps\n}) => {\n  const dispatch = useRootDispatch<RootDispatch>()\n  const { ui } = useRootSelector((state: RootState) => state)\n  const setBackground = useCallback(\n    async (...args: Parameters<typeof _setBackground>) =>\n      await dispatch(_setBackground(...args)).unwrap(),\n    [dispatch],\n  )\n  const provider = useMemo(() => ({ ui, setBackground }), [ui, setBackground])\n  const configProvider = antd\n    ? {\n        getPopupContainer: () => document.getElementById(appId) as HTMLElement,\n        ...(typeof antd === 'object' ? antd : {}),\n      }\n    : undefined\n\n  return (\n    <Context.Provider value={provider}>\n      <section\n        id={appId}\n        style={{ height: '100%', backgroundColor: 'transparent', ...style }}\n      >\n        {configProvider ? (\n          <ConfigProvider {...configProvider}>{children}</ConfigProvider>\n        ) : (\n          children\n        )}\n      </section>\n    </Context.Provider>\n  )\n}\nexport default UIContextProvider\n\n/**\n * UI Context Consumer\n */\nconst UIComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * UI HOC\n */\nexport const withUI = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <UIComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </UIComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * UI Hook\n */\nexport const useUI = () => {\n  return useContext<UIProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { PoolsState } from 'os/store/pools.reducer'\n\nconst Context = createContext<PoolProvider>({} as PoolProvider)\n\nexport type PoolProvider = {\n  pools: PoolsState\n}\n\n/**\n * Pool Context Provider\n */\nconst PoolContextProvider = ({ children }: { children: ReactNode }) => {\n  const { pools } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ pools }), [pools])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default PoolContextProvider\n\n/**\n * Pool Context Consumer\n */\nconst PoolContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Pool HOC\n */\nexport const withPool = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <PoolContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </PoolContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Pool Hook\n */\nexport const usePool = () => {\n  return useContext<PoolProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { WalletState } from 'os/store/wallet.reducer'\n\nconst Context = createContext<WalletProvider>({} as WalletProvider)\n\nexport type WalletProvider = {\n  wallet: WalletState\n}\n\n/**\n * Wallet Context Provider\n */\nconst WalletContextProvider = ({ children }: { children: ReactNode }) => {\n  const { wallet } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ wallet }), [wallet])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default WalletContextProvider\n\n/**\n * Wallet Context Consumer\n */\nconst WalletContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Wallet HOC\n */\nexport const withWallet = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <WalletContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </WalletContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Wallet Hook\n */\nexport const useWallet = () => {\n  return useContext<WalletProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { AccountsState } from 'os/store/accounts.reducer'\n\nconst Context = createContext<AccountProvider>({} as AccountProvider)\n\nexport type AccountProvider = {\n  accounts: AccountsState\n}\n\n/**\n * Account Context Provider\n */\nconst AccountContextProvider = ({ children }: { children: ReactNode }) => {\n  const { accounts } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ accounts }), [accounts])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default AccountContextProvider\n\n/**\n * Account Context Consumer\n */\nconst AccountContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Account HOC\n */\nexport const withAccount = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <AccountContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </AccountContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Account Hook\n */\nexport const useAccount = () => {\n  return useContext<AccountProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport { account } from '@senswap/sen-js'\n\nimport {\n  useRootDispatch,\n  useRootSelector,\n  RootState,\n  RootDispatch,\n} from 'os/store'\nimport { getMint as _getMint, MintsState } from 'os/store/mints.reducer'\nimport TokenProvider from 'shared/tokenProvider'\n\nconst tokenProvider = new TokenProvider()\nconst Context = createContext<MintProvider>({} as MintProvider)\n\nexport type MintProvider = {\n  mints: MintsState\n  getMint: (...args: Parameters<typeof _getMint>) => Promise<MintsState>\n  getDecimals: (mintAddress: string) => Promise<number>\n  tokenProvider: TokenProvider\n}\n\n/**\n * Mint Context Provider\n */\nconst MintContextProvider = ({ children }: { children: ReactNode }) => {\n  const dispatch = useRootDispatch<RootDispatch>()\n  const { mints, pools } = useRootSelector((state: RootState) => state)\n  const getMint = useCallback(\n    async (...args: Parameters<typeof _getMint>) =>\n      await dispatch(_getMint(...args)).unwrap(),\n    [dispatch],\n  )\n  const getDecimals = useCallback(\n    async (mintAddress: string) => {\n      if (!account.isAddress(mintAddress))\n        throw new Error('Invalid mint address')\n      // If the token is in token provider, return its decimals\n      const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n      if (tokenInfo?.decimals) return tokenInfo.decimals\n      // If the token is lp, return 9 as default\n      const index = Object.values(pools).findIndex(\n        ({ mint_lpt }) => mint_lpt === mintAddress,\n      )\n      if (index >= 0) return 9\n      // Fetch from the clustters\n      const mintData = await getMint({ address: mintAddress })\n      if (mintData[mintAddress]?.decimals) return mintData[mintAddress].decimals\n      throw new Error('Cannot find mint decimals')\n    },\n    [getMint, pools],\n  )\n  const provider = useMemo(\n    () => ({ mints, getMint, getDecimals, tokenProvider }),\n    [mints, getMint, getDecimals],\n  )\n  // Context provider\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default MintContextProvider\n\n/**\n * Mint Context Consumer\n */\nconst MintContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Mint HOC\n */\nexport const withMint = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <MintContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </MintContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Mint Hook\n */\nexport const useMint = () => {\n  return useContext<MintProvider>(Context)\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, AccountData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type AccountsState = Record<string, AccountData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'accounts'\nconst initialState: AccountsState = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(\n  `${NAME}/getAccounts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const { splt } = window.sentre\n    const ownerPublicKey = account.fromAddress(owner)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: AccountsState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = splt.parseAccountData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getAccount = createAsyncThunk<\n  AccountsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getAccount`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid account address')\n  const {\n    accounts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { splt } = window.sentre\n  const raw = await splt.getAccountData(address)\n  return { [address]: raw }\n})\n\nexport const upsetAccount = createAsyncThunk<\n  AccountsState,\n  { address: string; data: AccountData },\n  { state: any }\n>(`${NAME}/upsetAccount`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteAccount = createAsyncThunk(\n  `${NAME}/deleteAccount`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getAccounts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteAccount.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\n\n/**\n * Interface & Utility\n */\n\ntype FlagsState = {\n  visited: boolean\n  loading: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'flags'\nconst initialState: FlagsState = {\n  visited: true,\n  loading: true,\n}\n\n/**\n * Actions\n */\n\nexport const loadVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  void,\n  { state: any }\n>(`${NAME}/loadVisited`, async (_, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(walletAddress).createInstance('sentre')\n  const visited: boolean = (await db.getItem('visited')) || false\n  return { visited }\n})\n\nexport const updateVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  boolean,\n  { state: any }\n>(`${NAME}/updateVisited`, async (visited, { getState }) => {\n  const {\n    wallet: { address },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('visited', visited)\n  return { visited }\n})\n\nexport const updateLoading = createAsyncThunk(\n  `${NAME}/updateLoading`,\n  async (loading: boolean) => {\n    return { loading }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import {\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook,\n  useDispatch,\n  useSelector,\n} from 'react-redux'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { RootContext } from '@senhub/context'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport ui from './ui.reducer'\nimport flags from './flags.reducer'\nimport page from './page.reducer'\nimport wallet from './wallet.reducer'\nimport accounts from './accounts.reducer'\nimport mints from './mints.reducer'\nimport pools from './pools.reducer'\nimport search from './search.reducer'\nimport walkthrough from './walkthrough.reducer'\n\n/**\n * Root types\n */\nexport type RootState = ReturnType<typeof store.getState>\nexport type RootDispatch = typeof store.dispatch\n\n/**\n * Root hooks\n */\nexport const useRootStore = createStoreHook(RootContext)\nexport const useRootDispatch: typeof useDispatch =\n  createDispatchHook(RootContext)\nexport const useRootSelector: typeof useSelector =\n  createSelectorHook(RootContext)\n\n/**\n * Root store\n */\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('sentre'),\n  reducer: {\n    ui,\n    flags,\n    page,\n    wallet,\n    accounts,\n    mints,\n    pools,\n    search,\n    walkthrough,\n  },\n})\n\nexport default store\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, MintData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type MintsState = Record<string, MintData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mints'\nconst initialState: MintsState = {}\n\n/**\n * Actions\n */\n\nexport const getMint = createAsyncThunk<\n  MintsState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getMint`, async ({ address, force = false }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid mint address')\n  if (!force) {\n    const {\n      accounts: { [address]: data },\n    } = getState()\n    if (data) return { [address]: data }\n  }\n  const { splt } = window.sentre\n  const raw = await splt.getMintData(address)\n  return { [address]: raw }\n})\n\nexport const upsetMint = createAsyncThunk<\n  MintsState,\n  { address: string; data: MintData },\n  { state: any }\n>(`${NAME}/upsetMint`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteMint = createAsyncThunk(\n  `${NAME}/deleteMint`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteMint.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\nimport configs from 'os/configs'\n\nconst {\n  register: { senreg, extra },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PageState = {\n  register: SenReg\n  appIds: AppIds\n}\n\nconst troubleshoot = (register: SenReg, appIds?: AppIds): AppIds => {\n  if (!appIds || !Array.isArray(appIds)) return []\n  return appIds.filter((appId) => register[appId])\n}\nconst fetchRegister = async () => {\n  try {\n    const res = await fetch(senreg)\n    return await res.json()\n  } catch (er) {\n    return {}\n  }\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'page'\nconst initialState: PageState = {\n  register: {},\n  appIds: [],\n}\n\n/**\n * Actions\n */\n\n// Must fetch register at very first of the process\nexport const loadRegister = createAsyncThunk(\n  `${NAME}/loadRegister`,\n  async () => {\n    const register = await fetchRegister()\n    return { register: { ...register, ...extra } }\n  },\n)\n\n// For sandbox only\nexport const installManifest = createAsyncThunk<\n  Partial<PageState>,\n  ComponentManifest,\n  { state: any }\n>(`${NAME}/installManifest`, async (manifest, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds, register },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(manifest.appId))\n    throw new Error('Cannot run sandbox for an installed application.')\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(manifest.appId)\n  const newRegister: SenReg = { ...register }\n  newRegister[manifest.appId] = manifest\n  return { appIds: newAppIds, register: newRegister }\n})\n\n/**\n * App Actions\n */\nexport const loadPage = createAsyncThunk<\n  Partial<PageState>,\n  void,\n  { state: any }\n>(`${NAME}/loadPage`, async (_, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { register },\n  } = getState()\n\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  // Fetch user's apps\n  const db = new PDB(walletAddress).createInstance('sentre')\n  const appIds = troubleshoot(\n    register,\n    (await db.getItem('appIds')) || initialState.appIds,\n  )\n  return { appIds }\n})\n\nexport const updatePage = createAsyncThunk<\n  Partial<PageState>,\n  AppIds,\n  { state: any }\n>(`${NAME}/updatePage`, async (appIds, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { register },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  appIds = troubleshoot(register, appIds)\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('appIds', appIds)\n  return { appIds }\n})\n\nexport const installApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/installApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(appId)) return {}\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(appId)\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  return { appIds: newAppIds }\n})\n\nexport const uninstallApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/uninstallApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (!appIds.includes(appId)) return {}\n  const newAppIds = appIds.filter((_appId: string) => _appId !== appId)\n  const pdb = new PDB(walletAddress)\n  const db = pdb.createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  await pdb.dropInstance(appId)\n  return { appIds: newAppIds }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadRegister.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installManifest.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        loadPage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updatePage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        uninstallApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, PoolData } from '@senswap/sen-js'\nimport configs from 'os/configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PoolsState = Record<string, PoolData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'pools'\nconst initialState: PoolsState = {}\n\n/**\n * Actions\n */\n\nexport const getPools = createAsyncThunk(`${NAME}/getPools`, async () => {\n  const { swap } = window.sentre\n  // Get all pools\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await swap.connection.getProgramAccounts(swap.swapProgramId, {\n      filters: [\n        { dataSize: 257 },\n        { memcmp: { bytes: taxmanAddress, offset: 65 } },\n      ],\n    })\n  let bulk: PoolsState = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = swap.parsePoolData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\nexport const getPool = createAsyncThunk<\n  PoolsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getPool`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  const {\n    pools: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { swap } = window.sentre\n  const raw = await swap.getPoolData(address)\n  return { [address]: raw }\n})\n\nexport const upsetPool = createAsyncThunk<\n  PoolsState,\n  { address: string; data: PoolData },\n  { state: any }\n>(`${NAME}/upsetPool`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getPools.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\ntype SearchState = {\n  visible: boolean\n  value: string\n  loading: boolean\n  disabled: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'search'\nconst initialState: SearchState = {\n  visible: false,\n  value: '',\n  loading: false,\n  disabled: false,\n}\n\n/**\n * Actions\n */\n\nexport const setVisible = createAsyncThunk(\n  `${NAME}/setVisible`,\n  async (visible: boolean) => {\n    return { visible }\n  },\n)\n\nexport const setValue = createAsyncThunk(\n  `${NAME}/setValue`,\n  async (value: string) => {\n    return { value }\n  },\n)\n\nexport const setLoading = createAsyncThunk(\n  `${NAME}/setLoading`,\n  async (loading: boolean) => {\n    return { loading }\n  },\n)\n\nexport const setDisabled = createAsyncThunk(\n  `${NAME}/setDisabled`,\n  async (disabled: boolean) => {\n    return { disabled }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setValue.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setDisabled.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\nexport type Theme = 'light' | 'dark'\nexport type Background = Record<Theme, string | undefined>\n\nexport type UIState = {\n  theme: Theme\n  width: number\n  infix: Infix\n  touchable: boolean\n  visibleActionCenter: boolean\n  visibleInstaller: boolean\n  background: Background\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\nconst isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\nconst getTheme = (): Theme => {\n  if (window.matchMedia('(prefers-color-scheme: light)').matches) return 'light'\n  return 'dark'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: UIState = {\n  theme: getTheme(),\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n  visibleActionCenter: false,\n  visibleInstaller: false,\n  background: {\n    light: '',\n    dark: '',\n  },\n}\n\n/**\n * Actions\n */\n\nexport const setTheme = createAsyncThunk(\n  `${NAME}/setTheme`,\n  async (theme: Theme) => {\n    return { theme }\n  },\n)\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const setVisibleActionCenter = createAsyncThunk(\n  `${NAME}/setVisibleActionCenter`,\n  async (visible: boolean) => {\n    return { visibleActionCenter: visible }\n  },\n)\n\nexport const setVisibleInstaller = createAsyncThunk(\n  `${NAME}/setVisibleInstaller`,\n  async (visible: boolean) => {\n    return { visibleInstaller: visible }\n  },\n)\n\nexport const setBackground = createAsyncThunk(\n  `${NAME}/setBackground`,\n  async (background: Background) => {\n    return { background }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setTheme.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleActionCenter.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleInstaller.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setBackground.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\nexport enum WalkThroughType {\n  Default,\n  NewComer,\n}\n\ntype WalkThorughState = {\n  type: WalkThroughType\n  run: boolean\n  step: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'walkthrough'\nconst initialState: WalkThorughState = {\n  type: WalkThroughType.Default,\n  run: false,\n  step: 0,\n}\n\n/**\n * Actions\n */\n\nexport const setWalkthrough = createAsyncThunk<\n  Partial<WalkThorughState>,\n  Partial<WalkThorughState>,\n  { state: any }\n>(`${NAME}/setWalkthrough`, async (state) => {\n  return { ...state }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setWalkthrough.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Lamports, SPLT, Swap, WalletInterface } from '@senswap/sen-js'\n\nimport configs from 'os/configs'\nimport { GuestWallet } from 'os/view/wallet/lib'\n\n/**\n * Interface & Utility\n */\n\nexport type WalletState = {\n  visible: boolean\n  address: string\n  lamports: bigint\n}\n\nconst initializeWindow = async (wallet?: WalletInterface) => {\n  const {\n    sol: { node, spltAddress, splataAddress, swapAddress },\n  } = configs\n  window.sentre = {\n    wallet: wallet || new GuestWallet(),\n    lamports: new Lamports(node),\n    splt: new SPLT(spltAddress, splataAddress, node),\n    swap: new Swap(swapAddress, spltAddress, splataAddress, node),\n  }\n}\n\nconst destroyWindow = async () => {\n  if (window.sentre?.wallet) window.sentre.wallet.disconnect()\n  await initializeWindow()\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'wallet'\nconst initialState: WalletState = {\n  visible: false,\n  address: '',\n  lamports: BigInt(0),\n}\n\n/**\n * Actions\n */\n\nexport const openWallet = createAsyncThunk(`${NAME}/openWallet`, async () => {\n  return { visible: true }\n})\n\nexport const closeWallet = createAsyncThunk(`${NAME}/closeWallet`, async () => {\n  return { visible: false }\n})\n\nexport const connectWallet = createAsyncThunk(\n  `${NAME}/connectWallet`,\n  async (wallet: any) => {\n    if (!wallet) throw new Error('Invalid wallet instance')\n    await initializeWindow(wallet)\n    const address = await wallet.getAddress()\n    const lamports = await window.sentre.lamports.getLamports(address)\n    return { address, lamports: BigInt(lamports), visible: false }\n  },\n)\n\nexport const updateWallet = createAsyncThunk(\n  `${NAME}/updateWallet`,\n  async ({ lamports }: Partial<WalletState>) => {\n    return { lamports }\n  },\n)\n\nexport const disconnectWallet = createAsyncThunk(\n  `${NAME}/disconnectWallet`,\n  async () => {\n    await destroyWindow()\n    window.location.reload() // Reset all redux store\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        openWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        closeWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        connectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        disconnectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Transaction } from '@solana/web3.js'\nimport {\n  WalletInterface,\n  Provider,\n  Signature,\n  SignedMessage,\n} from '@senswap/sen-js'\n\nimport storage from 'shared/storage'\n\nclass BaseWallet implements WalletInterface {\n  readonly walletType: string\n\n  constructor(walletType: string) {\n    this.walletType = walletType\n    storage.set('WalletType', this.walletType)\n  }\n\n  getProvider = async (): Promise<Provider> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  getAddress = async (): Promise<string> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signTransaction = async (transaction: Transaction): Promise<Transaction> => {\n    const { signature, publicKey } = await this.rawSignTransaction(transaction)\n    transaction.addSignature(publicKey, signature)\n    return transaction\n  }\n\n  rawSignTransaction = async (transaction: Transaction): Promise<Signature> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signMessage = async (message: string): Promise<SignedMessage> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ): Promise<boolean> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  disconnect = async (): Promise<void> => {\n    storage.clear('WalletType')\n    const provider = await this.getProvider()\n    provider.disconnect()\n  }\n}\n\nexport default BaseWallet\n","import { Transaction } from '@solana/web3.js'\nimport { Provider } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\n\nexport const GUEST_ADDRESS = 'GuestAccount11111111111111111111111111111111'\n\ntype ExpanedProvider = Provider & { address: string }\n\nclass GuestWallet extends BaseWallet {\n  constructor(callback: () => void = () => {}) {\n    super('Guest')\n\n    this._callback = callback\n  }\n\n  private _callback = () => {}\n  private _error = () => {\n    throw new Error(\n      'You are in the Guest Mode. Please connect your personal wallet to proceed the action.',\n    )\n  }\n\n  getProvider = async (): Promise<ExpanedProvider> => {\n    const provider = {\n      address: GUEST_ADDRESS,\n      disconnect: () => {},\n    }\n    return provider\n  }\n\n  getAddress = async () => {\n    const { address } = await this.getProvider()\n    return address\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    await this._callback()\n    return this._error()\n  }\n\n  signMessage = async (message: string) => {\n    await this._callback()\n    return this._error()\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    await this._callback()\n    return this._error()\n  }\n}\n\nexport default GuestWallet\n","import { Transaction, Keypair } from '@solana/web3.js'\nimport { sign, hash } from 'tweetnacl'\nimport { account, Provider, Signature } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\nimport session from 'shared/session'\nimport storage from 'shared/storage'\n\ntype ExpanedProvider = Provider & { keypair: Keypair }\n\nclass SecretKeyWallet extends BaseWallet {\n  constructor(secretKey: string, password?: string) {\n    super('SecretKey')\n\n    SecretKeyWallet.setSecretKey(secretKey, password)\n  }\n\n  static xor = (\n    a: Buffer | Uint8Array,\n    b: Buffer | Uint8Array,\n  ): Buffer | Uint8Array => {\n    if (a.length !== b.length)\n      throw new Error('Cannot XOR two different-length buffers')\n    const r = Buffer.alloc(a.length)\n    for (let i = 0; i < r.length; i++) r[i] = a[i] ^ b[i]\n    return r\n  }\n\n  static getPassword = (): string => {\n    let pwd = session.get('Password')\n    if (!pwd) pwd = window.prompt('Input the password:')\n    if (!pwd) throw new Error('User rejects to sign the transaction')\n    session.set('Password', pwd)\n    return pwd\n  }\n\n  static setSecretKey = (secretKeyString: string, pwd?: string): void => {\n    const { secretKey } = account.fromSecretKey(secretKeyString) || {}\n    if (!secretKey) throw new Error('Invalid secret key')\n    pwd = pwd || SecretKeyWallet.getPassword()\n    const seed = hash(Buffer.from(pwd))\n    const confusedSecretKey = SecretKeyWallet.xor(seed, secretKey)\n    storage.set('SecretKey', confusedSecretKey.toString('hex'))\n  }\n\n  static getSecretKey = (pwd?: string): string => {\n    pwd = pwd || SecretKeyWallet.getPassword()\n    const seed = hash(Buffer.from(pwd))\n    const confusedSecretKey = storage.get('SecretKey')\n    if (!confusedSecretKey) throw new Error('Invalid secret key')\n    const secretKey = SecretKeyWallet.xor(\n      seed,\n      Buffer.from(confusedSecretKey, 'hex'),\n    )\n    return secretKey.toString('hex')\n  }\n\n  getProvider = async (): Promise<ExpanedProvider> => {\n    const secretKey = SecretKeyWallet.getSecretKey()\n    const keypair = account.fromSecretKey(secretKey)\n    if (!keypair) throw new Error('Cannot get the keystore-based provider')\n    const provider = {\n      keypair,\n      disconnect: () => session.clear('SecretKey'),\n    }\n    return provider\n  }\n\n  getAddress = async () => {\n    const { keypair } = await this.getProvider()\n    return keypair.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const confirmed = window.confirm('Please confirm to sign the transaction!')\n    if (!confirmed) throw new Error('User rejects to sign the transaction')\n    const { keypair } = await this.getProvider()\n    const signData = transaction.serializeMessage()\n    const publicKey = keypair.publicKey\n    const signature = sign.detached(signData, keypair.secretKey)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const confirmed = window.confirm(\n      `Please confirm to sign the message! Message: ${message}`,\n    )\n    if (!confirmed) throw new Error('User rejects to sign the message')\n    const { keypair } = await this.getProvider()\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    const data = account.signMessage(message, secretKey)\n    return { ...data }\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default SecretKeyWallet\n","import { account, Keystore } from '@senswap/sen-js'\n\nimport SecretKeyWallet from './secretkeyWallet'\n\nclass KeystoreWallet extends SecretKeyWallet {\n  constructor(keystore: Keystore, password: string) {\n    super(KeystoreWallet.extractSecretKey(keystore, password), password)\n  }\n\n  static extractSecretKey = (keystore: Keystore, password: string): string => {\n    const keypair = account.fromKeystore(keystore, password)\n    if (!keypair) throw new Error('Invalid ketstore or password')\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    return secretKey\n  }\n}\n\nexport default KeystoreWallet\n"],"names":["SOLVARS","spltAddress","splataAddress","devnet","node","rpc","swapAddress","taxmanAddress","testnet","mainnet","DEFAULT_APP_ID","process","devApp","url","appId","name","author","email","tags","split","map","tag","trim","description","verified","development","defaultAppId","extra","senreg","staging","production","sol","net","register","env","Context","createContext","children","style","antd","dispatch","useRootDispatch","ui","useRootSelector","state","setBackground","useCallback","async","_setBackground","unwrap","provider","useMemo","configProvider","getPopupContainer","document","getElementById","undefined","Provider","value","id","height","backgroundColor","ConfigProvider","UIComsumer","Consumer","Children","child","cloneElement","withUI","WrappedComponent","HOC","Component","render","forwardedRef","rest","this","props","ref","forwardRef","useUI","useContext","pools","PoolContextComsumer","withPool","usePool","wallet","WalletContextComsumer","withWallet","useWallet","accounts","AccountContextComsumer","withAccount","useAccount","tokenProvider","TokenProvider","mints","getMint","_getMint","getDecimals","account","mintAddress","Error","tokenInfo","findByAddress","decimals","Object","values","findIndex","mint_lpt","mintData","address","MintContextComsumer","withMint","useMint","NAME","getAccounts","createAsyncThunk","owner","splt","window","sentre","ownerPublicKey","connection","getTokenAccountsByOwner","programId","spltProgramId","bulk","forEach","pubkey","data","buf","toBase58","parseAccountData","getAccount","getState","getAccountData","upsetAccount","deleteAccount","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","assign","loadVisited","_","walletAddress","db","PDB","createInstance","visited","getItem","updateVisited","setItem","updateLoading","loading","createStoreHook","RootContext","createDispatchHook","createSelectorHook","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","flags","page","search","walkthrough","force","getMintData","upsetMint","deleteMint","configs","troubleshoot","appIds","Array","isArray","filter","loadRegister","res","fetch","json","er","fetchRegister","installManifest","manifest","includes","newAppIds","push","newRegister","loadPage","updatePage","installApp","uninstallApp","_appId","pdb","dropInstance","getPools","swap","getProgramAccounts","swapProgramId","filters","dataSize","memcmp","bytes","offset","parsePoolData","getPool","getPoolData","upsetPool","setVisible","visible","setValue","setLoading","setDisabled","disabled","getInfix","width","innerWidth","theme","matchMedia","matches","infix","touchable","navigator","maxTouchPoints","visibleActionCenter","visibleInstaller","background","light","dark","setTheme","resize","setVisibleActionCenter","setVisibleInstaller","WalkThroughType","type","Default","run","step","setWalkthrough","initializeWindow","GuestWallet","lamports","Lamports","SPLT","Swap","BigInt","openWallet","closeWallet","connectWallet","getAddress","getLamports","updateWallet","disconnectWallet","disconnect","destroyWindow","location","reload","constructor","walletType","getProvider","signTransaction","signature","publicKey","rawSignTransaction","transaction","addSignature","signMessage","verifySignature","message","storage","BaseWallet","callback","super","_callback","_error","SecretKeyWallet","secretKey","password","getSecretKey","keypair","session","confirm","signData","serializeMessage","sign","Buffer","from","toString","setSecretKey","xor","a","b","length","r","alloc","i","getPassword","pwd","prompt","secretKeyString","seed","hash","confusedSecretKey","KeystoreWallet","keystore","extractSecretKey","Wallet","EventEmitter","_network","Map","e","_injectedProvider","source","origin","_providerUrl","_a","_popup","method","newPublicKey","PublicKey","params","_publicKey","equals","handleDisconnect","_autoApprove","autoApprove","emit","result","error","promises","_responsePromises","get","resolve","reject","isObject","postMessage","isString","URL","URLSearchParams","network","handleConnect","_handlerAdded","addEventListener","handleMessage","_beforeUnload","Promise","sendRequest","open","once","removeEventListener","delete","connected","requestId","_nextRequestId","set","jsonrpc","_b","_c","_d","focus","connect","close","display","Uint8Array","response","bs58","signAllTransactions","transactions","messages","tx","signatures","s","idx","diffieHellman"],"sourceRoot":""}