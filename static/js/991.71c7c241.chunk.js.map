{"version":3,"file":"static/js/991.71c7c241.chunk.js","mappings":"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","sources":["os/components/price/parseColor.ts","os/components/price/priceChange.tsx","os/configs/register.config.ts","os/configs/sol.config.ts","os/providers/tokenProvider/supplementary.ts","os/providers/tokenProvider/index.ts","os/store/flags.reducer.ts","shared/dataloader/cache.ts","shared/dataloader/constant.ts","shared/dataloader/request.ts","shared/devTools.ts","shared/ionicon/assets/icon-telegram.svg","shared/ionicon/customs.tsx","shared/pdb/index.ts","shared/pdb/ipfs.ts","shared/storage.ts","shared/util.ts"],"sourcesContent":["export const parseColor = (priceChange: number | undefined = 0) => {\n  if (!priceChange) return '#FFC580'\n  if (priceChange < 0) return '#fa565c'\n  if (priceChange > 0) return '#16FB48'\n  return '#FFC580'\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { numeric } from 'shared/util'\n\nimport { fetchCGK } from 'shared/helper'\nimport { parseColor } from './parseColor'\n\nconst PriceChange = ({\n  ticket,\n  colorized = false,\n}: {\n  ticket: string\n  colorized?: boolean\n}) => {\n  const [cgkData, setCGKData] = useState<CgkData>()\n\n  const getCGKData = useCallback(async () => {\n    const cgkData = await fetchCGK(ticket)\n    return setCGKData(cgkData)\n  }, [ticket])\n\n  useEffect(() => {\n    getCGKData()\n  }, [getCGKData])\n\n  const color = parseColor(cgkData?.priceChange)\n  return (\n    <span style={{ color: colorized ? color : 'inherit' }}>\n      {numeric(Math.abs(cgkData?.priceChange)).format('0.[0]')}%\n    </span>\n  )\n}\n\nexport default PriceChange\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_NAME !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string' ||\n  typeof process.env.REACT_APP_SENHUB !== 'string'\n)\n  throw new Error(\n    'Please add REACT_APP_ID, REACT_APP_NAME, REACT_APP_URL in .env.local!',\n  )\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  extra: SenReg\n  senreg: string\n}\n\nconst devApp = {\n  [process.env.REACT_APP_ID]: {\n    url: process.env.REACT_APP_URL,\n    appId: process.env.REACT_APP_ID,\n    name: process.env.REACT_APP_NAME,\n    author: {\n      name: process.env.REACT_APP_AUTHOR_NAME || '',\n      email: process.env.REACT_APP_AUTHOR_EMAIL || '',\n    },\n    supportedViews: (process.env.REACT_APP_SUPPORTED_VIEWS || '')\n      .split(',')\n      .map((view) => view.trim())\n      .filter((view) => ['page', 'widget'].includes(view)) as Array<\n      'widget' | 'page'\n    >,\n    tags: (process.env.REACT_APP_TAGS || '')\n      .split(',')\n      .map((tag) => tag.trim()),\n    description: process.env.REACT_APP_DESCRIPTION || '',\n    verified: false,\n  },\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    extra: {},\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from 'shared/runtime'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  chainId: 101 | 102 | 103\n  senAddress: string\n  senPoolAddress: string\n  swapAddress: string\n  taxmanAddress: string\n} & typeof SOLVARS\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    ...SOLVARS,\n    node: 'https://api.devnet.solana.com',\n    chainId: 103,\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    senPoolAddress: '3EUPL7YQLbU6DNU5LZeQeHPXTf1MigJ2yASXA9rH5Ku4',\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    ...SOLVARS,\n    node: 'https://api.testnet.solana.com',\n    chainId: 102,\n    senAddress: '',\n    senPoolAddress: '',\n    swapAddress: '',\n    taxmanAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    ...SOLVARS,\n    node: 'https://api.mainnet-beta.solana.com',\n    chainId: 101,\n    senAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    senPoolAddress: '',\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","const supplementary = [\n  {\n    symbol: 'wBTC',\n    name: 'Wrapped Bitcoin',\n    address: '8jk4eJymMfNZV9mkRNxJEt2VJ3pRvdJvD5FE94GXGBPM',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'bitcoin',\n    },\n    logoURI: 'https://assets.coingecko.com/coins/images/1/large/bitcoin.png',\n  },\n  {\n    symbol: 'wETH',\n    name: 'Ethereum',\n    address: '27hdcZv7RtuMp75vupThR3T4KLsL61t476eosMdoec4c',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'ethereum',\n    },\n    logoURI: 'https://assets.coingecko.com/coins/images/279/large/ethereum.png',\n  },\n  {\n    symbol: 'SEN',\n    name: 'Sen',\n    address: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'sen',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/DescartesNetwork/sen-static/master/logo.png',\n  },\n  {\n    symbol: 'UNI',\n    name: 'Uniswap',\n    address: 'FVZFSXu3yn17YdcxLD72TFDUqkdE5xZvcW18EUpRQEbe',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'uniswap',\n    },\n    logoURI:\n      'https://assets.coingecko.com/coins/images/12504/large/uniswap-uni.png',\n  },\n  {\n    symbol: 'CAKE',\n    name: 'PancakeSwap',\n    address: '2z6Ci38Cx6PyL3tFrT95vbEeB3izqpoLdxxBkJk2euyj',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'pancakeswap-token',\n    },\n    logoURI:\n      'https://assets.coingecko.com/coins/images/12632/large/IMG_0440.PNG',\n  },\n]\n\nexport default supplementary\n","import { Document } from 'flexsearch'\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry'\n\nimport { net } from 'shared/runtime'\nimport configs from 'os/configs'\nimport supplementary from './supplementary'\n\nconst {\n  sol: { chainId },\n} = configs\nconst DELIMITER = /[\\W_]+/g\nconst PRESET = {\n  tokenize: 'full',\n  context: true,\n  minlength: 3,\n}\nconst DOCUMENT = {\n  document: {\n    id: 'address',\n    index: [\n      { field: 'symbol', ...PRESET },\n      { field: 'name', ...PRESET },\n    ],\n  },\n}\n\nclass TokenProvider {\n  private tokenList: TokenInfo[]\n  private engine: typeof Document | undefined\n  readonly chainId: typeof chainId\n  readonly cluster: typeof net\n\n  constructor() {\n    this.tokenList = []\n    this.engine = undefined\n    this.chainId = chainId\n    this.cluster = net\n    // Init\n    this._init()\n  }\n\n  private _init = async (): Promise<TokenInfo[]> => {\n    if (this.tokenList.length) return this.tokenList\n    const tokenList = await (await new TokenListProvider().resolve())\n      .filterByChainId(this.chainId)\n      .getList()\n    if (this.cluster === 'devnet')\n      this.tokenList = tokenList.concat(supplementary)\n    return this.tokenList\n  }\n\n  private _engine = async () => {\n    if (this.engine) return this.engine\n    const tl = await this._init()\n    this.engine = new Document(DOCUMENT)\n    tl.forEach(({ address, ...doc }) => this.engine.add(address, doc))\n    return this.engine\n  }\n\n  all = async (): Promise<TokenInfo[]> => {\n    return await this._init()\n  }\n\n  findByAddress = async (addr: string): Promise<TokenInfo | undefined> => {\n    const tl = await this._init()\n    return tl.find(({ address }) => address === addr)\n  }\n\n  find = async (keyword: string, limit?: 10): Promise<TokenInfo[]> => {\n    const tl = await this._init()\n    const engine = await this._engine()\n    let tokens: TokenInfo[] = []\n    keyword.split(DELIMITER).forEach((key) => {\n      const raw: Array<{ result: string[] }> = engine.search(key, limit)\n      return raw.forEach(({ result }) => {\n        return result.forEach((id: string) => {\n          if (tokens.findIndex(({ address }) => address === id) < 0) {\n            const token = tl.find(({ address }) => address === id)\n            if (token) tokens.push(token)\n          }\n        })\n      })\n    })\n    return tokens\n  }\n}\n\nexport default TokenProvider\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\ntype State = {\n  visited: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'flags'\nconst initialState: State = {\n  visited: true,\n}\n\n/**\n * Actions\n */\n\nexport const setVisited = createAsyncThunk<\n  Partial<State>,\n  boolean,\n  { state: any }\n>(`${NAME}/setVisited`, async (visited, { getState }) => {\n  const {\n    wallet: { address },\n    flags: prevFlags,\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  return { ...prevFlags, visited }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setVisited.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint'\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","import localForage from 'localforage'\nimport { account } from '@senswap/sen-js'\nimport IPFS from './ipfs'\n\n/**\n * Persistent Database\n */\nclass PDB {\n  readonly dbName: string\n  private driver: any\n  private ipfs: IPFS\n\n  constructor(walletAddress: string) {\n    if (!account.isAddress(walletAddress)) throw new Error('Invalid address')\n    this.dbName = walletAddress\n    this.driver = [localForage.WEBSQL, localForage.LOCALSTORAGE]\n    this.ipfs = new IPFS()\n  }\n\n  /**\n   * Local\n   */\n\n  createInstance = (appId: string): LocalForage => {\n    return localForage.createInstance({\n      driver: this.driver,\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  dropInstance = async (appId: string): Promise<void> => {\n    const instance = this.createInstance(appId)\n    await instance.clear()\n    return await localForage.dropInstance({\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  all = async (): Promise<any> => {\n    let data: any = {}\n    const appIds = (\n      ((await this.createInstance('sentre').getItem('appIds')) as string[]) ||\n      []\n    )\n      .flat()\n      .concat(['sentre'])\n    for (const appId of appIds) {\n      data[appId] = {}\n      const instance = this.createInstance(appId)\n      await instance.iterate((value: string, key: string) => {\n        data[appId][key] = value\n      })\n    }\n    return data\n  }\n\n  /**\n   * Cloud\n   */\n\n  fetch = async (cid: string) => {\n    return await this.ipfs.get(cid)\n  }\n\n  backup = async () => {\n    const data = await this.all()\n    return await this.ipfs.set(data)\n  }\n\n  restore = async (cid: string) => {\n    // Download data\n    const data = await this.fetch(cid)\n    // Apply to storage\n    for (const appId in data) {\n      const instance = await this.createInstance(appId)\n      for (const key in data[appId]) {\n        const value = data[appId][key]\n        await instance.setItem(key, value)\n      }\n    }\n    return data\n  }\n}\n\nexport default PDB\n\n/**\n * High abtraction pdb for app\n */\nexport const createPDB = (walletArress: string, appId: string) => {\n  return account.isAddress(walletArress)\n    ? new PDB(walletArress).createInstance(appId)\n    : undefined\n}\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.ipfs) window.ipfs = await create()\n      return window.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string | undefined | null): boolean => {\n    try {\n      if (!cid) return false\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    const ipfs = await this._ipfs()\n    const stream = await ipfs.cat(cid)\n    let raw = ''\n    for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n    const data = JSON.parse(raw)\n    return data\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { path: cid } = await ipfs.add(raw)\n    return cid as string\n  }\n}\n\nexport default IPFS\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  if (!value) return null\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import { account } from '@senswap/sen-js'\nimport numbro from 'numbro'\nimport { net } from 'shared/runtime'\n\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n"],"names":["parseColor","priceChange","ticket","colorized","useState","cgkData","setCGKData","getCGKData","useCallback","fetchCGK","useEffect","color","style","numeric","Math","abs","format","devApp","process","url","appId","name","author","email","supportedViews","split","map","view","trim","filter","includes","tags","tag","description","verified","conf","development","extra","senreg","staging","production","SOLVARS","spltAddress","splataAddress","devnet","node","chainId","senAddress","senPoolAddress","swapAddress","taxmanAddress","testnet","mainnet","symbol","address","decimals","extensions","coingeckoId","logoURI","configs","DELIMITER","PRESET","tokenize","context","minlength","DOCUMENT","document","id","index","field","tokenList","engine","cluster","_init","length","TokenListProvider","resolve","filterByChainId","getList","concat","supplementary","_engine","tl","Document","forEach","doc","add","all","findByAddress","addr","find","keyword","limit","tokens","key","search","result","findIndex","token","push","this","undefined","net","NAME","setVisited","createAsyncThunk","visited","getState","wallet","prevFlags","flags","account","Error","slice","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","Object","assign","SingleFlightCache","value","DEFAULT_CACHE_CONFIG","mapCache","set","setTimeout","delete","ttl","get","Map","DEFAULT_SINGLE_FLIGHT_CONFIG","calls","time","cache","RequestQueue","resolveQueue","rejectQueue","reject","data","shift","error","devTools","appName","BigInt","prototype","toJSON","toString","bigintSerializationMiddleware","serializableCheck","isSerializable","val","Array","isArray","obj","proto","getPrototypeOf","isPlainObject","CUSTOM_ICONS","PDB","walletAddress","dbName","driver","ipfs","createInstance","localForage","storeName","dropInstance","instance","clear","getItem","appIds","flat","iterate","fetch","cid","backup","restore","setItem","IPFS","_ipfs","window","create","asyncWait","isCID","cat","stream","raw","chunk","Buffer","from","JSON","parse","stringify","path","isIPFS","er","KEY","localStorage","convert","e","storage","ms","Promise","shortenAddress","num","delimiter","substring","explorer","addressOrTxId","numbro"],"sourceRoot":""}