{"version":3,"file":"static/js/448.e9923264.chunk.js","mappings":"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","sources":["../node_modules/@certusone/wormhole-sdk/lib/esm/bridge/getEmitterAddress.js","../node_modules/@certusone/wormhole-sdk/lib/esm/bridge/parseSequenceFromLog.js","../node_modules/@certusone/wormhole-sdk/lib/esm/ethers-contracts/factories/Bridge__factory.js","../node_modules/@certusone/wormhole-sdk/lib/esm/ethers-contracts/factories/Implementation__factory.js","../node_modules/@certusone/wormhole-sdk/lib/esm/ethers-contracts/factories/TokenImplementation__factory.js","../node_modules/@certusone/wormhole-sdk/lib/esm/proto/publicrpc/v1/publicrpc.js","../node_modules/@certusone/wormhole-sdk/lib/esm/rpc/getSignedVAA.js","../node_modules/@certusone/wormhole-sdk/lib/esm/solana/rust.js","../node_modules/@certusone/wormhole-sdk/lib/esm/solana/postVaa.js","../node_modules/@certusone/wormhole-sdk/lib/esm/solana/wasm.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/attest.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/createWrapped.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/getForeignAsset.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/getIsTransferCompleted.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/getIsWrappedAsset.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/getOriginalAsset.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/redeem.js","../node_modules/@certusone/wormhole-sdk/lib/esm/token_bridge/transfer.js","../node_modules/@certusone/wormhole-sdk/lib/esm/utils/array.js","../node_modules/@certusone/wormhole-sdk/lib/esm/utils/createNonce.js","../../src.ts/index.ts","../../src.ts/browser-base64.ts","../../src.ts/bignumber.ts","../../src.ts/fixednumber.ts","../../src.ts/hashes.ts","../../src.ts/_version.ts","../../src.ts/message.ts","../../src.ts/namehash.ts","../../src.ts/typed-data.ts","../../src.ts/crowdsale.ts","../../src.ts/inspect.ts","../../src.ts/keystore.ts","../../src.ts/utils.ts","../node_modules/@ethersproject/json-wallets/node_modules/aes-js/index.js","../../src.ts/browser-pbkdf2.ts","../../src.ts/browser-random.ts","../../src.ts/shuffle.ts","../../src.ts/browser-sha2.ts","../../src.ts/types.ts","../../../../node_modules/minimalistic-assert/index.js","../../../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../../../node_modules/elliptic/lib/elliptic/utils.js","../../../../node_modules/elliptic/lib/elliptic/curve/base.js","../../../../node_modules/inherits/inherits_browser.js","../../../../node_modules/elliptic/lib/elliptic/curve/short.js","../../../../node_modules/elliptic/lib/elliptic/curve/index.js","../../../../node_modules/elliptic/lib/elliptic/curves.js","../../../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../../../node_modules/elliptic/lib/elliptic/ec/key.js","../../../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../../../node_modules/elliptic/lib/elliptic/ec/index.js","../elliptic.js","../../../../node_modules/elliptic/lib/elliptic.js","../node_modules/@ethersproject/signing-key/node_modules/bn.js/lib/bn.js","../../src.ts/bytes32.ts","../../src.ts/idna.ts","../../src.ts/utf8.ts","../../src.ts/browser-geturl.ts","../../src.ts/wordlist.ts","../../src.ts/lang-en.ts","../../src.ts/browser-wordlists.ts","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/account.ts","../../src/bpf-loader-deprecated.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/connection.ts","../../src/util/url.ts","../../src/util/promise-timeout.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/util/send-and-confirm-raw-transaction.ts","../../src/util/cluster.ts","../../src/index.ts","../node_modules/axios/index.js","../../src.ts/abi-coder.ts","../../../src.ts/coders/abstract-coder.ts","../../src.ts/fragments.ts","../../src.ts/interface.ts","../node_modules/scrypt-js/scrypt.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey } from \"@solana/web3.js\";\nimport { bech32 } from \"bech32\";\nimport { arrayify, zeroPad } from \"ethers/lib/utils\";\nimport { importTokenWasm } from \"../solana/wasm\";\nexport function getEmitterAddressEth(contractAddress) {\n    return Buffer.from(zeroPad(arrayify(contractAddress), 32)).toString(\"hex\");\n}\nexport function getEmitterAddressSolana(programAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var emitter_address;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    emitter_address = (_a.sent()).emitter_address;\n                    return [2 /*return*/, Buffer.from(zeroPad(new PublicKey(emitter_address(programAddress)).toBytes(), 32)).toString(\"hex\")];\n            }\n        });\n    });\n}\nexport function getEmitterAddressTerra(programAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, Buffer.from(zeroPad(bech32.fromWords(bech32.decode(programAddress).words), 32)).toString(\"hex\")];\n        });\n    });\n}\n","import { Implementation__factory } from \"../ethers-contracts\";\nexport function parseSequenceFromLogEth(receipt, bridgeAddress) {\n    // TODO: dangerous!(?)\n    var bridgeLog = receipt.logs.filter(function (l) {\n        return l.address === bridgeAddress;\n    })[0];\n    var sequence = Implementation__factory.createInterface().parseLog(bridgeLog).args.sequence;\n    return sequence.toString();\n}\nexport function parseSequenceFromLogTerra(info) {\n    // Scan for the Sequence attribute in all the outputs of the transaction.\n    // TODO: Make this not horrible.\n    var sequence = \"\";\n    var jsonLog = JSON.parse(info.raw_log);\n    jsonLog.map(function (row) {\n        row.events.map(function (event) {\n            event.attributes.map(function (attribute) {\n                if (attribute.key === \"message.sequence\") {\n                    sequence = attribute.value;\n                }\n            });\n        });\n    });\n    console.log(\"Terra Sequence: \", sequence);\n    return sequence.toString();\n}\nvar SOLANA_SEQ_LOG = \"Program log: Sequence: \";\nexport function parseSequenceFromLogSolana(info) {\n    var _a, _b;\n    // TODO: better parsing, safer\n    var sequence = (_b = (_a = info.meta) === null || _a === void 0 ? void 0 : _a.logMessages) === null || _b === void 0 ? void 0 : _b.filter(function (msg) { return msg.startsWith(SOLANA_SEQ_LOG); })[0].replace(SOLANA_SEQ_LOG, \"\");\n    if (!sequence) {\n        throw new Error(\"sequence not found\");\n    }\n    return sequence.toString();\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { utils, Contract, ContractFactory } from \"ethers\";\nvar _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"previousAdmin\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newAdmin\",\n                type: \"address\",\n            },\n        ],\n        name: \"AdminChanged\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"beacon\",\n                type: \"address\",\n            },\n        ],\n        name: \"BeaconUpgraded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldContract\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newContract\",\n                type: \"address\",\n            },\n        ],\n        name: \"ContractUpgraded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"implementation\",\n                type: \"address\",\n            },\n        ],\n        name: \"Upgraded\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"WETH\",\n        outputs: [\n            {\n                internalType: \"contract IWETH\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint16\",\n                name: \"chainId_\",\n                type: \"uint16\",\n            },\n        ],\n        name: \"bridgeContracts\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"chainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"governanceActionIsConsumed\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"governanceChainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"governanceContract\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"impl\",\n                type: \"address\",\n            },\n        ],\n        name: \"isInitialized\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"isTransferCompleted\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n        ],\n        name: \"isWrappedAsset\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n        ],\n        name: \"outstandingBridged\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseRegisterChain\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"emitterChainID\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"emitterAddress\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.RegisterChain\",\n                name: \"chain\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseUpgrade\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"newContract\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.UpgradeContract\",\n                name: \"chain\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVM\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"registerChain\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"tokenImplementation\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVM\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"upgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"wormhole\",\n        outputs: [\n            {\n                internalType: \"contract IWormhole\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint16\",\n                name: \"tokenChainId\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"tokenAddress\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"wrappedAsset\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"receive\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"tokenAddress\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"attestToken\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint16\",\n                name: \"recipientChain\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"recipient\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"arbiterFee\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"wrapAndTransferETH\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"recipientChain\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"recipient\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"arbiterFee\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"transferTokens\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"updateWrapped\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"createWrapped\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"token\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"completeTransfer\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"completeTransferAndUnwrapETH\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"payloadID\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"tokenAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"tokenChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"decimals\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"symbol\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"name\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.AssetMeta\",\n                name: \"meta\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"encodeAssetMeta\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"payloadID\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"amount\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"tokenAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"tokenChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"to\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"toChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"fee\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.Transfer\",\n                name: \"transfer\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"encodeTransfer\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseAssetMeta\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"payloadID\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"tokenAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"tokenChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"decimals\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"symbol\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"name\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.AssetMeta\",\n                name: \"meta\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encoded\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseTransfer\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"payloadID\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"amount\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"tokenAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"tokenChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"to\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"toChain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"fee\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct BridgeStructs.Transfer\",\n                name: \"transfer\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n];\nvar _bytecode = \"\";\nvar Bridge__factory = /** @class */ (function (_super) {\n    __extends(Bridge__factory, _super);\n    function Bridge__factory(signer) {\n        return _super.call(this, _abi, _bytecode, signer) || this;\n    }\n    Bridge__factory.prototype.deploy = function (overrides) {\n        return _super.prototype.deploy.call(this, overrides || {});\n    };\n    Bridge__factory.prototype.getDeployTransaction = function (overrides) {\n        return _super.prototype.getDeployTransaction.call(this, overrides || {});\n    };\n    Bridge__factory.prototype.attach = function (address) {\n        return _super.prototype.attach.call(this, address);\n    };\n    Bridge__factory.prototype.connect = function (signer) {\n        return _super.prototype.connect.call(this, signer);\n    };\n    Bridge__factory.createInterface = function () {\n        return new utils.Interface(_abi);\n    };\n    Bridge__factory.connect = function (address, signerOrProvider) {\n        return new Contract(address, _abi, signerOrProvider);\n    };\n    Bridge__factory.bytecode = _bytecode;\n    Bridge__factory.abi = _abi;\n    return Bridge__factory;\n}(ContractFactory));\nexport { Bridge__factory };\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { utils, Contract, ContractFactory } from \"ethers\";\nvar _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"previousAdmin\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newAdmin\",\n                type: \"address\",\n            },\n        ],\n        name: \"AdminChanged\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"beacon\",\n                type: \"address\",\n            },\n        ],\n        name: \"BeaconUpgraded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldContract\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newContract\",\n                type: \"address\",\n            },\n        ],\n        name: \"ContractUpgraded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint32\",\n                name: \"index\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"GuardianSetAdded\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"sender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"payload\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint8\",\n                name: \"consistencyLevel\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"LogMessagePublished\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"implementation\",\n                type: \"address\",\n            },\n        ],\n        name: \"Upgraded\",\n        type: \"event\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"fallback\",\n    },\n    {\n        inputs: [],\n        name: \"chainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getCurrentGuardianSetIndex\",\n        outputs: [\n            {\n                internalType: \"uint32\",\n                name: \"\",\n                type: \"uint32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint32\",\n                name: \"index\",\n                type: \"uint32\",\n            },\n        ],\n        name: \"getGuardianSet\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address[]\",\n                        name: \"keys\",\n                        type: \"address[]\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"expirationTime\",\n                        type: \"uint32\",\n                    },\n                ],\n                internalType: \"struct Structs.GuardianSet\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getGuardianSetExpiry\",\n        outputs: [\n            {\n                internalType: \"uint32\",\n                name: \"\",\n                type: \"uint32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"governanceActionIsConsumed\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"governanceChainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"governanceContract\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"impl\",\n                type: \"address\",\n            },\n        ],\n        name: \"isInitialized\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"messageFee\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"emitter\",\n                type: \"address\",\n            },\n        ],\n        name: \"nextSequence\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVM\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseAndVerifyVM\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"version\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"timestamp\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"nonce\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"emitterChainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"emitterAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"sequence\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"consistencyLevel\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"payload\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"guardianSetIndex\",\n                        type: \"uint32\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"r\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"s\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"v\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"guardianIndex\",\n                                type: \"uint8\",\n                            },\n                        ],\n                        internalType: \"struct Structs.Signature[]\",\n                        name: \"signatures\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"hash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct Structs.VM\",\n                name: \"vm\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"valid\",\n                type: \"bool\",\n            },\n            {\n                internalType: \"string\",\n                name: \"reason\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedUpgrade\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseContractUpgrade\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"newContract\",\n                        type: \"address\",\n                    },\n                ],\n                internalType: \"struct GovernanceStructs.ContractUpgrade\",\n                name: \"cu\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedUpgrade\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseGuardianSetUpgrade\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"address[]\",\n                                name: \"keys\",\n                                type: \"address[]\",\n                            },\n                            {\n                                internalType: \"uint32\",\n                                name: \"expirationTime\",\n                                type: \"uint32\",\n                            },\n                        ],\n                        internalType: \"struct Structs.GuardianSet\",\n                        name: \"newGuardianSet\",\n                        type: \"tuple\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"newGuardianSetIndex\",\n                        type: \"uint32\",\n                    },\n                ],\n                internalType: \"struct GovernanceStructs.GuardianSetUpgrade\",\n                name: \"gsu\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedSetMessageFee\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseSetMessageFee\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"messageFee\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct GovernanceStructs.SetMessageFee\",\n                name: \"smf\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedTransferFees\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseTransferFees\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"module\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"action\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"chain\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"amount\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recipient\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct GovernanceStructs.TransferFees\",\n                name: \"tf\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"encodedVM\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"parseVM\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"version\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"timestamp\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"nonce\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"emitterChainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"emitterAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"sequence\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"consistencyLevel\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"payload\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"guardianSetIndex\",\n                        type: \"uint32\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"r\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"s\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"v\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"guardianIndex\",\n                                type: \"uint8\",\n                            },\n                        ],\n                        internalType: \"struct Structs.Signature[]\",\n                        name: \"signatures\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"hash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct Structs.VM\",\n                name: \"vm\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_vm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitContractUpgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_vm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitNewGuardianSet\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_vm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitSetMessageFee\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_vm\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"submitTransferFees\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"r\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"s\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"v\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"guardianIndex\",\n                        type: \"uint8\",\n                    },\n                ],\n                internalType: \"struct Structs.Signature[]\",\n                name: \"signatures\",\n                type: \"tuple[]\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"address[]\",\n                        name: \"keys\",\n                        type: \"address[]\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"expirationTime\",\n                        type: \"uint32\",\n                    },\n                ],\n                internalType: \"struct Structs.GuardianSet\",\n                name: \"guardianSet\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"verifySignatures\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"valid\",\n                type: \"bool\",\n            },\n            {\n                internalType: \"string\",\n                name: \"reason\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"version\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"timestamp\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"nonce\",\n                        type: \"uint32\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"emitterChainId\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"emitterAddress\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"sequence\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint8\",\n                        name: \"consistencyLevel\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"payload\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"guardianSetIndex\",\n                        type: \"uint32\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes32\",\n                                name: \"r\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"bytes32\",\n                                name: \"s\",\n                                type: \"bytes32\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"v\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"uint8\",\n                                name: \"guardianIndex\",\n                                type: \"uint8\",\n                            },\n                        ],\n                        internalType: \"struct Structs.Signature[]\",\n                        name: \"signatures\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"hash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct Structs.VM\",\n                name: \"vm\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"verifyVM\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"valid\",\n                type: \"bool\",\n            },\n            {\n                internalType: \"string\",\n                name: \"reason\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"receive\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint32\",\n                name: \"nonce\",\n                type: \"uint32\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"payload\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"uint8\",\n                name: \"consistencyLevel\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"publishMessage\",\n        outputs: [\n            {\n                internalType: \"uint64\",\n                name: \"sequence\",\n                type: \"uint64\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n];\nvar _bytecode = \"0x608060405234801561001057600080fd5b50612eb1806100206000396000f3fe6080604052600436106101445760003560e01c806393df337e116100b6578063c0fd8bde1161006f578063c0fd8bde1461054c578063d60b347f1461057b578063eb8d3f12146105b4578063f42bc641146105d7578063f951975a146105f7578063fbe3c2cd14610624576101ab565b806393df337e1461048f5780639a8a0592146104af578063a0cce1b3146104d7578063a9e11893146104f7578063b172b22214610524578063b19a437e14610539576101ab565b80634cf842b5116101085780634cf842b51461030b5780634fdc60fa14610362578063515f3247146103c55780635cb8cae21461041f5780636606b4e014610441578063875be02a14610461576101ab565b80630319e59c146101e157806304ca84cf146102535780631a90a219146102805780631cfe79511461029f5780632c3c02a4146102cb576101ab565b366101ab5760405162461bcd60e51b815260206004820152602c60248201527f74686520576f726d686f6c6520636f6e747261637420646f6573206e6f74206160448201526b63636570742061737365747360a01b60648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152600b60248201526a1d5b9cdd5c1c1bdc9d195960aa1b60448201526064016101a2565b3480156101ed57600080fd5b506102016101fc366004612731565b610643565b60405161024a9190600060a0820190508251825260ff602084015116602083015261ffff6040840151166040830152606083015160608301526080830151608083015292915050565b60405180910390f35b34801561025f57600080fd5b5061027361026e366004612731565b610799565b60405161024a9190612b27565b34801561028c57600080fd5b506007545b60405190815260200161024a565b3480156102ab57600080fd5b5060035463ffffffff165b60405163ffffffff909116815260200161024a565b3480156102d757600080fd5b506102fb6102e63660046125a6565b60009081526005602052604090205460ff1690565b604051901515815260200161024a565b34801561031757600080fd5b5061034a610326366004612585565b6001600160a01b03166000908152600460205260409020546001600160401b031690565b6040516001600160401b03909116815260200161024a565b34801561036e57600080fd5b5061038261037d366004612731565b6109cc565b60405161024a91908151815260208083015160ff169082015260408083015161ffff16908201526060918201516001600160a01b03169181019190915260800190565b3480156103d157600080fd5b506103e56103e0366004612731565b610b08565b60405161024a91908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b34801561042b57600080fd5b5061043f61043a366004612731565b610c37565b005b34801561044d57600080fd5b5061043f61045c366004612731565b610d3f565b34801561046d57600080fd5b5061048161047c36600461276b565b610f5f565b60405161024a929190612af9565b34801561049b57600080fd5b5061043f6104aa366004612731565b6110f3565b3480156104bb57600080fd5b5060005461ffff165b60405161ffff909116815260200161024a565b3480156104e357600080fd5b506104816104f23660046125be565b61123f565b34801561050357600080fd5b50610517610512366004612731565b61141c565b60405161024a9190612b97565b34801561053057600080fd5b50600154610291565b61034a6105473660046128a4565b6117fa565b34801561055857600080fd5b5061056c6105673660046126c5565b61189a565b60405161024a93929190612baa565b34801561058757600080fd5b506102fb610596366004612585565b6001600160a01b031660009081526006602052604090205460ff1690565b3480156105c057600080fd5b50600354640100000000900463ffffffff166102b6565b3480156105e357600080fd5b5061043f6105f2366004612731565b6118fc565b34801561060357600080fd5b5061061761061236600461288a565b6119fd565b60405161024a9190612b84565b34801561063057600080fd5b5060005462010000900461ffff166104c4565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906106788382611a9c565b8252610685602082612ce3565b90506106918382611afa565b60ff1660208301526106a4600182612ce3565b9050816020015160ff166004146106f45760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b60448201526064016101a2565b6106fe8382611b56565b61ffff166040830152610712600282612ce3565b905061071e8382611bb3565b606083015261072e602082612ce3565b905061073a8382611a9c565b608083015261074a602082612ce3565b9050808351146107935760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b60448201526064016101a2565b50919050565b6107a16122d3565b60006107ad8382611a9c565b82526107ba602082612ce3565b90506107c68382611afa565b60ff1660208301526107d9600182612ce3565b9050816020015160ff166002146108325760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e5365745570677261646500000000000060448201526064016101a2565b61083c8382611b56565b61ffff166040830152610850600282612ce3565b905061085c8382611c08565b63ffffffff166080830152610872600482612ce3565b905060006108808483611afa565b905061088d600183612ce3565b915060405180604001604052808260ff166001600160401b038111156108c357634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156108ec578160200160208202803683370190505b5081526000602090910181905260608501919091525b8160ff16811015610974576109178584611c65565b60608501515180518390811061093d57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152610960601484612ce3565b92508061096c81612df0565b915050610902565b50818451146109c55760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e5365745570677261646500000000000060448201526064016101a2565b5050919050565b6040805160808101825260008082526020820181905291810182905260608101829052906109fa8382611a9c565b8252610a07602082612ce3565b9050610a138382611afa565b60ff166020830152610a26600182612ce3565b9050816020015160ff16600114610a795760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b60448201526064016101a2565b610a838382611b56565b61ffff166040830152610a97600282612ce3565b9050610aa38382611a9c565b6001600160a01b03166060830152610abc602082612ce3565b9050808351146107935760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b60448201526064016101a2565b604080516080810182526000808252602082018190529181018290526060810182905290610b368382611a9c565b8252610b43602082612ce3565b9050610b4f8382611afa565b60ff166020830152610b62600182612ce3565b9050816020015160ff16600314610bb35760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b60448201526064016101a2565b610bbd8382611b56565b61ffff166040830152610bd1600282612ce3565b9050610bdd8382611bb3565b6060830152610bed602082612ce3565b9050808351146107935760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b60448201526064016101a2565b6000610c428261141c565b9050600080610c5083611cca565b91509150818190610c745760405162461bcd60e51b81526004016101a29190612b14565b506000610c848460e001516109cc565b805190915063436f726514610ccc5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b60448201526064016101a2565b60005461ffff1661ffff16816040015161ffff1614610d1d5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b60448201526064016101a2565b610d2b846101400151611e40565b610d388160600151611e5b565b5050505050565b6000610d4a8261141c565b9050600080610d5883611cca565b91509150818190610d7c5760405162461bcd60e51b81526004016101a29190612b14565b506000610d8c8460e00151610799565b805190915063436f726514610dd45760405162461bcd60e51b815260206004820152600e60248201526d696e76616c6964204d6f64756c6560901b60448201526064016101a2565b60005461ffff1661ffff16816040015161ffff161480610dfa5750604081015161ffff16155b610e365760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b60448201526064016101a2565b60608101515151610e895760405162461bcd60e51b815260206004820152601960248201527f6e657720677561726469616e2073657420697320656d7074790000000000000060448201526064016101a2565b60035463ffffffff16610e9d906001612cfb565b63ffffffff16816080015163ffffffff1614610f055760405162461bcd60e51b815260206004820152602160248201527f696e646578206d75737420696e63726561736520696e207374657073206f66206044820152603160f81b60648201526084016101a2565b610f13846101400151611e40565b610f2a610f2560035463ffffffff1690565b611f88565b610f3c81606001518260800151611fc0565b60808101516003805463ffffffff191663ffffffff909216919091179055610d38565b600060606000610f738461010001516119fd565b805151909150610fb6576000604051806040016040528060148152602001731a5b9d985b1a590819dd585c991a585b881cd95d60621b8152509250925050915091565b60035463ffffffff1663ffffffff1684610100015163ffffffff1614158015610fe8575042816020015163ffffffff16105b1561102f5760006040518060400160405280601881526020017f677561726469616e2073657420686173206578706972656400000000000000008152509250925050915091565b61012084015151815151600a906003906110499083612d8a565b6110539190612d6a565b61105e906002612d8a565b6110689190612d6a565b611073906001612ce3565b11156110a7576000604051806040016040528060098152602001686e6f2071756f72756d60b81b8152509250925050915091565b6000806110bf8661014001518761012001518561123f565b91509150816110d5576000969095509350505050565b60016040518060200160405280600081525094509450505050915091565b60006110fe8261141c565b905060008061110c83611cca565b915091508181906111305760405162461bcd60e51b81526004016101a29190612b14565b5060006111408460e00151610643565b805190915063436f7265146111885760405162461bcd60e51b815260206004820152600e60248201526d696e76616c6964204d6f64756c6560901b60448201526064016101a2565b60005461ffff1661ffff16816040015161ffff1614806111ae5750604081015161ffff16155b6111ea5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b60448201526064016101a2565b6111f8846101400151611e40565b608081015160608201516040516001600160a01b0383169180156108fc02916000818181858888f19350505050158015611236573d6000803e3d6000fd5b50505050505050565b600060606000805b85518110156113fb57600086828151811061127257634e487b7160e01b600052603260045260246000fd5b60200260200101519050816000148061129457508260ff16816060015160ff16115b6112ec5760405162461bcd60e51b815260206004820152602360248201527f7369676e617475726520696e6469636573206d75737420626520617363656e64604482015262696e6760e81b60648201526084016101a2565b6060810151865180519194509060ff851690811061131a57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031660018983604001518460000151856020015160405160008152602001604052604051611373949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611395573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146113e8576000604051806040016040528060148152602001731593481cda59db985d1d5c99481a5b9d985b1a5960621b81525094509450505050611414565b50806113f381612df0565b915050611247565b5060016040518060200160405280600081525092509250505b935093915050565b61142461232d565b60006114308382611afa565b60ff168252611440600182612ce3565b9050816000015160ff166001146114995760405162461bcd60e51b815260206004820152601760248201527f564d2076657273696f6e20696e636f6d70617469626c6500000000000000000060448201526064016101a2565b6114a38382611c08565b63ffffffff166101008301526114ba600482612ce3565b905060006114c88483611afa565b60ff1690506114d8600183612ce3565b9150806001600160401b0381111561150057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561155257816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161151e5790505b5061012084015260005b818110156116c15761156e8584611afa565b846101200151828151811061159357634e487b7160e01b600052603260045260246000fd5b602090810291909101015160ff9091166060909101526115b4600184612ce3565b92506115c08584611a9c565b84610120015182815181106115e557634e487b7160e01b600052603260045260246000fd5b602002602001015160000181815250506020836116029190612ce3565b925061160e8584611a9c565b846101200151828151811061163357634e487b7160e01b600052603260045260246000fd5b602002602001015160200181815250506020836116509190612ce3565b925061165c8584611afa565b61166790601b612d45565b846101200151828151811061168c57634e487b7160e01b600052603260045260246000fd5b602090810291909101015160ff9091166040909101526116ad600184612ce3565b9250806116b981612df0565b91505061155c565b5060006116dd838487516116d59190612da9565b879190612014565b905080805190602001206040516020016116f991815260200190565b60408051601f1981840301815291905280516020909101206101408501526117218584611c08565b63ffffffff166020850152611737600484612ce3565b92506117438584611c08565b63ffffffff166040850152611759600484612ce3565b92506117658584611b56565b61ffff166060850152611779600284612ce3565b92506117858584611a9c565b6080850152611795602084612ce3565b92506117a18584612121565b6001600160401b031660a08501526117ba600884612ce3565b92506117c68584611afa565b60ff1660c08501526117d9600184612ce3565b92506117ec838487516116d59190612da9565b60e085015250919392505050565b600061180560075490565b34146118415760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b60448201526064016101a2565b61184a3361217e565b9050336001600160a01b03167f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b28286868660405161188b9493929190612be1565b60405180910390a29392505050565b6118a261232d565b600060606118e585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061141c92505050565b92506118f083610f5f565b93969095509293505050565b60006119078261141c565b905060008061191583611cca565b915091508181906119395760405162461bcd60e51b81526004016101a29190612b14565b5060006119498460e00151610b08565b805190915063436f7265146119915760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b60448201526064016101a2565b60005461ffff1661ffff16816040015161ffff16146119e25760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b60448201526064016101a2565b6119f0846101400151611e40565b610d388160600151600755565b60408051808201825260608082526000602080840182905263ffffffff86168252600281529084902084518154928302810184018652948501828152939493909284928491840182828015611a7b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a5d575b50505091835250506001919091015463ffffffff1660209091015292915050565b6000611aa9826020612ce3565b83511015611af15760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b60448201526064016101a2565b50016020015190565b6000611b07826001612ce3565b83511015611b4d5760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b60448201526064016101a2565b50016001015190565b6000611b63826002612ce3565b83511015611baa5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b60448201526064016101a2565b50016002015190565b6000611bc0826020612ce3565b83511015611af15760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b60448201526064016101a2565b6000611c15826004612ce3565b83511015611c5c5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b60448201526064016101a2565b50016004015190565b6000611c72826014612ce3565b83511015611cba5760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b60448201526064016101a2565b500160200151600160601b900490565b60006060600080611cda85610f5f565b9150915081611cef5760009590945092505050565b60035463ffffffff1663ffffffff1685610100015163ffffffff1614611d35576000604051806060016040528060228152602001612e3860229139935093505050915091565b60005462010000900461ffff1661ffff16856060015161ffff1614611d90576000604051806040016040528060168152602001753bb937b7339033b7bb32b93730b731b29031b430b4b760511b815250935093505050915091565b600154856080015114611de05760006040518060400160405280601981526020017f77726f6e6720676f7665726e616e636520636f6e747261637400000000000000815250935093505050915091565b61014085015160009081526005602052604090205460ff1615611e23576000604051806060016040528060228152602001612e5a60229139935093505050915091565b600160405180602001604052806000815250935093505050915091565b6000908152600560205260409020805460ff19166001179055565b6000611e8e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050611e99826121ee565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b03861691611edc91612add565b600060405180830381855af49150503d8060008114611f17576040519150601f19603f3d011682016040523d82523d6000602084013e611f1c565b606091505b5091509150818190611f415760405162461bcd60e51b81526004016101a29190612b14565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b611f954262015180612cfb565b63ffffffff9182166000908152600260205260409020600101805463ffffffff191691909216179055565b63ffffffff81166000908152600260209081526040909120835180518593611fec928492910190612388565b50602091909101516001909101805463ffffffff191663ffffffff9092169190911790555050565b60608161202281601f612ce3565b10156120615760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016101a2565b61206b8284612ce3565b845110156120af5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016101a2565b6060821580156120ce5760405191506000825260208201604052612118565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156121075780518352602092830192016120ef565b5050858452601f01601f1916604052505b50949350505050565b600061212e826008612ce3565b835110156121755760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b60448201526064016101a2565b50016008015190565b6001600160a01b0381166000908152600460205260409020546001600160401b03166121e9826121af836001612d23565b6001600160a01b03919091166000908152600460205260409020805467ffffffffffffffff19166001600160401b03909216919091179055565b919050565b6121f78161222e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b6122925760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101a2565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060a0016040528060008019168152602001600060ff168152602001600061ffff168152602001612320604051806040016040528060608152602001600063ffffffff1681525090565b8152600060209091015290565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b8280548282559060005260206000209081019282156123dd579160200282015b828111156123dd57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906123a8565b506123e99291506123ed565b5090565b5b808211156123e957600081556001016123ee565b80356001600160a01b03811681146121e957600080fd5b600082601f830112612429578081fd5b8135602061243e61243983612cc0565b612c90565b80838252828201915082860187848660071b890101111561245d578586fd5b855b858110156124c057608080838b031215612477578788fd5b61247f612c23565b8335815286840135878201526040612498818601612574565b9082015260606124a9858201612574565b90820152855293850193919091019060010161245f565b5090979650505050505050565b600082601f8301126124dd578081fd5b81356001600160401b038111156124f6576124f6612e21565b612509601f8201601f1916602001612c90565b81815284602083860101111561251d578283fd5b816020850160208301379081016020019190915292915050565b803561ffff811681146121e957600080fd5b803563ffffffff811681146121e957600080fd5b80356001600160401b03811681146121e957600080fd5b803560ff811681146121e957600080fd5b600060208284031215612596578081fd5b61259f82612402565b9392505050565b6000602082840312156125b7578081fd5b5035919050565b6000806000606084860312156125d2578182fd5b833592506020808501356001600160401b03808211156125f0578485fd5b6125fc88838901612419565b94506040870135915080821115612611578384fd5b9086019060408289031215612624578384fd5b61262c612c4b565b82358281111561263a578586fd5b83019150601f8201891361264c578485fd5b813561265a61243982612cc0565b8082825286820191508685018c888560051b8801011115612679578889fd5b8895505b838610156126a25761268e81612402565b83526001959095019491870191870161267d565b508352506126b39050838501612549565b84820152809450505050509250925092565b600080602083850312156126d7578182fd5b82356001600160401b03808211156126ed578384fd5b818501915085601f830112612700578384fd5b81358181111561270e578485fd5b86602082850101111561271f578485fd5b60209290920196919550909350505050565b600060208284031215612742578081fd5b81356001600160401b03811115612757578182fd5b612763848285016124cd565b949350505050565b60006020828403121561277c578081fd5b81356001600160401b0380821115612792578283fd5b9083019061016082860312156127a6578283fd5b6127ae612c6d565b6127b783612574565b81526127c560208401612549565b60208201526127d660408401612549565b60408201526127e760608401612537565b60608201526080830135608082015261280260a0840161255d565b60a082015261281360c08401612574565b60c082015260e083013582811115612829578485fd5b612835878286016124cd565b60e083015250610100612849818501612549565b908201526101208381013583811115612860578586fd5b61286c88828701612419565b91830191909152506101409283013592810192909252509392505050565b60006020828403121561289b578081fd5b61259f82612549565b6000806000606084860312156128b8578081fd5b6128c184612549565b925060208401356001600160401b038111156128db578182fd5b6128e7868287016124cd565b9250506128f660408501612574565b90509250925092565b6000815180845260208085019450808401835b8381101561295757815180518852838101518489015260408082015160ff908116918a0191909152606091820151169088015260809096019590820190600101612912565b509495945050505050565b6000815180845261297a816020860160208601612dc0565b601f01601f19169290920160200192915050565b805160408084528151908401819052600091602091908201906060860190845b818110156129d35783516001600160a01b0316835292840192918401916001016129ae565b50509382015163ffffffff16949091019390935250919050565b805160ff16825260006101606020830151612a10602086018263ffffffff169052565b506040830151612a28604086018263ffffffff169052565b506060830151612a3e606086018261ffff169052565b506080830151608085015260a0830151612a6360a08601826001600160401b03169052565b5060c0830151612a7860c086018260ff169052565b5060e08301518160e0860152612a9082860182612962565b91505061010080840151612aab8287018263ffffffff169052565b50506101208084015185830382870152612ac583826128ff565b61014095860151969095019590955250919392505050565b60008251612aef818460208701612dc0565b9190910192915050565b82151581526040602082015260006127636040830184612962565b60208152600061259f6020830184612962565b602081528151602082015260ff602083015116604082015261ffff60408301511660608201526000606083015160a06080840152612b6860c084018261298e565b905063ffffffff60808501511660a08401528091505092915050565b60208152600061259f602083018461298e565b60208152600061259f60208301846129ed565b606081526000612bbd60608301866129ed565b84151560208401528281036040840152612bd78185612962565b9695505050505050565b6001600160401b038516815263ffffffff84166020820152608060408201526000612c0f6080830185612962565b905060ff8316606083015295945050505050565b604051608081016001600160401b0381118282101715612c4557612c45612e21565b60405290565b604080519081016001600160401b0381118282101715612c4557612c45612e21565b60405161016081016001600160401b0381118282101715612c4557612c45612e21565b604051601f8201601f191681016001600160401b0381118282101715612cb857612cb8612e21565b604052919050565b60006001600160401b03821115612cd957612cd9612e21565b5060051b60200190565b60008219821115612cf657612cf6612e0b565b500190565b600063ffffffff808316818516808303821115612d1a57612d1a612e0b565b01949350505050565b60006001600160401b03808316818516808303821115612d1a57612d1a612e0b565b600060ff821660ff84168060ff03821115612d6257612d62612e0b565b019392505050565b600082612d8557634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612da457612da4612e0b565b500290565b600082821015612dbb57612dbb612e0b565b500390565b60005b83811015612ddb578181015183820152602001612dc3565b83811115612dea576000848401525b50505050565b6000600019821415612e0457612e04612e0b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe6e6f74207369676e65642062792063757272656e7420677561726469616e20736574676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a264697066735822122042c40a33cbb5c7ae2dfd339b23293dd079cc42ced6a918d8a77b14d476f5a0b464736f6c63430008040033\";\nvar Implementation__factory = /** @class */ (function (_super) {\n    __extends(Implementation__factory, _super);\n    function Implementation__factory(signer) {\n        return _super.call(this, _abi, _bytecode, signer) || this;\n    }\n    Implementation__factory.prototype.deploy = function (overrides) {\n        return _super.prototype.deploy.call(this, overrides || {});\n    };\n    Implementation__factory.prototype.getDeployTransaction = function (overrides) {\n        return _super.prototype.getDeployTransaction.call(this, overrides || {});\n    };\n    Implementation__factory.prototype.attach = function (address) {\n        return _super.prototype.attach.call(this, address);\n    };\n    Implementation__factory.prototype.connect = function (signer) {\n        return _super.prototype.connect.call(this, signer);\n    };\n    Implementation__factory.createInterface = function () {\n        return new utils.Interface(_abi);\n    };\n    Implementation__factory.connect = function (address, signerOrProvider) {\n        return new Contract(address, _abi, signerOrProvider);\n    };\n    Implementation__factory.bytecode = _bytecode;\n    Implementation__factory.abi = _abi;\n    return Implementation__factory;\n}(ContractFactory));\nexport { Implementation__factory };\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { utils, Contract, ContractFactory } from \"ethers\";\nvar _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"name_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"string\",\n                name: \"symbol_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"uint8\",\n                name: \"decimals_\",\n                type: \"uint8\",\n            },\n            {\n                internalType: \"uint64\",\n                name: \"sequence_\",\n                type: \"uint64\",\n            },\n            {\n                internalType: \"address\",\n                name: \"owner_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"chainId_\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"nativeContract_\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"initialize\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"chainId\",\n        outputs: [\n            {\n                internalType: \"uint16\",\n                name: \"\",\n                type: \"uint16\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"nativeContract\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account_\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"recipient_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"spender_\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"sender_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"recipient_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"addedValue_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"increaseAllowance\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"subtractedValue_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"decreaseAllowance\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"mint\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account_\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount_\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"burn\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"name_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"string\",\n                name: \"symbol_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"uint64\",\n                name: \"sequence_\",\n                type: \"uint64\",\n            },\n        ],\n        name: \"updateDetails\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\nvar _bytecode = \"0x608060405234801561001057600080fd5b506111e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063a18cd7c611610071578063a18cd7c614610246578063a457c2d714610259578063a9059cbb1461026c578063c71f46151461027f578063dd62ed3e1461029257600080fd5b80638da5cb5b146101ef57806395d89b411461020a5780639a8a0592146102125780639dc29fac1461023357600080fd5b8063313ce567116100e9578063313ce5671461018157806339509351146101965780633d6c043b146101a957806340c10f19146101b157806370a08231146101c657600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102cb565b6040516101309190611093565b60405180910390f35b61014c610147366004610e85565b6102f4565b6040519015158152602001610130565b6003545b604051908152602001610130565b61014c61017c366004610e4a565b61030a565b60045460405160ff9091168152602001610130565b61014c6101a4366004610e85565b6103c0565b600854610160565b6101c46101bf366004610e85565b6103f7565b005b6101606101d4366004610df7565b6001600160a01b031660009081526005602052604090205490565b6007546040516001600160a01b039091168152602001610130565b61012361042f565b600754600160a81b900461ffff1660405161ffff9091168152602001610130565b6101c4610241366004610e85565b6104c4565b6101c4610254366004610eae565b6104f8565b61014c610267366004610e85565b6105ce565b61014c61027a366004610e85565b610669565b6101c461028d366004610f1f565b610676565b6101606102a0366004610e18565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6040516060906102e090600090602001610fdd565b604051602081830303815290604052905090565b6000610301338484610775565b50600192915050565b600061031784848461089a565b6001600160a01b0384166000908152600660209081526040808320338452909152902054828110156103a15760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103b585336103b08685611135565b610775565b506001949350505050565b3360008181526006602090815260408083206001600160a01b038716845290915281205490916103019185906103b090869061111d565b6007546001600160a01b031633146104215760405162461bcd60e51b8152600401610398906110e6565b61042b8282610a72565b5050565b6060600060010180546104419061114c565b80601f016020809104026020016040519081016040528092919081815260200182805461046d9061114c565b80156104ba5780601f1061048f576101008083540402835291602001916104ba565b820191906000526020600020905b81548152906001019060200180831161049d57829003601f168201915b5050505050905090565b6007546001600160a01b031633146104ee5760405162461bcd60e51b8152600401610398906110e6565b61042b8282610b54565b6007546001600160a01b031633146105225760405162461bcd60e51b8152600401610398906110e6565b60025467ffffffffffffffff8083169116106105805760405162461bcd60e51b815260206004820152601e60248201527f63757272656e74206d6574616461746120697320757020746f206461746500006044820152606401610398565b8251610593906000906020860190610ca3565b5081516105a7906001906020850190610ca3565b506002805467ffffffffffffffff191667ffffffffffffffff929092169190911790555050565b3360009081526006602090815260408083206001600160a01b0386168452909152812054828110156106505760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610398565b61065f33856103b08685611135565b5060019392505050565b600061030133848461089a565b600754600160a01b900460ff16156106c65760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610398565b6007805460ff60a01b1916600160a01b17905586516106ec9060009060208a0190610ca3565b508551610700906001906020890190610ca3565b506004805460ff90961660ff19909616959095179094556002805467ffffffffffffffff90941667ffffffffffffffff19909416939093179092556007805461ffff909316600160a81b02600162ffff0160a01b03199093166001600160a01b03909216919091179190911790556008555050565b6001600160a01b0383166107d75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610398565b6001600160a01b0382166108385760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610398565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108fe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610398565b6001600160a01b0382166109605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610398565b6001600160a01b038316600090815260056020526040902054818110156109d85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610398565b6109e28282611135565b6001600160a01b038086166000908152600560205260408082209390935590851681529081208054849290610a1890849061111d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a6491815260200190565b60405180910390a350505050565b6001600160a01b038216610ac85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610398565b8060006003016000828254610add919061111d565b90915550506001600160a01b03821660009081526005602052604081208054839290610b0a90849061111d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610bb45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610398565b6001600160a01b03821660009081526005602052604090205481811015610c285760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610398565b610c328282611135565b6001600160a01b03841660009081526005602052604081209190915560038054849290610c60908490611135565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161088d565b828054610caf9061114c565b90600052602060002090601f016020900481019282610cd15760008555610d17565b82601f10610cea57805160ff1916838001178555610d17565b82800160010185558215610d17579182015b82811115610d17578251825591602001919060010190610cfc565b50610d23929150610d27565b5090565b5b80821115610d235760008155600101610d28565b80356001600160a01b0381168114610d5357600080fd5b919050565b600082601f830112610d68578081fd5b813567ffffffffffffffff80821115610d8357610d8361119d565b604051601f8301601f19908116603f01168101908282118183101715610dab57610dab61119d565b81604052838152866020858801011115610dc3578485fd5b8360208701602083013792830160200193909352509392505050565b803567ffffffffffffffff81168114610d5357600080fd5b600060208284031215610e08578081fd5b610e1182610d3c565b9392505050565b60008060408385031215610e2a578081fd5b610e3383610d3c565b9150610e4160208401610d3c565b90509250929050565b600080600060608486031215610e5e578081fd5b610e6784610d3c565b9250610e7560208501610d3c565b9150604084013590509250925092565b60008060408385031215610e97578182fd5b610ea083610d3c565b946020939093013593505050565b600080600060608486031215610ec2578283fd5b833567ffffffffffffffff80821115610ed9578485fd5b610ee587838801610d58565b94506020860135915080821115610efa578384fd5b50610f0786828701610d58565b925050610f1660408501610ddf565b90509250925092565b600080600080600080600060e0888a031215610f39578283fd5b873567ffffffffffffffff80821115610f50578485fd5b610f5c8b838c01610d58565b985060208a0135915080821115610f71578485fd5b50610f7e8a828b01610d58565b965050604088013560ff81168114610f94578384fd5b9450610fa260608901610ddf565b9350610fb060808901610d3c565b925060a088013561ffff81168114610fc6578283fd5b8092505060c0880135905092959891949750929550565b600080835482600182811c915080831680610ff957607f831692505b602080841082141561101957634e487b7160e01b87526022600452602487fd5b81801561102d576001811461103e5761106a565b60ff1986168952848901965061106a565b60008a815260209020885b868110156110625781548b820152908501908301611049565b505084890196505b50505050505061108b816a2028576f726d686f6c652960a81b8152600b0190565b949350505050565b6000602080835283518082850152825b818110156110bf578581018301518582016040015282016110a3565b818111156110d05783604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b6000821982111561113057611130611187565b500190565b60008282101561114757611147611187565b500390565b600181811c9082168061116057607f821691505b6020821081141561118157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b95441ce5c32d3a4f1e35bef3162f4248a97a9c7bfc685ef9090cd15fbc712fb64736f6c63430008040033\";\nvar TokenImplementation__factory = /** @class */ (function (_super) {\n    __extends(TokenImplementation__factory, _super);\n    function TokenImplementation__factory(signer) {\n        return _super.call(this, _abi, _bytecode, signer) || this;\n    }\n    TokenImplementation__factory.prototype.deploy = function (overrides) {\n        return _super.prototype.deploy.call(this, overrides || {});\n    };\n    TokenImplementation__factory.prototype.getDeployTransaction = function (overrides) {\n        return _super.prototype.getDeployTransaction.call(this, overrides || {});\n    };\n    TokenImplementation__factory.prototype.attach = function (address) {\n        return _super.prototype.attach.call(this, address);\n    };\n    TokenImplementation__factory.prototype.connect = function (signer) {\n        return _super.prototype.connect.call(this, signer);\n    };\n    TokenImplementation__factory.createInterface = function () {\n        return new utils.Interface(_abi);\n    };\n    TokenImplementation__factory.connect = function (address, signerOrProvider) {\n        return new Contract(address, _abi, signerOrProvider);\n    };\n    TokenImplementation__factory.bytecode = _bytecode;\n    TokenImplementation__factory.abi = _abi;\n    return TokenImplementation__factory;\n}(ContractFactory));\nexport { TokenImplementation__factory };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/* eslint-disable */\nimport Long from \"long\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport _m0 from \"protobufjs/minimal\";\nimport { BrowserHeaders } from \"browser-headers\";\nimport { Heartbeat } from \"../../gossip/v1/gossip\";\nexport var protobufPackage = \"publicrpc.v1\";\nexport var ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"CHAIN_ID_UNSPECIFIED\"] = 0] = \"CHAIN_ID_UNSPECIFIED\";\n    ChainID[ChainID[\"CHAIN_ID_SOLANA\"] = 1] = \"CHAIN_ID_SOLANA\";\n    ChainID[ChainID[\"CHAIN_ID_ETHEREUM\"] = 2] = \"CHAIN_ID_ETHEREUM\";\n    ChainID[ChainID[\"CHAIN_ID_TERRA\"] = 3] = \"CHAIN_ID_TERRA\";\n    ChainID[ChainID[\"CHAIN_ID_BSC\"] = 4] = \"CHAIN_ID_BSC\";\n    ChainID[ChainID[\"CHAIN_ID_POLYGON\"] = 5] = \"CHAIN_ID_POLYGON\";\n    ChainID[ChainID[\"CHAIN_ID_AVALANCHE\"] = 6] = \"CHAIN_ID_AVALANCHE\";\n    /**\n     * CHAIN_ID_ETHEREUM_ROPSTEN - Special case - Eth has two testnets. CHAIN_ID_ETHEREUM is Goerli,\n     * but we also want to connect to Ropsten, so we add a separate chain.\n     */\n    ChainID[ChainID[\"CHAIN_ID_ETHEREUM_ROPSTEN\"] = 10001] = \"CHAIN_ID_ETHEREUM_ROPSTEN\";\n    ChainID[ChainID[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ChainID || (ChainID = {}));\nexport function chainIDFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"CHAIN_ID_UNSPECIFIED\":\n            return ChainID.CHAIN_ID_UNSPECIFIED;\n        case 1:\n        case \"CHAIN_ID_SOLANA\":\n            return ChainID.CHAIN_ID_SOLANA;\n        case 2:\n        case \"CHAIN_ID_ETHEREUM\":\n            return ChainID.CHAIN_ID_ETHEREUM;\n        case 3:\n        case \"CHAIN_ID_TERRA\":\n            return ChainID.CHAIN_ID_TERRA;\n        case 4:\n        case \"CHAIN_ID_BSC\":\n            return ChainID.CHAIN_ID_BSC;\n        case 5:\n        case \"CHAIN_ID_POLYGON\":\n            return ChainID.CHAIN_ID_POLYGON;\n        case 6:\n        case \"CHAIN_ID_AVALANCHE\":\n            return ChainID.CHAIN_ID_AVALANCHE;\n        case 10001:\n        case \"CHAIN_ID_ETHEREUM_ROPSTEN\":\n            return ChainID.CHAIN_ID_ETHEREUM_ROPSTEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ChainID.UNRECOGNIZED;\n    }\n}\nexport function chainIDToJSON(object) {\n    switch (object) {\n        case ChainID.CHAIN_ID_UNSPECIFIED:\n            return \"CHAIN_ID_UNSPECIFIED\";\n        case ChainID.CHAIN_ID_SOLANA:\n            return \"CHAIN_ID_SOLANA\";\n        case ChainID.CHAIN_ID_ETHEREUM:\n            return \"CHAIN_ID_ETHEREUM\";\n        case ChainID.CHAIN_ID_TERRA:\n            return \"CHAIN_ID_TERRA\";\n        case ChainID.CHAIN_ID_BSC:\n            return \"CHAIN_ID_BSC\";\n        case ChainID.CHAIN_ID_POLYGON:\n            return \"CHAIN_ID_POLYGON\";\n        case ChainID.CHAIN_ID_AVALANCHE:\n            return \"CHAIN_ID_AVALANCHE\";\n        case ChainID.CHAIN_ID_ETHEREUM_ROPSTEN:\n            return \"CHAIN_ID_ETHEREUM_ROPSTEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nvar baseMessageID = {\n    emitterChain: 0,\n    emitterAddress: \"\",\n    sequence: \"0\",\n};\nexport var MessageID = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.emitterChain !== 0) {\n            writer.uint32(8).int32(message.emitterChain);\n        }\n        if (message.emitterAddress !== \"\") {\n            writer.uint32(18).string(message.emitterAddress);\n        }\n        if (message.sequence !== \"0\") {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseMessageID);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.emitterChain = reader.int32();\n                    break;\n                case 2:\n                    message.emitterAddress = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToString(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseMessageID);\n        if (object.emitterChain !== undefined && object.emitterChain !== null) {\n            message.emitterChain = chainIDFromJSON(object.emitterChain);\n        }\n        else {\n            message.emitterChain = 0;\n        }\n        if (object.emitterAddress !== undefined && object.emitterAddress !== null) {\n            message.emitterAddress = String(object.emitterAddress);\n        }\n        else {\n            message.emitterAddress = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = String(object.sequence);\n        }\n        else {\n            message.sequence = \"0\";\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.emitterChain !== undefined &&\n            (obj.emitterChain = chainIDToJSON(message.emitterChain));\n        message.emitterAddress !== undefined &&\n            (obj.emitterAddress = message.emitterAddress);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseMessageID);\n        if (object.emitterChain !== undefined && object.emitterChain !== null) {\n            message.emitterChain = object.emitterChain;\n        }\n        else {\n            message.emitterChain = 0;\n        }\n        if (object.emitterAddress !== undefined && object.emitterAddress !== null) {\n            message.emitterAddress = object.emitterAddress;\n        }\n        else {\n            message.emitterAddress = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = \"0\";\n        }\n        return message;\n    },\n};\nvar baseGetSignedVAARequest = {};\nexport var GetSignedVAARequest = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.messageId !== undefined) {\n            MessageID.encode(message.messageId, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetSignedVAARequest);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.messageId = MessageID.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseGetSignedVAARequest);\n        if (object.messageId !== undefined && object.messageId !== null) {\n            message.messageId = MessageID.fromJSON(object.messageId);\n        }\n        else {\n            message.messageId = undefined;\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.messageId !== undefined &&\n            (obj.messageId = message.messageId\n                ? MessageID.toJSON(message.messageId)\n                : undefined);\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseGetSignedVAARequest);\n        if (object.messageId !== undefined && object.messageId !== null) {\n            message.messageId = MessageID.fromPartial(object.messageId);\n        }\n        else {\n            message.messageId = undefined;\n        }\n        return message;\n    },\n};\nvar baseGetSignedVAAResponse = {};\nexport var GetSignedVAAResponse = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.vaaBytes.length !== 0) {\n            writer.uint32(10).bytes(message.vaaBytes);\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetSignedVAAResponse);\n        message.vaaBytes = new Uint8Array();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.vaaBytes = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseGetSignedVAAResponse);\n        message.vaaBytes = new Uint8Array();\n        if (object.vaaBytes !== undefined && object.vaaBytes !== null) {\n            message.vaaBytes = bytesFromBase64(object.vaaBytes);\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.vaaBytes !== undefined &&\n            (obj.vaaBytes = base64FromBytes(message.vaaBytes !== undefined ? message.vaaBytes : new Uint8Array()));\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseGetSignedVAAResponse);\n        if (object.vaaBytes !== undefined && object.vaaBytes !== null) {\n            message.vaaBytes = object.vaaBytes;\n        }\n        else {\n            message.vaaBytes = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar baseGetLastHeartbeatsRequest = {};\nexport var GetLastHeartbeatsRequest = {\n    encode: function (_, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetLastHeartbeatsRequest);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (_) {\n        var message = __assign({}, baseGetLastHeartbeatsRequest);\n        return message;\n    },\n    toJSON: function (_) {\n        var obj = {};\n        return obj;\n    },\n    fromPartial: function (_) {\n        var message = __assign({}, baseGetLastHeartbeatsRequest);\n        return message;\n    },\n};\nvar baseGetLastHeartbeatsResponse = {};\nexport var GetLastHeartbeatsResponse = {\n    encode: function (message, writer) {\n        var e_1, _a;\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        try {\n            for (var _b = __values(message.entries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var v = _c.value;\n                GetLastHeartbeatsResponse_Entry.encode(v, writer.uint32(10).fork()).ldelim();\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetLastHeartbeatsResponse);\n        message.entries = [];\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(GetLastHeartbeatsResponse_Entry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var e_2, _a;\n        var message = __assign({}, baseGetLastHeartbeatsResponse);\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            try {\n                for (var _b = __values(object.entries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    message.entries.push(GetLastHeartbeatsResponse_Entry.fromJSON(e));\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map(function (e) {\n                return e ? GetLastHeartbeatsResponse_Entry.toJSON(e) : undefined;\n            });\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial: function (object) {\n        var e_3, _a;\n        var message = __assign({}, baseGetLastHeartbeatsResponse);\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            try {\n                for (var _b = __values(object.entries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    message.entries.push(GetLastHeartbeatsResponse_Entry.fromPartial(e));\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        return message;\n    },\n};\nvar baseGetLastHeartbeatsResponse_Entry = {\n    verifiedGuardianAddr: \"\",\n    p2pNodeAddr: \"\",\n};\nexport var GetLastHeartbeatsResponse_Entry = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.verifiedGuardianAddr !== \"\") {\n            writer.uint32(10).string(message.verifiedGuardianAddr);\n        }\n        if (message.p2pNodeAddr !== \"\") {\n            writer.uint32(18).string(message.p2pNodeAddr);\n        }\n        if (message.rawHeartbeat !== undefined) {\n            Heartbeat.encode(message.rawHeartbeat, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetLastHeartbeatsResponse_Entry);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.verifiedGuardianAddr = reader.string();\n                    break;\n                case 2:\n                    message.p2pNodeAddr = reader.string();\n                    break;\n                case 3:\n                    message.rawHeartbeat = Heartbeat.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseGetLastHeartbeatsResponse_Entry);\n        if (object.verifiedGuardianAddr !== undefined &&\n            object.verifiedGuardianAddr !== null) {\n            message.verifiedGuardianAddr = String(object.verifiedGuardianAddr);\n        }\n        else {\n            message.verifiedGuardianAddr = \"\";\n        }\n        if (object.p2pNodeAddr !== undefined && object.p2pNodeAddr !== null) {\n            message.p2pNodeAddr = String(object.p2pNodeAddr);\n        }\n        else {\n            message.p2pNodeAddr = \"\";\n        }\n        if (object.rawHeartbeat !== undefined && object.rawHeartbeat !== null) {\n            message.rawHeartbeat = Heartbeat.fromJSON(object.rawHeartbeat);\n        }\n        else {\n            message.rawHeartbeat = undefined;\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.verifiedGuardianAddr !== undefined &&\n            (obj.verifiedGuardianAddr = message.verifiedGuardianAddr);\n        message.p2pNodeAddr !== undefined &&\n            (obj.p2pNodeAddr = message.p2pNodeAddr);\n        message.rawHeartbeat !== undefined &&\n            (obj.rawHeartbeat = message.rawHeartbeat\n                ? Heartbeat.toJSON(message.rawHeartbeat)\n                : undefined);\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseGetLastHeartbeatsResponse_Entry);\n        if (object.verifiedGuardianAddr !== undefined &&\n            object.verifiedGuardianAddr !== null) {\n            message.verifiedGuardianAddr = object.verifiedGuardianAddr;\n        }\n        else {\n            message.verifiedGuardianAddr = \"\";\n        }\n        if (object.p2pNodeAddr !== undefined && object.p2pNodeAddr !== null) {\n            message.p2pNodeAddr = object.p2pNodeAddr;\n        }\n        else {\n            message.p2pNodeAddr = \"\";\n        }\n        if (object.rawHeartbeat !== undefined && object.rawHeartbeat !== null) {\n            message.rawHeartbeat = Heartbeat.fromPartial(object.rawHeartbeat);\n        }\n        else {\n            message.rawHeartbeat = undefined;\n        }\n        return message;\n    },\n};\nvar baseGetCurrentGuardianSetRequest = {};\nexport var GetCurrentGuardianSetRequest = {\n    encode: function (_, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetCurrentGuardianSetRequest);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (_) {\n        var message = __assign({}, baseGetCurrentGuardianSetRequest);\n        return message;\n    },\n    toJSON: function (_) {\n        var obj = {};\n        return obj;\n    },\n    fromPartial: function (_) {\n        var message = __assign({}, baseGetCurrentGuardianSetRequest);\n        return message;\n    },\n};\nvar baseGetCurrentGuardianSetResponse = {};\nexport var GetCurrentGuardianSetResponse = {\n    encode: function (message, writer) {\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.guardianSet !== undefined) {\n            GuardianSet.encode(message.guardianSet, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGetCurrentGuardianSetResponse);\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.guardianSet = GuardianSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var message = __assign({}, baseGetCurrentGuardianSetResponse);\n        if (object.guardianSet !== undefined && object.guardianSet !== null) {\n            message.guardianSet = GuardianSet.fromJSON(object.guardianSet);\n        }\n        else {\n            message.guardianSet = undefined;\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.guardianSet !== undefined &&\n            (obj.guardianSet = message.guardianSet\n                ? GuardianSet.toJSON(message.guardianSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial: function (object) {\n        var message = __assign({}, baseGetCurrentGuardianSetResponse);\n        if (object.guardianSet !== undefined && object.guardianSet !== null) {\n            message.guardianSet = GuardianSet.fromPartial(object.guardianSet);\n        }\n        else {\n            message.guardianSet = undefined;\n        }\n        return message;\n    },\n};\nvar baseGuardianSet = { index: 0, addresses: \"\" };\nexport var GuardianSet = {\n    encode: function (message, writer) {\n        var e_4, _a;\n        if (writer === void 0) { writer = _m0.Writer.create(); }\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        try {\n            for (var _b = __values(message.addresses), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var v = _c.value;\n                writer.uint32(18).string(v);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return writer;\n    },\n    decode: function (input, length) {\n        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        var end = length === undefined ? reader.len : reader.pos + length;\n        var message = __assign({}, baseGuardianSet);\n        message.addresses = [];\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON: function (object) {\n        var e_5, _a;\n        var message = __assign({}, baseGuardianSet);\n        message.addresses = [];\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.addresses !== undefined && object.addresses !== null) {\n            try {\n                for (var _b = __values(object.addresses), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    message.addresses.push(String(e));\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n        }\n        return message;\n    },\n    toJSON: function (message) {\n        var obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        if (message.addresses) {\n            obj.addresses = message.addresses.map(function (e) { return e; });\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial: function (object) {\n        var e_6, _a;\n        var message = __assign({}, baseGuardianSet);\n        message.addresses = [];\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.addresses !== undefined && object.addresses !== null) {\n            try {\n                for (var _b = __values(object.addresses), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    message.addresses.push(e);\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        return message;\n    },\n};\nvar PublicRPCServiceClientImpl = /** @class */ (function () {\n    function PublicRPCServiceClientImpl(rpc) {\n        this.rpc = rpc;\n        this.GetLastHeartbeats = this.GetLastHeartbeats.bind(this);\n        this.GetSignedVAA = this.GetSignedVAA.bind(this);\n        this.GetCurrentGuardianSet = this.GetCurrentGuardianSet.bind(this);\n    }\n    PublicRPCServiceClientImpl.prototype.GetLastHeartbeats = function (request, metadata) {\n        return this.rpc.unary(PublicRPCServiceGetLastHeartbeatsDesc, GetLastHeartbeatsRequest.fromPartial(request), metadata);\n    };\n    PublicRPCServiceClientImpl.prototype.GetSignedVAA = function (request, metadata) {\n        return this.rpc.unary(PublicRPCServiceGetSignedVAADesc, GetSignedVAARequest.fromPartial(request), metadata);\n    };\n    PublicRPCServiceClientImpl.prototype.GetCurrentGuardianSet = function (request, metadata) {\n        return this.rpc.unary(PublicRPCServiceGetCurrentGuardianSetDesc, GetCurrentGuardianSetRequest.fromPartial(request), metadata);\n    };\n    return PublicRPCServiceClientImpl;\n}());\nexport { PublicRPCServiceClientImpl };\nexport var PublicRPCServiceDesc = {\n    serviceName: \"publicrpc.v1.PublicRPCService\",\n};\nexport var PublicRPCServiceGetLastHeartbeatsDesc = {\n    methodName: \"GetLastHeartbeats\",\n    service: PublicRPCServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary: function () {\n            return GetLastHeartbeatsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary: function (data) {\n            return __assign(__assign({}, GetLastHeartbeatsResponse.decode(data)), { toObject: function () {\n                    return this;\n                } });\n        },\n    },\n};\nexport var PublicRPCServiceGetSignedVAADesc = {\n    methodName: \"GetSignedVAA\",\n    service: PublicRPCServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary: function () {\n            return GetSignedVAARequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary: function (data) {\n            return __assign(__assign({}, GetSignedVAAResponse.decode(data)), { toObject: function () {\n                    return this;\n                } });\n        },\n    },\n};\nexport var PublicRPCServiceGetCurrentGuardianSetDesc = {\n    methodName: \"GetCurrentGuardianSet\",\n    service: PublicRPCServiceDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary: function () {\n            return GetCurrentGuardianSetRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary: function (data) {\n            return __assign(__assign({}, GetCurrentGuardianSetResponse.decode(data)), { toObject: function () {\n                    return this;\n                } });\n        },\n    },\n};\nvar GrpcWebImpl = /** @class */ (function () {\n    function GrpcWebImpl(host, options) {\n        this.host = host;\n        this.options = options;\n    }\n    GrpcWebImpl.prototype.unary = function (methodDesc, _request, metadata) {\n        var _this = this;\n        var _a;\n        var request = __assign(__assign({}, _request), methodDesc.requestType);\n        var maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders(__assign(__assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))\n            : metadata || this.options.metadata;\n        return new Promise(function (resolve, reject) {\n            grpc.unary(methodDesc, {\n                request: request,\n                host: _this.host,\n                metadata: maybeCombinedMetadata,\n                transport: _this.options.transport,\n                debug: _this.options.debug,\n                onEnd: function (response) {\n                    if (response.status === grpc.Code.OK) {\n                        resolve(response.message);\n                    }\n                    else {\n                        var err = new Error(response.statusMessage);\n                        err.code = response.status;\n                        err.metadata = response.trailers;\n                        reject(err);\n                    }\n                },\n            });\n        });\n    };\n    return GrpcWebImpl;\n}());\nexport { GrpcWebImpl };\nvar globalThis = (function () {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nvar atob = globalThis.atob ||\n    (function (b64) { return globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"); });\nfunction bytesFromBase64(b64) {\n    var bin = atob(b64);\n    var arr = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nvar btoa = globalThis.btoa ||\n    (function (bin) { return globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"); });\nfunction base64FromBytes(arr) {\n    var e_7, _a;\n    var bin = [];\n    try {\n        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n            var byte = arr_1_1.value;\n            bin.push(String.fromCharCode(byte));\n        }\n    }\n    catch (e_7_1) { e_7 = { error: e_7_1 }; }\n    finally {\n        try {\n            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        }\n        finally { if (e_7) throw e_7.error; }\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToString(long) {\n    return long.toString();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long;\n    _m0.configure();\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { GrpcWebImpl, PublicRPCServiceClientImpl, } from \"../proto/publicrpc/v1/publicrpc\";\nexport function getSignedVAA(host, emitterChain, emitterAddress, sequence, extraGrpcOpts) {\n    if (extraGrpcOpts === void 0) { extraGrpcOpts = {}; }\n    return __awaiter(this, void 0, void 0, function () {\n        var rpc, api;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    rpc = new GrpcWebImpl(host, extraGrpcOpts);\n                    api = new PublicRPCServiceClientImpl(rpc);\n                    return [4 /*yield*/, api.GetSignedVAA({\n                            messageId: {\n                                emitterChain: emitterChain,\n                                emitterAddress: emitterAddress,\n                                sequence: sequence,\n                            },\n                        })];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n","import { PublicKey, TransactionInstruction, } from \"@solana/web3.js\";\n// begin from clients\\solana\\main.ts\nexport function ixFromRust(data) {\n    var keys = data.accounts.map(accountMetaFromRust);\n    return new TransactionInstruction({\n        programId: new PublicKey(data.program_id),\n        data: Buffer.from(data.data),\n        keys: keys,\n    });\n}\nfunction accountMetaFromRust(meta) {\n    return {\n        pubkey: new PublicKey(meta.pubkey),\n        isSigner: meta.is_signer,\n        isWritable: meta.is_writable,\n    };\n}\n// end from clients\\solana\\main.ts\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { Keypair, PublicKey, Transaction, } from \"@solana/web3.js\";\nimport { ixFromRust } from \"./rust\";\nimport { importCoreWasm } from \"./wasm\";\n// is there a better pattern for this?\nexport function postVaa(connection, signTransaction, bridge_id, payer, vaa) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, guardian_set_address, parse_guardian_set, verify_signatures_ix, post_vaa_ix, bridge_state, guardian_addr, acc, guardian_data, signature_set, txs, txs_1, txs_1_1, tx, ixs, transaction_1, blockhash_1, signed_1, txid_1, e_1_1, ix, transaction, blockhash, signed, txid;\n        var e_1, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    _a = _c.sent(), guardian_set_address = _a.guardian_set_address, parse_guardian_set = _a.parse_guardian_set, verify_signatures_ix = _a.verify_signatures_ix, post_vaa_ix = _a.post_vaa_ix;\n                    return [4 /*yield*/, getBridgeState(connection, bridge_id)];\n                case 2:\n                    bridge_state = _c.sent();\n                    guardian_addr = new PublicKey(guardian_set_address(bridge_id, bridge_state.guardian_set_index));\n                    return [4 /*yield*/, connection.getAccountInfo(guardian_addr)];\n                case 3:\n                    acc = _c.sent();\n                    if ((acc === null || acc === void 0 ? void 0 : acc.data) === undefined) {\n                        return [2 /*return*/];\n                    }\n                    guardian_data = parse_guardian_set(new Uint8Array(acc === null || acc === void 0 ? void 0 : acc.data));\n                    signature_set = Keypair.generate();\n                    txs = verify_signatures_ix(bridge_id, payer, bridge_state.guardian_set_index, guardian_data, signature_set.publicKey.toString(), vaa);\n                    _c.label = 4;\n                case 4:\n                    _c.trys.push([4, 12, 13, 14]);\n                    txs_1 = __values(txs), txs_1_1 = txs_1.next();\n                    _c.label = 5;\n                case 5:\n                    if (!!txs_1_1.done) return [3 /*break*/, 11];\n                    tx = txs_1_1.value;\n                    ixs = tx.map(function (v) {\n                        return ixFromRust(v);\n                    });\n                    transaction_1 = new Transaction().add(ixs[0], ixs[1]);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 6:\n                    blockhash_1 = (_c.sent()).blockhash;\n                    transaction_1.recentBlockhash = blockhash_1;\n                    transaction_1.feePayer = new PublicKey(payer);\n                    transaction_1.partialSign(signature_set);\n                    return [4 /*yield*/, signTransaction(transaction_1)];\n                case 7:\n                    signed_1 = _c.sent();\n                    return [4 /*yield*/, connection.sendRawTransaction(signed_1.serialize())];\n                case 8:\n                    txid_1 = _c.sent();\n                    return [4 /*yield*/, connection.confirmTransaction(txid_1)];\n                case 9:\n                    _c.sent();\n                    _c.label = 10;\n                case 10:\n                    txs_1_1 = txs_1.next();\n                    return [3 /*break*/, 5];\n                case 11: return [3 /*break*/, 14];\n                case 12:\n                    e_1_1 = _c.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3 /*break*/, 14];\n                case 13:\n                    try {\n                        if (txs_1_1 && !txs_1_1.done && (_b = txs_1.return)) _b.call(txs_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                    return [7 /*endfinally*/];\n                case 14:\n                    ix = ixFromRust(post_vaa_ix(bridge_id, payer, signature_set.publicKey.toString(), vaa));\n                    transaction = new Transaction().add(ix);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 15:\n                    blockhash = (_c.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payer);\n                    return [4 /*yield*/, signTransaction(transaction)];\n                case 16:\n                    signed = _c.sent();\n                    return [4 /*yield*/, connection.sendRawTransaction(signed.serialize())];\n                case 17:\n                    txid = _c.sent();\n                    return [4 /*yield*/, connection.confirmTransaction(txid)];\n                case 18:\n                    _c.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getBridgeState(connection, bridge_id) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, parse_state, state_address, bridge_state, acc;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    _a = _b.sent(), parse_state = _a.parse_state, state_address = _a.state_address;\n                    bridge_state = new PublicKey(state_address(bridge_id));\n                    return [4 /*yield*/, connection.getAccountInfo(bridge_state)];\n                case 2:\n                    acc = _b.sent();\n                    if ((acc === null || acc === void 0 ? void 0 : acc.data) === undefined) {\n                        throw new Error(\"bridge state not found\");\n                    }\n                    return [2 /*return*/, parse_state(new Uint8Array(acc === null || acc === void 0 ? void 0 : acc.data))];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar coreWasms = {\n    bundler: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./core/bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n    node: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./core-node/bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n};\nvar migrationWasms = {\n    bundler: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./migration/wormhole_migration\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n    node: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./migration-node/wormhole_migration\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n};\nvar nftWasms = {\n    bundler: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./nft/nft_bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n    node: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./nft-node/nft_bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n};\nvar tokenWasms = {\n    bundler: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./token/token_bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n    node: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, import(\"./token-node/token_bridge\")];\n            case 1: return [2 /*return*/, _a.sent()];\n        }\n    }); }); },\n};\nvar importDefaultCoreWasm = coreWasms.bundler;\nvar importDefaultMigrationWasm = migrationWasms.bundler;\nvar importDefaultNftWasm = nftWasms.bundler;\nvar importDefaultTokenWasm = tokenWasms.bundler;\nexport function setDefaultWasm(type) {\n    importDefaultCoreWasm = coreWasms[type];\n    importDefaultMigrationWasm = migrationWasms[type];\n    importDefaultNftWasm = nftWasms[type];\n    importDefaultTokenWasm = tokenWasms[type];\n}\nexport function importCoreWasm() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importDefaultCoreWasm()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function importMigrationWasm() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importDefaultMigrationWasm()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function importNftWasm() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importDefaultNftWasm()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function importTokenWasm() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importDefaultTokenWasm()];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Keypair, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { MsgExecuteContract } from \"@terra-money/terra.js\";\nimport { isNativeDenom } from \"..\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { getBridgeFeeIx, ixFromRust } from \"../solana\";\nimport { importTokenWasm } from \"../solana/wasm\";\nimport { createNonce } from \"../utils/createNonce\";\nexport function attestFromEth(tokenBridgeAddress, signer, tokenAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.attestToken(tokenAddress, createNonce())];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function attestFromTerra(tokenBridgeAddress, walletAddress, asset) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nonce, isNativeAsset;\n        return __generator(this, function (_a) {\n            nonce = Math.round(Math.random() * 100000);\n            isNativeAsset = isNativeDenom(asset);\n            return [2 /*return*/, new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                    create_asset_meta: {\n                        asset_info: isNativeAsset\n                            ? {\n                                native_token: { denom: asset },\n                            }\n                            : {\n                                token: {\n                                    contract_addr: asset,\n                                },\n                            },\n                        nonce: nonce,\n                    },\n                })];\n        });\n    });\n}\nexport function attestFromSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, mintAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nonce, transferIx, attest_ix, messageKey, ix, transaction, blockhash;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    nonce = createNonce().readUInt32LE(0);\n                    return [4 /*yield*/, getBridgeFeeIx(connection, bridgeAddress, payerAddress)];\n                case 1:\n                    transferIx = _a.sent();\n                    return [4 /*yield*/, importTokenWasm()];\n                case 2:\n                    attest_ix = (_a.sent()).attest_ix;\n                    messageKey = Keypair.generate();\n                    ix = ixFromRust(attest_ix(tokenBridgeAddress, bridgeAddress, payerAddress, messageKey.publicKey.toString(), mintAddress, nonce));\n                    transaction = new Transaction().add(transferIx, ix);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 3:\n                    blockhash = (_a.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    transaction.partialSign(messageKey);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey, Transaction } from \"@solana/web3.js\";\nimport { MsgExecuteContract } from \"@terra-money/terra.js\";\nimport { fromUint8Array } from \"js-base64\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { ixFromRust } from \"../solana\";\nimport { importTokenWasm } from \"../solana/wasm\";\nexport function createWrappedOnEth(tokenBridgeAddress, signer, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.createWrapped(signedVAA)];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function createWrappedOnTerra(tokenBridgeAddress, walletAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                    submit_vaa: {\n                        data: fromUint8Array(signedVAA),\n                    },\n                })];\n        });\n    });\n}\nexport function createWrappedOnSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var create_wrapped_ix, ix, transaction, blockhash;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    create_wrapped_ix = (_a.sent()).create_wrapped_ix;\n                    ix = ixFromRust(create_wrapped_ix(tokenBridgeAddress, bridgeAddress, payerAddress, signedVAA));\n                    transaction = new Transaction().add(ix);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 2:\n                    blockhash = (_a.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey } from \"@solana/web3.js\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { fromUint8Array } from \"js-base64\";\nimport { importTokenWasm } from \"../solana/wasm\";\n/**\n * Returns a foreign asset address on Ethereum for a provided native chain and asset address, AddressZero if it does not exist\n * @param tokenBridgeAddress\n * @param provider\n * @param originChain\n * @param originAsset zero pad to 32 bytes\n * @returns\n */\nexport function getForeignAssetEth(tokenBridgeAddress, provider, originChain, originAsset) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenBridge, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    tokenBridge = Bridge__factory.connect(tokenBridgeAddress, provider);\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, tokenBridge.wrappedAsset(originChain, originAsset)];\n                case 2: return [2 /*return*/, _a.sent()];\n                case 3:\n                    e_1 = _a.sent();\n                    return [2 /*return*/, null];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function getForeignAssetTerra(tokenBridgeAddress, client, originChain, originAsset) {\n    return __awaiter(this, void 0, void 0, function () {\n        var result, e_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, client.wasm.contractQuery(tokenBridgeAddress, {\n                            wrapped_registry: {\n                                chain: originChain,\n                                address: fromUint8Array(originAsset),\n                            },\n                        })];\n                case 1:\n                    result = _a.sent();\n                    return [2 /*return*/, result.address];\n                case 2:\n                    e_2 = _a.sent();\n                    return [2 /*return*/, null];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Returns a foreign asset address on Solana for a provided native chain and asset address\n * @param connection\n * @param tokenBridgeAddress\n * @param originChain\n * @param originAsset zero pad to 32 bytes\n * @returns\n */\nexport function getForeignAssetSolana(connection, tokenBridgeAddress, originChain, originAsset) {\n    return __awaiter(this, void 0, void 0, function () {\n        var wrapped_address, wrappedAddress, wrappedAddressPK, wrappedAssetAccountInfo;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    wrapped_address = (_a.sent()).wrapped_address;\n                    wrappedAddress = wrapped_address(tokenBridgeAddress, originAsset, originChain);\n                    wrappedAddressPK = new PublicKey(wrappedAddress);\n                    return [4 /*yield*/, connection.getAccountInfo(wrappedAddressPK)];\n                case 2:\n                    wrappedAssetAccountInfo = _a.sent();\n                    return [2 /*return*/, wrappedAssetAccountInfo ? wrappedAddressPK.toString() : null];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { getSignedVAAHash } from \"../bridge\";\nimport { importCoreWasm } from \"../solana/wasm\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport axios from \"axios\";\nimport { redeemOnTerra } from \".\";\nexport function getIsTransferCompletedEth(tokenBridgeAddress, provider, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenBridge, signedVAAHash;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    tokenBridge = Bridge__factory.connect(tokenBridgeAddress, provider);\n                    return [4 /*yield*/, getSignedVAAHash(signedVAA)];\n                case 1:\n                    signedVAAHash = _a.sent();\n                    return [4 /*yield*/, tokenBridge.isTransferCompleted(signedVAAHash)];\n                case 2: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function getIsTransferCompletedTerra(tokenBridgeAddress, signedVAA, walletAddress, client, gasPriceUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n        var msg, gasPrices, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, redeemOnTerra(tokenBridgeAddress, walletAddress, signedVAA)];\n                case 1:\n                    msg = _a.sent();\n                    return [4 /*yield*/, axios.get(gasPriceUrl).then(function (result) { return result.data; })];\n                case 2:\n                    gasPrices = _a.sent();\n                    _a.label = 3;\n                case 3:\n                    _a.trys.push([3, 5, , 6]);\n                    return [4 /*yield*/, client.tx.estimateFee(walletAddress, [msg], {\n                            memo: \"already redeemed calculation\",\n                            feeDenoms: [\"uluna\"],\n                            gasPrices: gasPrices,\n                        })];\n                case 4:\n                    _a.sent();\n                    return [3 /*break*/, 6];\n                case 5:\n                    e_1 = _a.sent();\n                    // redeemed if the VAA was already executed\n                    return [2 /*return*/, e_1.response.data.error.includes(\"VaaAlreadyExecuted\")];\n                case 6: return [2 /*return*/, false];\n            }\n        });\n    });\n}\nexport function getIsTransferCompletedSolana(tokenBridgeAddress, signedVAA, connection) {\n    return __awaiter(this, void 0, void 0, function () {\n        var claim_address, claimAddress, claimInfo;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    claim_address = (_a.sent()).claim_address;\n                    return [4 /*yield*/, claim_address(tokenBridgeAddress, signedVAA)];\n                case 2:\n                    claimAddress = _a.sent();\n                    return [4 /*yield*/, connection.getAccountInfo(new PublicKey(claimAddress), \"confirmed\")];\n                case 3:\n                    claimInfo = _a.sent();\n                    return [2 /*return*/, !!claimInfo];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey } from \"@solana/web3.js\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { importTokenWasm } from \"../solana/wasm\";\n/**\n * Returns whether or not an asset address on Ethereum is a wormhole wrapped asset\n * @param tokenBridgeAddress\n * @param provider\n * @param assetAddress\n * @returns\n */\nexport function getIsWrappedAssetEth(tokenBridgeAddress, provider, assetAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenBridge;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!assetAddress)\n                        return [2 /*return*/, false];\n                    tokenBridge = Bridge__factory.connect(tokenBridgeAddress, provider);\n                    return [4 /*yield*/, tokenBridge.isWrappedAsset(assetAddress)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function getIsWrappedAssetTerra(tokenBridgeAddress, wallet, assetAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, false];\n        });\n    });\n}\n/**\n * Returns whether or not an asset on Solana is a wormhole wrapped asset\n * @param connection\n * @param tokenBridgeAddress\n * @param mintAddress\n * @returns\n */\nexport function getIsWrappedAssetSol(connection, tokenBridgeAddress, mintAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var wrapped_meta_address, wrappedMetaAddress, wrappedMetaAddressPK, wrappedMetaAccountInfo;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!mintAddress)\n                        return [2 /*return*/, false];\n                    return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    wrapped_meta_address = (_a.sent()).wrapped_meta_address;\n                    wrappedMetaAddress = wrapped_meta_address(tokenBridgeAddress, new PublicKey(mintAddress).toBytes());\n                    wrappedMetaAddressPK = new PublicKey(wrappedMetaAddress);\n                    return [4 /*yield*/, connection.getAccountInfo(wrappedMetaAddressPK)];\n                case 2:\n                    wrappedMetaAccountInfo = _a.sent();\n                    return [2 /*return*/, !!wrappedMetaAccountInfo];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PublicKey } from \"@solana/web3.js\";\nimport { arrayify, zeroPad } from \"ethers/lib/utils\";\nimport { TokenImplementation__factory } from \"../ethers-contracts\";\nimport { importTokenWasm } from \"../solana/wasm\";\nimport { buildNativeId, canonicalAddress, isNativeDenom } from \"../terra\";\nimport { CHAIN_ID_SOLANA, CHAIN_ID_TERRA } from \"../utils\";\nimport { getIsWrappedAssetEth } from \"./getIsWrappedAsset\";\n/**\n * Returns a origin chain and asset address on {originChain} for a provided Wormhole wrapped address\n * @param tokenBridgeAddress\n * @param provider\n * @param wrappedAddress\n * @returns\n */\nexport function getOriginalAssetEth(tokenBridgeAddress, provider, wrappedAddress, lookupChainId) {\n    return __awaiter(this, void 0, void 0, function () {\n        var isWrapped, token, chainId, assetAddress;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getIsWrappedAssetEth(tokenBridgeAddress, provider, wrappedAddress)];\n                case 1:\n                    isWrapped = _a.sent();\n                    if (!isWrapped) return [3 /*break*/, 4];\n                    token = TokenImplementation__factory.connect(wrappedAddress, provider);\n                    return [4 /*yield*/, token.chainId()];\n                case 2:\n                    chainId = (_a.sent());\n                    return [4 /*yield*/, token.nativeContract()];\n                case 3:\n                    assetAddress = _a.sent();\n                    return [2 /*return*/, {\n                            isWrapped: true,\n                            chainId: chainId,\n                            assetAddress: arrayify(assetAddress),\n                        }];\n                case 4: return [2 /*return*/, {\n                        isWrapped: false,\n                        chainId: lookupChainId,\n                        assetAddress: zeroPad(arrayify(wrappedAddress), 32),\n                    }];\n            }\n        });\n    });\n}\nexport function getOriginalAssetTerra(client, wrappedAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var result, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (isNativeDenom(wrappedAddress)) {\n                        return [2 /*return*/, {\n                                isWrapped: false,\n                                chainId: CHAIN_ID_TERRA,\n                                assetAddress: buildNativeId(wrappedAddress),\n                            }];\n                    }\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, client.wasm.contractQuery(wrappedAddress, {\n                            wrapped_asset_info: {},\n                        })];\n                case 2:\n                    result = _a.sent();\n                    if (result) {\n                        return [2 /*return*/, {\n                                isWrapped: true,\n                                chainId: result.asset_chain,\n                                assetAddress: new Uint8Array(Buffer.from(result.asset_address, \"base64\")),\n                            }];\n                    }\n                    return [3 /*break*/, 4];\n                case 3:\n                    e_1 = _a.sent();\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/, {\n                        isWrapped: false,\n                        chainId: CHAIN_ID_TERRA,\n                        assetAddress: zeroPad(canonicalAddress(wrappedAddress), 32),\n                    }];\n            }\n        });\n    });\n}\n/**\n * Returns a origin chain and asset address on {originChain} for a provided Wormhole wrapped address\n * @param connection\n * @param tokenBridgeAddress\n * @param mintAddress\n * @returns\n */\nexport function getOriginalAssetSol(connection, tokenBridgeAddress, mintAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, parse_wrapped_meta, wrapped_meta_address, wrappedMetaAddress, wrappedMetaAddressPK, wrappedMetaAccountInfo, parsed;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!mintAddress) return [3 /*break*/, 3];\n                    return [4 /*yield*/, importTokenWasm()];\n                case 1:\n                    _a = _b.sent(), parse_wrapped_meta = _a.parse_wrapped_meta, wrapped_meta_address = _a.wrapped_meta_address;\n                    wrappedMetaAddress = wrapped_meta_address(tokenBridgeAddress, new PublicKey(mintAddress).toBytes());\n                    wrappedMetaAddressPK = new PublicKey(wrappedMetaAddress);\n                    return [4 /*yield*/, connection.getAccountInfo(wrappedMetaAddressPK)];\n                case 2:\n                    wrappedMetaAccountInfo = _b.sent();\n                    if (wrappedMetaAccountInfo) {\n                        parsed = parse_wrapped_meta(wrappedMetaAccountInfo.data);\n                        return [2 /*return*/, {\n                                isWrapped: true,\n                                chainId: parsed.chain,\n                                assetAddress: parsed.token_address,\n                            }];\n                    }\n                    _b.label = 3;\n                case 3:\n                    try {\n                        return [2 /*return*/, {\n                                isWrapped: false,\n                                chainId: CHAIN_ID_SOLANA,\n                                assetAddress: new PublicKey(mintAddress).toBytes(),\n                            }];\n                    }\n                    catch (e) { }\n                    return [2 /*return*/, {\n                            isWrapped: false,\n                            chainId: CHAIN_ID_SOLANA,\n                            assetAddress: new Uint8Array(32),\n                        }];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { AccountLayout, Token, TOKEN_PROGRAM_ID, u64 } from \"@solana/spl-token\";\nimport { Keypair, PublicKey, SystemProgram, Transaction, } from \"@solana/web3.js\";\nimport { MsgExecuteContract } from \"@terra-money/terra.js\";\nimport { fromUint8Array } from \"js-base64\";\nimport { Bridge__factory } from \"../ethers-contracts\";\nimport { ixFromRust } from \"../solana\";\nimport { importCoreWasm, importTokenWasm } from \"../solana/wasm\";\nimport { CHAIN_ID_SOLANA, WSOL_ADDRESS, WSOL_DECIMALS, MAX_VAA_DECIMALS, } from \"../utils\";\nimport { hexToNativeString } from \"../utils/array\";\nimport { parseTransferPayload } from \"../utils/parseVaa\";\nexport function redeemOnEth(tokenBridgeAddress, signer, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.completeTransfer(signedVAA)];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function redeemOnEthNative(tokenBridgeAddress, signer, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.completeTransferAndUnwrapETH(signedVAA)];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function redeemOnTerra(tokenBridgeAddress, walletAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                    submit_vaa: {\n                        data: fromUint8Array(signedVAA),\n                    },\n                })];\n        });\n    });\n}\nexport function redeemAndUnwrapOnSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parse_vaa, complete_transfer_native_ix, parsedVAA, parsedPayload, targetAddress, targetPublicKey, targetAmount, rentBalance, mintPublicKey, payerPublicKey, ancillaryKeypair, completeTransferIx, createAncillaryAccountIx, initAccountIx, balanceTransferIx, closeAccountIx, blockhash, transaction;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    parse_vaa = (_a.sent()).parse_vaa;\n                    return [4 /*yield*/, importTokenWasm()];\n                case 2:\n                    complete_transfer_native_ix = (_a.sent()).complete_transfer_native_ix;\n                    parsedVAA = parse_vaa(signedVAA);\n                    parsedPayload = parseTransferPayload(Buffer.from(new Uint8Array(parsedVAA.payload)));\n                    targetAddress = hexToNativeString(parsedPayload.targetAddress, CHAIN_ID_SOLANA);\n                    if (!targetAddress) {\n                        throw new Error(\"Failed to read the target address.\");\n                    }\n                    targetPublicKey = new PublicKey(targetAddress);\n                    targetAmount = parsedPayload.amount *\n                        BigInt(WSOL_DECIMALS - MAX_VAA_DECIMALS) *\n                        BigInt(10);\n                    return [4 /*yield*/, Token.getMinBalanceRentForExemptAccount(connection)];\n                case 3:\n                    rentBalance = _a.sent();\n                    mintPublicKey = new PublicKey(WSOL_ADDRESS);\n                    payerPublicKey = new PublicKey(payerAddress);\n                    ancillaryKeypair = Keypair.generate();\n                    completeTransferIx = ixFromRust(complete_transfer_native_ix(tokenBridgeAddress, bridgeAddress, payerAddress, signedVAA));\n                    createAncillaryAccountIx = SystemProgram.createAccount({\n                        fromPubkey: payerPublicKey,\n                        newAccountPubkey: ancillaryKeypair.publicKey,\n                        lamports: rentBalance,\n                        space: AccountLayout.span,\n                        programId: TOKEN_PROGRAM_ID,\n                    });\n                    return [4 /*yield*/, Token.createInitAccountInstruction(TOKEN_PROGRAM_ID, mintPublicKey, ancillaryKeypair.publicKey, payerPublicKey)];\n                case 4:\n                    initAccountIx = _a.sent();\n                    balanceTransferIx = Token.createTransferInstruction(TOKEN_PROGRAM_ID, targetPublicKey, ancillaryKeypair.publicKey, payerPublicKey, [], new u64(targetAmount.toString(16), 16));\n                    closeAccountIx = Token.createCloseAccountInstruction(TOKEN_PROGRAM_ID, ancillaryKeypair.publicKey, //account to close\n                    payerPublicKey, //Remaining funds destination\n                    payerPublicKey, //authority\n                    []);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 5:\n                    blockhash = (_a.sent()).blockhash;\n                    transaction = new Transaction();\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    transaction.add(completeTransferIx);\n                    transaction.add(createAncillaryAccountIx);\n                    transaction.add(initAccountIx);\n                    transaction.add(balanceTransferIx);\n                    transaction.add(closeAccountIx);\n                    transaction.partialSign(ancillaryKeypair);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\nexport function redeemOnSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, signedVAA) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parse_vaa, parsedVAA, isSolanaNative, _a, complete_transfer_wrapped_ix, complete_transfer_native_ix, ixs, transaction, blockhash;\n        var _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0: return [4 /*yield*/, importCoreWasm()];\n                case 1:\n                    parse_vaa = (_c.sent()).parse_vaa;\n                    parsedVAA = parse_vaa(signedVAA);\n                    isSolanaNative = Buffer.from(new Uint8Array(parsedVAA.payload)).readUInt16BE(65) ===\n                        CHAIN_ID_SOLANA;\n                    return [4 /*yield*/, importTokenWasm()];\n                case 2:\n                    _a = _c.sent(), complete_transfer_wrapped_ix = _a.complete_transfer_wrapped_ix, complete_transfer_native_ix = _a.complete_transfer_native_ix;\n                    ixs = [];\n                    if (isSolanaNative) {\n                        ixs.push(ixFromRust(complete_transfer_native_ix(tokenBridgeAddress, bridgeAddress, payerAddress, signedVAA)));\n                    }\n                    else {\n                        ixs.push(ixFromRust(complete_transfer_wrapped_ix(tokenBridgeAddress, bridgeAddress, payerAddress, signedVAA)));\n                    }\n                    transaction = (_b = new Transaction()).add.apply(_b, __spreadArray([], __read(ixs)));\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 3:\n                    blockhash = (_c.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { AccountLayout, Token, TOKEN_PROGRAM_ID, u64 } from \"@solana/spl-token\";\nimport { Keypair, PublicKey, SystemProgram, Transaction, } from \"@solana/web3.js\";\nimport { MsgExecuteContract } from \"@terra-money/terra.js\";\nimport { isNativeDenom } from \"..\";\nimport { Bridge__factory, TokenImplementation__factory, } from \"../ethers-contracts\";\nimport { getBridgeFeeIx, ixFromRust } from \"../solana\";\nimport { importTokenWasm } from \"../solana/wasm\";\nimport { CHAIN_ID_SOLANA, createNonce, WSOL_ADDRESS } from \"../utils\";\nexport function getAllowanceEth(tokenBridgeAddress, tokenAddress, signer) {\n    return __awaiter(this, void 0, void 0, function () {\n        var token, signerAddress, allowance;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    token = TokenImplementation__factory.connect(tokenAddress, signer);\n                    return [4 /*yield*/, signer.getAddress()];\n                case 1:\n                    signerAddress = _a.sent();\n                    return [4 /*yield*/, token.allowance(signerAddress, tokenBridgeAddress)];\n                case 2:\n                    allowance = _a.sent();\n                    return [2 /*return*/, allowance];\n            }\n        });\n    });\n}\nexport function approveEth(tokenBridgeAddress, tokenAddress, signer, amount) {\n    return __awaiter(this, void 0, void 0, function () {\n        var token;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    token = TokenImplementation__factory.connect(tokenAddress, signer);\n                    return [4 /*yield*/, token.approve(tokenBridgeAddress, amount)];\n                case 1: return [4 /*yield*/, (_a.sent()).wait()];\n                case 2: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport function transferFromEth(tokenBridgeAddress, signer, tokenAddress, amount, recipientChain, recipientAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var fee, bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fee = 0;\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.transferTokens(tokenAddress, amount, recipientChain, recipientAddress, fee, createNonce())];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function transferFromEthNative(tokenBridgeAddress, signer, amount, recipientChain, recipientAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var fee, bridge, v, receipt;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fee = 0;\n                    bridge = Bridge__factory.connect(tokenBridgeAddress, signer);\n                    return [4 /*yield*/, bridge.wrapAndTransferETH(recipientChain, recipientAddress, fee, createNonce(), {\n                            value: amount,\n                        })];\n                case 1:\n                    v = _a.sent();\n                    return [4 /*yield*/, v.wait()];\n                case 2:\n                    receipt = _a.sent();\n                    return [2 /*return*/, receipt];\n            }\n        });\n    });\n}\nexport function transferFromTerra(walletAddress, tokenBridgeAddress, tokenAddress, amount, recipientChain, recipientAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nonce, isNativeAsset;\n        var _a;\n        return __generator(this, function (_b) {\n            nonce = Math.round(Math.random() * 100000);\n            isNativeAsset = isNativeDenom(tokenAddress);\n            return [2 /*return*/, isNativeAsset\n                    ? [\n                        new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                            deposit_tokens: {},\n                        }, (_a = {}, _a[tokenAddress] = amount, _a)),\n                        new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                            initiate_transfer: {\n                                asset: {\n                                    amount: amount,\n                                    info: {\n                                        native_token: {\n                                            denom: tokenAddress,\n                                        },\n                                    },\n                                },\n                                recipient_chain: recipientChain,\n                                recipient: Buffer.from(recipientAddress).toString(\"base64\"),\n                                fee: \"0\",\n                                nonce: nonce,\n                            },\n                        }, {}),\n                    ]\n                    : [\n                        new MsgExecuteContract(walletAddress, tokenAddress, {\n                            increase_allowance: {\n                                spender: tokenBridgeAddress,\n                                amount: amount,\n                                expires: {\n                                    never: {},\n                                },\n                            },\n                        }, {}),\n                        new MsgExecuteContract(walletAddress, tokenBridgeAddress, {\n                            initiate_transfer: {\n                                asset: {\n                                    amount: amount,\n                                    info: {\n                                        token: {\n                                            contract_addr: tokenAddress,\n                                        },\n                                    },\n                                },\n                                recipient_chain: recipientChain,\n                                recipient: Buffer.from(recipientAddress).toString(\"base64\"),\n                                fee: \"0\",\n                                nonce: nonce,\n                            },\n                        }, {}),\n                    ]];\n        });\n    });\n}\nexport function transferNativeSol(connection, bridgeAddress, tokenBridgeAddress, payerAddress, amount, targetAddress, targetChain) {\n    return __awaiter(this, void 0, void 0, function () {\n        var rentBalance, mintPublicKey, payerPublicKey, ancillaryKeypair, createAncillaryAccountIx, initialBalanceTransferIx, initAccountIx, _a, transfer_native_ix, approval_authority_address, nonce, fee, transferIx, approvalIx, messageKey, ix, closeAccountIx, blockhash, transaction;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, Token.getMinBalanceRentForExemptAccount(connection)];\n                case 1:\n                    rentBalance = _b.sent();\n                    mintPublicKey = new PublicKey(WSOL_ADDRESS);\n                    payerPublicKey = new PublicKey(payerAddress);\n                    ancillaryKeypair = Keypair.generate();\n                    createAncillaryAccountIx = SystemProgram.createAccount({\n                        fromPubkey: payerPublicKey,\n                        newAccountPubkey: ancillaryKeypair.publicKey,\n                        lamports: rentBalance,\n                        space: AccountLayout.span,\n                        programId: TOKEN_PROGRAM_ID,\n                    });\n                    initialBalanceTransferIx = SystemProgram.transfer({\n                        fromPubkey: payerPublicKey,\n                        lamports: Number(amount),\n                        toPubkey: ancillaryKeypair.publicKey,\n                    });\n                    return [4 /*yield*/, Token.createInitAccountInstruction(TOKEN_PROGRAM_ID, mintPublicKey, ancillaryKeypair.publicKey, payerPublicKey)];\n                case 2:\n                    initAccountIx = _b.sent();\n                    return [4 /*yield*/, importTokenWasm()];\n                case 3:\n                    _a = _b.sent(), transfer_native_ix = _a.transfer_native_ix, approval_authority_address = _a.approval_authority_address;\n                    nonce = createNonce().readUInt32LE(0);\n                    fee = BigInt(0);\n                    return [4 /*yield*/, getBridgeFeeIx(connection, bridgeAddress, payerAddress)];\n                case 4:\n                    transferIx = _b.sent();\n                    approvalIx = Token.createApproveInstruction(TOKEN_PROGRAM_ID, ancillaryKeypair.publicKey, new PublicKey(approval_authority_address(tokenBridgeAddress)), payerPublicKey, //owner\n                    [], new u64(amount.toString(16), 16));\n                    messageKey = Keypair.generate();\n                    ix = ixFromRust(transfer_native_ix(tokenBridgeAddress, bridgeAddress, payerAddress, messageKey.publicKey.toString(), ancillaryKeypair.publicKey.toString(), WSOL_ADDRESS, nonce, amount, fee, targetAddress, targetChain));\n                    closeAccountIx = Token.createCloseAccountInstruction(TOKEN_PROGRAM_ID, ancillaryKeypair.publicKey, //account to close\n                    payerPublicKey, //Remaining funds destination\n                    payerPublicKey, //authority\n                    []);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 5:\n                    blockhash = (_b.sent()).blockhash;\n                    transaction = new Transaction();\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    transaction.add(createAncillaryAccountIx);\n                    transaction.add(initialBalanceTransferIx);\n                    transaction.add(initAccountIx);\n                    transaction.add(transferIx, approvalIx, ix);\n                    transaction.add(closeAccountIx);\n                    transaction.partialSign(messageKey);\n                    transaction.partialSign(ancillaryKeypair);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\nexport function transferFromSolana(connection, bridgeAddress, tokenBridgeAddress, payerAddress, fromAddress, mintAddress, amount, targetAddress, targetChain, originAddress, originChain, fromOwnerAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nonce, fee, transferIx, _a, transfer_native_ix, transfer_wrapped_ix, approval_authority_address, approvalIx, messageKey, isSolanaNative, ix, transaction, blockhash;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    nonce = createNonce().readUInt32LE(0);\n                    fee = BigInt(0);\n                    return [4 /*yield*/, getBridgeFeeIx(connection, bridgeAddress, payerAddress)];\n                case 1:\n                    transferIx = _b.sent();\n                    return [4 /*yield*/, importTokenWasm()];\n                case 2:\n                    _a = _b.sent(), transfer_native_ix = _a.transfer_native_ix, transfer_wrapped_ix = _a.transfer_wrapped_ix, approval_authority_address = _a.approval_authority_address;\n                    approvalIx = Token.createApproveInstruction(TOKEN_PROGRAM_ID, new PublicKey(fromAddress), new PublicKey(approval_authority_address(tokenBridgeAddress)), new PublicKey(fromOwnerAddress || payerAddress), [], new u64(amount.toString(16), 16));\n                    messageKey = Keypair.generate();\n                    isSolanaNative = originChain === undefined || originChain === CHAIN_ID_SOLANA;\n                    if (!isSolanaNative && !originAddress) {\n                        throw new Error(\"originAddress is required when specifying originChain\");\n                    }\n                    ix = ixFromRust(isSolanaNative\n                        ? transfer_native_ix(tokenBridgeAddress, bridgeAddress, payerAddress, messageKey.publicKey.toString(), fromAddress, mintAddress, nonce, amount, fee, targetAddress, targetChain)\n                        : transfer_wrapped_ix(tokenBridgeAddress, bridgeAddress, payerAddress, messageKey.publicKey.toString(), fromAddress, fromOwnerAddress || payerAddress, originChain, // checked by isSolanaNative\n                        originAddress, // checked by throw\n                        nonce, amount, fee, targetAddress, targetChain));\n                    transaction = new Transaction().add(transferIx, approvalIx, ix);\n                    return [4 /*yield*/, connection.getRecentBlockhash()];\n                case 3:\n                    blockhash = (_b.sent()).blockhash;\n                    transaction.recentBlockhash = blockhash;\n                    transaction.feePayer = new PublicKey(payerAddress);\n                    transaction.partialSign(messageKey);\n                    return [2 /*return*/, transaction];\n            }\n        });\n    });\n}\n","import { CHAIN_ID_BSC, CHAIN_ID_ETH, CHAIN_ID_SOLANA, CHAIN_ID_TERRA, CHAIN_ID_POLYGON, CHAIN_ID_ETHEREUM_ROPSTEN, CHAIN_ID_AVAX, } from \"./consts\";\nimport { humanAddress, canonicalAddress, isNativeDenom } from \"../terra\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { hexValue, hexZeroPad, stripZeros } from \"ethers/lib/utils\";\nimport { arrayify, zeroPad } from \"@ethersproject/bytes\";\nexport var isEVMChain = function (chainId) {\n    return (chainId === CHAIN_ID_ETH ||\n        chainId === CHAIN_ID_BSC ||\n        chainId === CHAIN_ID_ETHEREUM_ROPSTEN ||\n        chainId === CHAIN_ID_AVAX ||\n        chainId === CHAIN_ID_POLYGON);\n};\nexport var isHexNativeTerra = function (h) { return h.startsWith(\"01\"); };\nexport var nativeTerraHexToDenom = function (h) {\n    return Buffer.from(stripZeros(hexToUint8Array(h.substr(2)))).toString(\"ascii\");\n};\nexport var uint8ArrayToHex = function (a) {\n    return Buffer.from(a).toString(\"hex\");\n};\nexport var hexToUint8Array = function (h) {\n    return new Uint8Array(Buffer.from(h, \"hex\"));\n};\nexport var hexToNativeString = function (h, c) {\n    try {\n        return !h\n            ? undefined\n            : c === CHAIN_ID_SOLANA\n                ? new PublicKey(hexToUint8Array(h)).toString()\n                : isEVMChain(c)\n                    ? hexZeroPad(hexValue(hexToUint8Array(h)), 20)\n                    : c === CHAIN_ID_TERRA\n                        ? isHexNativeTerra(h)\n                            ? nativeTerraHexToDenom(h)\n                            : humanAddress(hexToUint8Array(h.substr(24))) // terra expects 20 bytes, not 32\n                        : h;\n    }\n    catch (e) { }\n    return undefined;\n};\nexport var nativeToHexString = function (address, chain) {\n    if (!address || !chain) {\n        return null;\n    }\n    if (isEVMChain(chain)) {\n        return uint8ArrayToHex(zeroPad(arrayify(address), 32));\n    }\n    else if (chain === CHAIN_ID_SOLANA) {\n        return uint8ArrayToHex(zeroPad(new PublicKey(address).toBytes(), 32));\n    }\n    else if (chain === CHAIN_ID_TERRA) {\n        if (isNativeDenom(address)) {\n            return (\"01\" +\n                uint8ArrayToHex(zeroPad(new Uint8Array(Buffer.from(address, \"ascii\")), 31)));\n        }\n        else {\n            return uint8ArrayToHex(zeroPad(canonicalAddress(address), 32));\n        }\n    }\n    else {\n        return null;\n    }\n};\nexport var uint8ArrayToNative = function (a, chainId) {\n    return hexToNativeString(uint8ArrayToHex(a), chainId);\n};\n","export function createNonce() {\n    var nonceConst = Math.random() * 100000;\n    var nonceBuffer = Buffer.alloc(4);\n    nonceBuffer.writeUInt32LE(nonceConst, 0);\n    return nonceBuffer;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        logger.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nexport function _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nexport function _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","export const version = \"hash/5.5.0\";\n//# sourceMappingURL=_version.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\n//# sourceMappingURL=namehash.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\nlet anyGlobal = null;\ntry {\n    anyGlobal = window;\n    if (anyGlobal == null) {\n        throw new Error(\"try next\");\n    }\n}\ncatch (error) {\n    try {\n        anyGlobal = global;\n        if (anyGlobal == null) {\n            throw new Error(\"try next\");\n        }\n    }\n    catch (error) {\n        anyGlobal = {};\n    }\n}\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nexport var Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.5.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkey: Uint8Array): boolean {\n    return is_on_curve(pubkey) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (\n  property: string = 'publicKey',\n): BufferLayout.Layout => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): BufferLayout.Layout => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (property: string = 'string') => {\n  const rsl = BufferLayout.struct(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer: any, offset: any) => {\n    const data = _decode(buffer, offset);\n    return data['chars'].toString('utf8');\n  };\n\n  rsl.encode = (str: any, buffer: any, offset: any) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  (rsl as any).alloc = (str: any) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rsl;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct(\n    [publicKey('staker'), publicKey('withdrawer')],\n    property,\n  );\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = bs58.decode(instruction.data);\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: Buffer.from(accounts),\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n */\nexport type TransactionCtorFields = {\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash | null;\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? 0 : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator'),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS: {\n  [type in SystemInstructionType]: InstructionType;\n} = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport fetch from 'cross-fetch';\nimport type {Response} from 'cross-fetch';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {IWSRequestParams} from 'rpc-websockets/dist/lib/client';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: SimulatedTransactionAccountInfo[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          pick({\n            executable: boolean(),\n            owner: string(),\n            lamports: number(),\n            data: array(string()),\n            rentEpoch: optional(number()),\n          }),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n */\nexport type ParsedConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n */\nexport type ParsedConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger with signatures only\n */\nexport type ConfirmedBlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: (url: string, options: any) => Promise<Response>;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = (url: string, options: any) => {\n      return new Promise<Response>((resolve, reject) => {\n        fetchMiddleware(url, options, async (url: string, options: any) => {\n          try {\n            resolve(await fetch(url, options));\n          } catch (error) {\n            reject(error);\n          }\n        });\n      });\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlockSignatures\" message\n */\nconst GetConfirmedBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetParsedConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch infor for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @internal\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string; // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string; // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @internal\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * @private\n */\ntype SlotUpdateSubscriptionInfo = {\n  callback: SlotUpdateCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * @internal\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature; // TransactionSignature as a base 58 string\n  callback: SignatureSubscriptionCallback;\n  options?: SignatureSubscriptionOptions;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * @private\n */\ntype LogsSubscriptionInfo = {\n  callback: LogsCallback;\n  filter: LogsFilter;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  commitment?: Commitment;\n};\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: Function,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retring calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    recentBlockhash: Blockhash | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    recentBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ _accountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _accountChangeSubscriptions: {\n    [id: number]: AccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _programAccountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _programAccountChangeSubscriptions: {\n    [id: number]: ProgramAccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _rootSubscriptionCounter: number = 0;\n  /** @internal */ _rootSubscriptions: {\n    [id: number]: RootSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _signatureSubscriptionCounter: number = 0;\n  /** @internal */ _signatureSubscriptions: {\n    [id: number]: SignatureSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotSubscriptionCounter: number = 0;\n  /** @internal */ _slotSubscriptions: {\n    [id: number]: SlotSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _logsSubscriptionCounter: number = 0;\n  /** @internal */ _logsSubscriptions: {\n    [id: number]: LogsSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotUpdateSubscriptionCounter: number = 0;\n  /** @internal */ _slotUpdateSubscriptions: {\n    [id: number]: SlotUpdateSubscriptionInfo;\n  } = {};\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve(null);\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch a processed transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetConfirmedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const result = await this.getBlock(slot, {commitment});\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const result = await this.getTransaction(signature, {commitment});\n    if (!result) return result;\n    const {message, signatures} = result.transaction;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      transaction = transactionOrMessage;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  async _subscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n    rpcArgs: IWSRequestParams,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        if (err instanceof Error) {\n          console.error(\n            `${rpcMethod} error for argument`,\n            rpcArgs,\n            err.message,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async _unsubscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._programAccountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._rootSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._signatureSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotUpdateSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(\n      Number,\n    );\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      slotUpdateKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0 &&\n      logsKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          this._rpcWebSocket.close();\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64', {\n          filters: sub.filters,\n        }),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args: any[] = [sub.signature];\n      if (sub.options) args.push(sub.options);\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n      if (typeof sub.filter === 'object') {\n        filter = {mentions: [sub.filter.toString()]};\n      } else {\n        filter = sub.filter;\n      }\n      this._subscribe(\n        sub,\n        'logsSubscribe',\n        this._buildArgs([filter], sub.commitment),\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const res = create(notification, AccountNotificationResult);\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n  async removeOnLogsListener(id: number): Promise<void> {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const res = create(notification, SlotUpdateNotificationResult);\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): number {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotUpdateListener(id: number): Promise<void> {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback(\n            {\n              type: 'received',\n            },\n            res.result.context,\n          );\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n          this._updateSubscriptions();\n          sub.callback(\n            {\n              type: 'status',\n              result: res.result.value,\n            },\n            res.result.context,\n          );\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {commitment},\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n}\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","export function promiseTimeout<T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n): Promise<T | null> {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  const timeoutPromise: Promise<null> = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then((result: T | null) => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        publicKeyOffset,\n        publicKeyInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  | 'AuthorizeWithSeed'\n  | 'Authorize'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Split'\n  | 'Withdraw'\n  | 'Merge';\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS: {\n  [type in StakeInstructionType]: InstructionType;\n} = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n      Layout.rustString('authoritySeed'),\n      Layout.publicKey('authorityOwner'),\n    ]),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `std::mem::size_of::<StakeState>()`:\n   * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: authorizedPubkey,\n        newAccountPubkey: splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n\n    return transaction.add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = {\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n};\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedVoterPubkey'),\n  Layout.publicKey('authorizedWithdrawerPubkey'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64('epoch'),\n  BufferLayout.nu64('credits'),\n  BufferLayout.nu64('lastEpochCredits'),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedVoterPubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  commission: number;\n  votes: Array<Lockout>;\n  rootSlot: number | null;\n  epoch: number;\n  credits: number;\n  lastEpochCredits: number;\n  epochCredits: Array<EpochCredits>;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedVoterPubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  commission: number;\n  votes: Array<Lockout>;\n  rootSlot: number | null;\n  epoch: number;\n  credits: number;\n  lastEpochCredits: number;\n  epochCredits: Array<EpochCredits>;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedVoterPubkey = args.authorizedVoterPubkey;\n    this.authorizedWithdrawerPubkey = args.authorizedWithdrawerPubkey;\n    this.commission = args.commission;\n    this.votes = args.votes;\n    this.rootSlot = args.rootSlot;\n    this.epoch = args.epoch;\n    this.credits = args.credits;\n    this.lastEpochCredits = args.lastEpochCredits;\n    this.epochCredits = args.epochCredits;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const va = VoteAccountLayout.decode(toBuffer(buffer), 0);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedVoterPubkey: new PublicKey(va.authorizedVoterPubkey),\n      authorizedWithdrawerPubkey: new PublicKey(va.authorizedWithdrawerPubkey),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      epoch: va.epoch,\n      credits: va.credits,\n      lastEpochCredits: va.lastEpochCredits,\n      epochCredits: va.epochCredits,\n    });\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {Connection} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","module.exports = require('./lib/axios');","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) {\n                        console.log(error);\n                    }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n"],"names":["getEmitterAddressEth","contractAddress","Buffer","from","zeroPad","arrayify","toString","parseSequenceFromLogEth","receipt","bridgeAddress","bridgeLog","logs","filter","l","address","Implementation__factory","parseLog","args","sequence","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","_abi","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","components","_bytecode","Bridge__factory","_super","signer","deploy","overrides","getDeployTransaction","attach","connect","createInterface","utils","signerOrProvider","Contract","bytecode","abi","ContractFactory","TokenImplementation__factory","ChainID","__assign","assign","t","s","i","n","arguments","length","apply","__values","o","Symbol","iterator","m","next","value","done","baseMessageID","emitterChain","emitterAddress","MessageID","message","writer","_m0","uint32","int32","string","uint64","object","undefined","baseGetSignedVAARequest","GetSignedVAARequest","messageId","fork","ldelim","baseGetSignedVAAResponse","GetSignedVAAResponse","input","reader","end","len","pos","vaaBytes","Uint8Array","tag","bytes","skipType","baseGetLastHeartbeatsRequest","GetLastHeartbeatsRequest","_","baseGetLastHeartbeatsResponse","GetLastHeartbeatsResponse","entries","push","GetLastHeartbeatsResponse_Entry","decode","baseGetLastHeartbeatsResponse_Entry","verifiedGuardianAddr","p2pNodeAddr","encode","rawHeartbeat","Heartbeat","fromJSON","toJSON","obj","fromPartial","baseGetCurrentGuardianSetRequest","GetCurrentGuardianSetRequest","baseGetCurrentGuardianSetResponse","GetCurrentGuardianSetResponse","guardianSet","GuardianSet","baseGuardianSet","index","addresses","e_4","_a","_b","_c","v","e_4_1","error","return","e_5","Number","e","e_5_1","map","e_6","e_6_1","PublicRPCServiceClientImpl","rpc","GetLastHeartbeats","bind","GetSignedVAA","GetCurrentGuardianSet","request","metadata","unary","PublicRPCServiceGetLastHeartbeatsDesc","PublicRPCServiceGetSignedVAADesc","PublicRPCServiceGetCurrentGuardianSetDesc","PublicRPCServiceDesc","serviceName","methodName","service","requestStream","responseStream","requestType","serializeBinary","finish","responseType","deserializeBinary","data","toObject","GrpcWebImpl","host","options","methodDesc","_request","_this","maybeCombinedMetadata","BrowserHeaders","headersMap","Promise","resolve","reject","grpc","transport","debug","onEnd","response","status","err","Error","statusMessage","code","trailers","globalThis","self","window","global","atob","btoa","Long","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","result","then","__generator","body","f","y","g","label","sent","trys","ops","verb","op","pop","getSignedVAA","extraGrpcOpts","ixFromRust","keys","accounts","accountMetaFromRust","TransactionInstruction","programId","PublicKey","program_id","meta","pubkey","isSigner","is_signer","isWritable","is_writable","postVaa","connection","signTransaction","bridge_id","payer","vaa","guardian_set_address","parse_guardian_set","verify_signatures_ix","post_vaa_ix","bridge_state","guardian_addr","acc","guardian_data","signature_set","txs","txs_1","txs_1_1","tx","ixs","transaction_1","blockhash_1","signed_1","txid_1","e_1_1","ix","transaction","blockhash","signed","txid","e_1","importCoreWasm","getBridgeState","guardian_set_index","getAccountInfo","Keypair","publicKey","Transaction","add","getRecentBlockhash","recentBlockhash","feePayer","partialSign","sendRawTransaction","serialize","confirmTransaction","parse_state","state_address","coreWasms","bundler","node","tokenWasms","importDefaultCoreWasm","importDefaultTokenWasm","importTokenWasm","attestFromEth","tokenBridgeAddress","tokenAddress","attestToken","createNonce","wait","createWrappedOnSolana","payerAddress","signedVAA","create_wrapped_ix","getForeignAssetSolana","originChain","originAsset","wrapped_address","wrappedAddress","wrappedAddressPK","getIsTransferCompletedSolana","claimAddress","claim_address","getIsWrappedAssetEth","provider","assetAddress","isWrappedAsset","getOriginalAssetEth","lookupChainId","token","chainId","nativeContract","isWrapped","__read","r","ar","__spreadArray","to","il","j","redeemOnSolana","parse_vaa","parsedVAA","isSolanaNative","complete_transfer_wrapped_ix","complete_transfer_native_ix","payload","readUInt16BE","CHAIN_ID_SOLANA","approveEth","amount","approve","transferFromEth","recipientChain","recipientAddress","transferTokens","transferFromEthNative","wrapAndTransferETH","hexToUint8Array","h","nonceConst","Math","random","nonceBuffer","alloc","writeUInt32LE","toBigNumber","toBN","other","throwFault","fraction","decimals","HashZero","version","keccak256","concat","messagePrefix","domainFieldNames","logger","throwArgumentError","salt","boundsUpper","MaxUint256","mask","width","boundsLower","One","mul","NegativeOne","parseInt","root","checkInt","checkInts","arrayish","coerceArray","arg","copy","buffer","ArrayBuffer","isView","slice","isArray","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","convertUtf8","toBytes","text","encodeURI","c","charCodeAt","substr","fromBytes","fromCharCode","join","convertHex","Hex","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","key","defineProperty","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","a","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","hex","utf8","padding","pkcs7","pad","padder","strip","_arrayTest","module","exports","warn","assert","val","msg","equal","zero2","word","toHex","res","toArray","enc","replace","hi","lo","arr","minAssert","minUtils","getNAF","num","w","bits","naf","max","bitLength","fill","ws","k","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","computer","parseBytes","intFromLE","BaseCurve","conf","red","prime","zero","toRed","one","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","div","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","nafW","repr","jpoint","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","cmp","toJ","redNeg","ja","jb","tmp","eq","decodePoint","byteLength","pointFromX","encodeCompressed","_encode","compact","x","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","ShortCurve","Base","tinv","redInvm","zeroA","fromRed","threeA","sub","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","floor","u","x1","y1","x2","y2","q","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","split","ineg","pre","endoMul","JSON","parse","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","base","require$$0","short","require$$1","mont","edwards","curves","PresetCurve","hash","defineCurve","get","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","_init","seed","_update","_hmac","kmac","update","digest","reseed","addEnc","generate","temp","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","reason","getPrivate","umod","derive","sign","verify","signature","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","off","rmPadding","constructLength","octets","log","LN2","rlen","slen","toDER","backHalf","rand","EC","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","require$$2","require$$3","eddsa","BN","number","endian","isBN","words","wordSize","require","parseHex4Bits","parseHexByte","lowerBound","parseBase","str","start","min","left","right","_initNumber","_initArray","_parseHex","_parseBase","limbLen","limbPow","total","imuln","_iaddn","dest","_expand","size","_normSign","zeros","groupSizes","groupBases","smallMulTo","out","carry","ncarry","rword","maxJ","groupSize","groupBase","isZero","idivn","toNumber","ret","toBuffer","toArrayLike","ArrayType","reqLength","littleEndian","clz32","_countBits","_zeroBits","zeroBits","toTwos","abs","inotn","fromTwos","testn","notn","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","isub","comb10MulTo","mid","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","guessLen13b","conjugate","normalize13b","round","convert13b","stub","ph","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","maskedWords","ishrn","shln","ushln","shrn","imaskn","maskn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","dm","half","r2","egcd","A","B","C","D","yp","xp","im","jm","gcd","_invmp","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","ctx","convertTo","_forceRed","convertFrom","redShl","shl","_verify2","redIMul","_verify1","redISqr","sqrt","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","imulK","_strip","output","prev","mod3","nOne","lpow","inv","current","currentLen","UnicodeNormalizationForm","Utf8ErrorReason","inherits_browserModule","isSurrogatePair","htonl","zero8","ah","al","bh","bl","ch","cl","dh","dl","eh","el","BlockHash","pending","pendingTotal","blockSize","padLength","_delta8","_delta32","join32","_pad","_digest","rotr32","ch32","maj32","p32","common","shaCommon","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","W","toHex32","split32","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","Kh","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","Hash","inner","outer","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","info","warning","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","_log","logLevel","level","toLowerCase","console","levels","DEBUG","INFO","WARNING","makeError","params","errors","UNKNOWN_ERROR","messageDetails","stringify","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","MISSING_NEW","checkAbstract","censorship","permanent","globalLogger","addSlice","array","isInteger","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","isBytes","Struct","properties","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Enum","super","enum","Map","MAX_SEED_LENGTH","_bn","isPublicKeyData","decoded","bs58","equals","toBase58","fromPublicKey","seeds","publicKeyBytes","is_on_curve","seedsWithNonce","createProgramAddress","default","fields","naclLowLevel","nacl","chk","den","den2","den4","den6","neq25519","gf1","Account","secretKey","_keypair","BPF_LOADER_DEPRECATED_PROGRAM_ID","property","BufferLayout","rustString","rsl","_decode","chars","decodeLength","elem","encodeLength","rem_len","Message","header","accountKeys","instructions","indexToProgramIds","account","isAccountSigner","isAccountWritable","numRequiredSignatures","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","shortvec","instruction","programIdIndex","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","Layout","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","signData","byteArray","accountCount","dataSlice","messageArgs","DEFAULT_SIGNATURE","PACKET_DATA_SIZE","opts","signatures","nonceInfo","items","item","compileMessage","accountMetas","accountMeta","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","invariant","keyIndex","_compile","every","pair","serializeMessage","setSigners","signers","seen","uniqueSigners","_partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","config","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","span","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","SystemInstruction","typeIndex","instructionTypeLayout","ixType","layout","SYSTEM_INSTRUCTION_LAYOUTS","fromPubkey","newAccountPubkey","lamports","toPubkey","basePubkey","space","accountPubkey","authorized","noncePubkey","newAuthorizedPubkey","SystemProgram","expectedLength","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","balanceNeeded","programInfo","program","dataLayout","chunkSize","offset","transactions","REQUESTS_PER_SECOND","BPF_LOADER_PROGRAM_ID","BpfLoader","__self__","F","fetch","DOMException","support","Blob","viewClasses","isArrayBufferView","indexOf","normalizeName","test","normalizeValue","iteratorFor","Headers","headers","append","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","arrayBuffer","readAsText","readBlobAsText","readArrayBufferAsText","formData","json","oldValue","callback","values","methods","Request","url","credentials","method","signal","upcased","toUpperCase","normalizeMethod","referrer","trim","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","redirectStatuses","redirect","RangeError","location","stack","init","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","PublicKeyFromString","coerce","instance","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","createRpcResult","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","context","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","executable","owner","rentEpoch","unitsConsumed","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetConfirmedBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockSignaturesRpcResult","GetConfirmedTransactionRpcResult","GetParsedConfirmedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcEndpoint","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","lastFetch","transactionSignatures","simulatedSignatures","_accountChangeSubscriptionCounter","_accountChangeSubscriptions","_programAccountChangeSubscriptionCounter","_programAccountChangeSubscriptions","_rootSubscriptionCounter","_rootSubscriptions","_signatureSubscriptionCounter","_signatureSubscriptions","_slotSubscriptionCounter","_slotSubscriptions","_logsSubscriptionCounter","_logsSubscriptions","_slotUpdateSubscriptionCounter","_slotUpdateSubscriptions","URL","client","commitmentOrConfig","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","endpoint","useHttps","makeWebsocketUrl","fetchWithMiddleware","too_many_requests_retries","waitTime","createRpcClient","requests","batch","createRpcBatchRequest","autoconnect","max_reconnects","Infinity","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","configArg","tokenMintAddress","_args","ownerAddress","mintAddress","getAccountInfoAndContext","publicKeys","extra","configOrCommitment","encoding","decodedSignature","Date","subscriptionCommitment","confirmPromise","subscriptionId","onSignature","timeoutMs","timeoutPromise","timeoutId","clearTimeout","promiseTimeout","duration","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","limit","getRecentBlockhashAndContext","_buildArgsAtLeastConfirmed","getBlock","endSlot","transactionDetails","getTransaction","firstAvailableBlock","getConfirmedBlockSignatures","highestConfirmedRoot","getSlot","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","getNonceAndContext","disableCache","expired","startTime","MS_PER_SLOT","transactionOrMessage","_recentBlockhash","includes","encodedTransaction","traceIndent","logTrace","sendEncodedTransaction","setInterval","clearInterval","rpcMethod","unsubscribeId","_resetSubscriptions","_updateSubscriptions","programKeys","slotKeys","slotUpdateKeys","signatureKeys","rootKeys","logsKeys","filters","mentions","notification","onAccountChange","subInfo","_unsubscribe","accountId","onProgramAccountChange","onLogs","onSlotChange","onSlotUpdate","override","onSignatureWithOptions","onRootChange","keypair","encoder","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","lockup","STAKE_INSTRUCTION_LAYOUTS","stakePubkey","stakeAuthorizationType","authorityOwner","authorityBase","authoritySeed","splitStakePubkey","sourceStakePubKey","StakeProgram","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","custodianPubkey","newAuthorized","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","sha3","ethAddress","rawAddress","ethAddressInstructionIndex","recoveryId","pkey","publicKeyCreate","messageHash","recid","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","authorizedVoterPubkey","authorizedWithdrawerPubkey","votes","credits","lastEpochCredits","va","sendAndConfirmRawTransaction","http","devnet","testnet","https","clusterApiUrl","cluster","tls","LAMPORTS_PER_SOL","path","hexlify","topics","param","MAX_VALUE","Uint32Array","h0","h1","h4","h5","h6","h7","blocks","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","password","dkLen","innerLen","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","_X","arraycopy","blockxor","salsa20_8","R","src","srcPos","destPos","checkBufferish","ensureInteger","_scrypt","XY","totalOps","i1","Bi","currentOp","lastPercent10","stop","i0","nextTick","setImmediate","incrementalSMix","steps","percent10","derivedKey","lib","scrypt","progressCallback","lastProgress","progress","syncScrypt"],"sourceRoot":""}